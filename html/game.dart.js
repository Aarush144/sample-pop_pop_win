// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.DateImplementation = {"":
 ["millisecondsSinceEpoch?", "isUtc"],
 "super": "Object",
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Date))
    return false;
  return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$lt$1: function(other) {
  return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$le$1: function(other) {
  return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$gt$1: function(other) {
  return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$ge$1: function(other) {
  return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 compareTo$1: function(other) {
  return $.compareTo(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 hashCode$0: function() {
  return this.millisecondsSinceEpoch;
},
 toString$0: function() {
  var t1 = new $.DateImplementation_toString_fourDigits();
  var t2 = new $.DateImplementation_toString_threeDigits();
  var t3 = new $.DateImplementation_toString_twoDigits();
  var y = t1.call$1(this.get$year());
  var m = t3.call$1(this.get$month());
  var d = t3.call$1(this.get$day());
  var h = t3.call$1(this.get$hour());
  var min = t3.call$1(this.get$minute());
  var sec = t3.call$1(this.get$second());
  var ms = t2.call$1(this.get$millisecond());
  if (this.isUtc === true)
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms) + 'Z';
  else
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms);
},
 add$1: function(duration) {
  return $.Date_Date$fromMillisecondsSinceEpoch($.add(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
},
 difference$1: function(other) {
  return $.Duration$(0, 0, $.sub(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch()), 0, 0);
},
 get$year: function() {
  return $.Primitives_getYear(this);
},
 get$month: function() {
  return $.Primitives_getMonth(this);
},
 get$day: function() {
  return $.Primitives_getDay(this);
},
 get$hour: function() {
  return $.Primitives_getHours(this);
},
 get$minute: function() {
  return $.Primitives_getMinutes(this);
},
 get$second: function() {
  return $.Primitives_getSeconds(this);
},
 get$millisecond: function() {
  return $.Primitives_getMilliseconds(this);
},
 DateImplementation$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
  var t1 = this.millisecondsSinceEpoch;
  if ($.gtB($.abs(t1), 8640000000000000))
    throw $.$$throw($.ArgumentError$(t1));
  t1 = this.isUtc;
  if (t1 == null)
    throw $.$$throw($.ArgumentError$(t1));
},
 DateImplementation$now$0: function() {
  $.Primitives_lazyAsJsDate(this);
},
 is$Date: true
};

$$.ExceptionImplementation = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return t1 == null ? 'Exception' : 'Exception: ' + $.S(t1);
},
 is$Exception: true
};

$$.FutureImpl = {"":
 ["_isComplete", "_lib0_value?", "_exception", "_stackTrace", "_exceptionHandled", "_successListeners", "_exceptionHandlers", "_completionListeners"],
 "super": "Object",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw(t1);
  return this._lib0_value;
},
 get$exception: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._exception;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 then$1: function(onSuccess) {
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true)
    this._successListeners.push(onSuccess);
  else if (this._exceptionHandled !== true)
    throw $.$$throw(this._exception);
},
 handleException$1: function(onException) {
  if (this._exceptionHandled === true)
    return;
  if (this._isComplete) {
    var t1 = this._exception;
    if (!(t1 == null))
      this._exceptionHandled = onException.call$1(t1);
  } else
    this._exceptionHandlers.push(onException);
},
 _complete$0: function() {
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (var t1 = $.iterator(this._exceptionHandlers); t1.hasNext$0() === true;) {
        var handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = $.iterator(this._successListeners); t1.hasNext$0() === true;) {
        var listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (this._exceptionHandled !== true && this._successListeners.length > 0)
      throw $.$$throw(this._exception);
  } finally {
    for (t1 = $.iterator(this._completionListeners); t1.hasNext$0() === true;) {
      var listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 _setValue$1: function(value) {
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._lib0_value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.ArgumentError$(null));
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
}
};

$$.CompleterImpl = {"":
 ["_futureImpl"],
 "super": "Object",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception,null)
}
};

$$.HashMapImplementation = {"":
 ["_keys", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  if (key == null)
    throw $.$$throw($.CTC0);
  var t1 = $.hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1, 0, 0);
  var hash = (t1 & this._keys.length - 1) >>> 0;
  for (var numberOfProbes = 1, insertionIndex = -1; true;) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC15 === existingKey)
      insertionIndex = hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    if (hash !== (hash | 0))
      return this._probeForAdding$1$bailout(2, numberOfProbes0, key, insertionIndex, hash);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForAdding$1$bailout: function(state, env0, env1, env2, env3) {
  switch (state) {
    case 1:
      var key = env0;
      t1 = env1;
      break;
    case 2:
      numberOfProbes0 = env0;
      key = env1;
      insertionIndex = env2;
      hash = env3;
      break;
  }
  switch (state) {
    case 0:
      if (key == null)
        throw $.$$throw($.CTC0);
      var t1 = $.hashCode(key);
    case 1:
      state = 0;
      var hash = $.and(t1, this._keys.length - 1);
      var numberOfProbes = 1;
      var insertionIndex = -1;
    case 2:
      L0:
        while (true)
          switch (state) {
            case 0:
              if (!true)
                break L0;
              t1 = this._keys;
              if (hash !== (hash | 0))
                throw $.iae(hash);
              if (hash < 0 || hash >= t1.length)
                throw $.ioore(hash);
              var existingKey = t1[hash];
              if (existingKey == null) {
                if (insertionIndex < 0)
                  return hash;
                return insertionIndex;
              } else if ($.eqB(existingKey, key))
                return hash;
              else if (insertionIndex < 0 && $.CTC15 === existingKey)
                insertionIndex = hash;
              var numberOfProbes0 = numberOfProbes + 1;
              hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
            case 2:
              state = 0;
              numberOfProbes = numberOfProbes0;
          }
  }
},
 _probeForLookup$1: function(key) {
  if (key == null)
    throw $.$$throw($.CTC0);
  var hash = $.and($.hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (var numberOfProbes = 1; true;) {
    var t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForLookup$1$bailout: function(state, key, hash) {
  for (var numberOfProbes = 1; true;) {
    var t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries = $.add(this._numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  var capacity = this._keys.length;
  if (typeof newNumberOfEntries !== 'number')
    throw $.iae(newNumberOfEntries);
  var numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  var t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity = this._keys.length;
  this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
  var oldKeys = this._keys;
  var oldValues = this._values;
  this._keys = $.ListImplementation_List(newCapacity);
  this._values = $.ListImplementation_List(newCapacity);
  for (var i = 0; i < capacity; ++i) {
    if (i >= oldKeys.length)
      throw $.ioore(i);
    var key = oldKeys[i];
    if (key == null || key === $.CTC15)
      continue;
    if (i >= oldValues.length)
      throw $.ioore(i);
    var value = oldValues[i];
    var newIndex = this._probeForAdding$1(key);
    var t1 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = key;
    t1 = this._values;
    if (newIndex >= t1.length)
      throw $.ioore(newIndex);
    t1[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  var t1 = this._keys;
  var length$ = t1.length;
  for (var t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  this._ensureCapacity$0();
  var index = this._probeForAdding$1(key);
  var t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CTC15) {
    t1 = this._numberOfEntries;
    if (typeof t1 !== 'number')
      return this.operator$indexSet$2$bailout(1, key, value, t1, index);
    this._numberOfEntries = t1 + 1;
  }
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$indexSet$2$bailout: function(state, env0, env1, env2, env3) {
  switch (state) {
    case 1:
      var key = env0;
      var value = env1;
      t1 = env2;
      index = env3;
      break;
  }
  switch (state) {
    case 0:
      this._ensureCapacity$0();
      var index = this._probeForAdding$1(key);
      var t1 = this._keys;
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= t1.length)
        throw $.ioore(index);
      t1 = t1[index];
    case 1:
      if (state === 1 || state === 0 && (t1 == null || t1 === $.CTC15))
        switch (state) {
          case 0:
            t1 = this._numberOfEntries;
          case 1:
            state = 0;
            this._numberOfEntries = $.add(t1, 1);
        }
      t1 = this._keys;
      if (index >= t1.length)
        throw $.ioore(index);
      t1[index] = key;
      t1 = this._values;
      if (index >= t1.length)
        throw $.ioore(index);
      t1[index] = value;
  }
},
 operator$index$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  var t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 putIfAbsent$2: function(key, ifAbsent) {
  var index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    var t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  }
  var value = ifAbsent.call$0();
  this.operator$indexSet$2(key, value);
  return value;
},
 remove$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = $.sub(this._numberOfEntries, 1);
    var t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    var value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC15;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 isEmpty$0: function() {
  return $.eq(this._numberOfEntries, 0);
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$ = this._keys.length;
  for (var i = 0; i < length$; ++i) {
    var t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    var key = t1[i];
    if (!(key == null) && !(key === $.CTC15)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 getKeys$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.i_10 = 0;
  this.forEach$1(new $.HashMapImplementation_getKeys__(list, t1));
  return list;
},
 getValues$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.i_1 = 0;
  this.forEach$1(new $.HashMapImplementation_getValues__(list, t1));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 HashMapImplementation$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $.HashMapImplementation__computeLoadLimit(8);
  this._keys = $.ListImplementation_List(8);
  this._values = $.ListImplementation_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"":
 [],
 "super": "Object"
};

$$.KeyValuePair = {"":
 ["key?", "value="],
 "super": "Object"
};

$$.LinkedHashMapImplementation = {"":
 ["_list", "_map"],
 "super": "Object",
 operator$indexSet$2: function(key, value) {
  if (this._map.containsKey$1(key) === true)
    this._map.operator$index$1(key).get$element().set$value(value);
  else {
    this._list.addLast$1($.KeyValuePair$(key, value));
    this._map.operator$indexSet$2(key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = this._map.operator$index$1(key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 putIfAbsent$2: function(key, ifAbsent) {
  var value = this.operator$index$1(key);
  if (this.operator$index$1(key) == null && this.containsKey$1(key) !== true) {
    value = ifAbsent.call$0();
    this.operator$indexSet$2(key, value);
  }
  return value;
},
 getKeys$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.index_10 = 0;
  this._list.forEach$1(new $.LinkedHashMapImplementation_getKeys__(list, t1));
  return list;
},
 getValues$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.index_1 = 0;
  this._list.forEach$1(new $.LinkedHashMapImplementation_getValues__(list, t1));
  return list;
},
 forEach$1: function(f) {
  this._list.forEach$1(new $.LinkedHashMapImplementation_forEach__(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  return $.get$length(this._map);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 clear$0: function() {
  this._map.clear$0();
  this._list.clear$0();
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 LinkedHashMapImplementation$0: function() {
  this._map = $.HashMapImplementation$();
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.DoubleLinkedQueueEntry = {"":
 ["_previous!", "_next=", "_element?"],
 "super": "Object",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"":
 ["_previous", "_next", "_element"],
 "super": "DoubleLinkedQueueEntry",
 remove$0: function() {
  throw $.$$throw($.CTC16);
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.CTC16);
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"":
 ["_sentinel"],
 "super": "Object",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this.addLast$1(value);
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection); t1.hasNext$0() === true;)
    this.add$1(t1.next$0());
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 removeFirst$0: function() {
  return this._sentinel._next.remove$0();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length__(t1));
  return t1.counter_1;
},
 isEmpty$0: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
    entry = nextEntry;
  }
},
 every$1: function(f) {
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) !== true)
      return false;
    entry = nextEntry;
  }
  return true;
},
 map$1: function(f) {
  var other = $.Queue_Queue();
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    $.addLast(other, f.call$1(entry.get$_element()));
    entry = nextEntry;
  }
  return other;
},
 filter$1: function(f) {
  var other = $.Queue_Queue();
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      $.addLast(other, entry.get$_element());
    entry = nextEntry;
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"":
 ["_sentinel", "_currentEntry"],
 "super": "Object",
 hasNext$0: function() {
  return !(this._currentEntry.get$_next() === this._sentinel);
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC11);
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$.JSSyntaxRegExp = {"":
 ["_lib0_pattern", "_multiLine", "_ignoreCase"],
 "super": "Object",
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 get$pattern: function() {
  return this._lib0_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$RegExp: true
};

$$.StringBufferImpl = {"":
 ["_buffer", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 isEmpty$0: function() {
  return this._length === 0;
},
 add$1: function(obj) {
  var str = $.toString(obj);
  if (str == null || $.isEmpty(str) === true)
    return this;
  $.add$1(this._buffer, str);
  this._length = $.add(this._length, $.get$length(str));
  return this;
},
 addAll$1: function(objects) {
  for (var t1 = $.iterator(objects); t1.hasNext$0() === true;)
    this.add$1(t1.next$0());
  return this;
},
 clear$0: function() {
  this._buffer = $.ListImplementation_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  if ($.get$length(this._buffer) === 0)
    return '';
  if ($.get$length(this._buffer) === 1)
    return $.index(this._buffer, 0);
  var result = $.StringImplementation_concatAll(this._buffer);
  $.clear(this._buffer);
  $.add$1(this._buffer, result);
  return result;
},
 StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.Duration = {"":
 ["inMilliseconds?"],
 "super": "Object",
 get$inHours: function() {
  return $.tdiv(this.inMilliseconds, 3600000);
},
 get$inMinutes: function() {
  return $.tdiv(this.inMilliseconds, 60000);
},
 get$inSeconds: function() {
  return $.tdiv(this.inMilliseconds, 1000);
},
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Duration))
    return false;
  return this.inMilliseconds === other.inMilliseconds;
},
 hashCode$0: function() {
  return $.hashCode(this.inMilliseconds);
},
 compareTo$1: function(other) {
  return $.compareTo(this.inMilliseconds, other.get$inMilliseconds());
},
 toString$0: function() {
  var t1 = new $.Duration_toString_threeDigits();
  var t2 = new $.Duration_toString_twoDigits();
  var t3 = this.inMilliseconds;
  if (t3 < 0)
    return '-' + $.S($.Duration$(0, 0, -t3, 0, 0));
  var twoDigitMinutes = t2.call$1($.remainder(this.get$inMinutes(), 60));
  var twoDigitSeconds = t2.call$1($.remainder(this.get$inSeconds(), 60));
  var threeDigitMs = t1.call$1($.remainder(t3, 1000));
  return $.S(this.get$inHours()) + ':' + $.S(twoDigitMinutes) + ':' + $.S(twoDigitSeconds) + '.' + $.S(threeDigitMs);
},
 is$Duration: true
};

$$.ArgumentError = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return 'Illegal argument(s): ' + $.S(t1);
  return 'Illegal argument(s)';
}
};

$$.IllegalArgumentException = {"":
 ["message"],
 "super": "ArgumentError"
};

$$.NoSuchMethodError = {"":
 ["_receiver", "_functionName", "_arguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var sb = $.StringBuffer_StringBuffer('');
  for (var t1 = this._arguments, i = 0; i < t1.length; ++i) {
    if (i > 0)
      $.add$1(sb, ', ');
    if (i >= t1.length)
      throw $.ioore(i);
    $.add$1(sb, $.NoSuchMethodError_safeToString(t1[i]));
  }
  t1 = this._existingArgumentNames;
  if (t1 == null)
    return 'NoSuchMethodError : method not found: \'' + $.S(this._functionName) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Arguments: [' + $.S(sb) + ']';
  else {
    var actualParameters = $.toString(sb);
    sb = $.StringBuffer_StringBuffer('');
    for (i = 0; $.ltB(i, $.get$length(t1)); ++i) {
      if (i > 0)
        $.add$1(sb, ', ');
      $.add$1(sb, $.index(t1, i));
    }
    var formalParameters = $.toString(sb);
    t1 = this._functionName;
    return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t1) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t1) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t1) + '(' + $.S(formalParameters) + ')';
  }
}
};

$$.IndexOutOfRangeException = {"":
 ["_value?"],
 "super": "Object",
 toString$0: function() {
  return 'IndexOutOfRangeException: ' + $.S(this._value);
},
 is$Exception: true
};

$$.IllegalAccessException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Attempt to modify an immutable object';
},
 is$Exception: true
};

$$.ObjectNotClosureException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Object is not closure';
},
 is$Exception: true
};

$$.StackOverflowException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Stack Overflow';
},
 is$Exception: true
};

$$.FormatException = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'FormatException: ' + $.S(this.message);
},
 is$Exception: true
};

$$.NullPointerException = {"":
 ["functionName", "arguments"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.functionName;
  if (t1 == null)
    return this.get$exceptionName();
  else
    return $.S(this.get$exceptionName()) + ' : method: \'' + $.S(t1) + '\'\n' + 'Receiver: null\n' + 'Arguments: ' + $.S(this.arguments);
},
 get$exceptionName: function() {
  return 'NullPointerException';
},
 is$Exception: true
};

$$.NoMoreElementsException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'NoMoreElementsException';
},
 is$Exception: true
};

$$.EmptyQueueException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'EmptyQueueException';
},
 is$Exception: true
};

$$.UnsupportedOperationException = {"":
 ["_message"],
 "super": "Object",
 toString$0: function() {
  return 'UnsupportedOperationException: ' + this._message;
},
 is$Exception: true
};

$$.NotImplementedException = {"":
 ["_message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this._message;
  return !(t1 == null) ? 'NotImplementedException: ' + $.S(t1) : 'NotImplementedException';
},
 is$Exception: true
};

$$.IllegalJSRegExpException = {"":
 ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.S(this._pattern) + '\' \'' + this._errmsg + '\'';
},
 is$Exception: true
};

$$.RuntimeError = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'RuntimeError: ' + this.message;
},
 is$Exception: true
};

$$.FutureNotCompleteException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future has not been completed';
},
 is$Exception: true
};

$$.FutureAlreadyCompleteException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future already completed';
},
 is$Exception: true
};

$$.Object = {"":
 [],
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 hashCode$0: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.ListIterator = {"":
 ["i", "list"],
 "super": "Object",
 hasNext$0: function() {
  return this.i < this.list.length;
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.NoMoreElementsException$());
  var value = this.list[this.i];
  this.i = this.i + 1;
  return value;
}
};

$$.StackTrace = {"":
 ["stack"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.stack;
  return !(t1 == null) ? t1 : '';
}
};

$$.Closure = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.CastErrorImplementation = {"":
 ["actualType", "expectedType"],
 "super": "Object",
 toString$0: function() {
  return 'CastError: Casting value of type ' + $.S(this.actualType) + ' to' + ' incompatible type ' + $.S(this.expectedType);
}
};

$$.ConstantMap = {"":
 ["length?", "_jsObject", "_lib4_keys"],
 "super": "Object",
 containsKey$1: function(key) {
  if ($.eqB(key, '__proto__'))
    return false;
  return $.jsHasOwnProperty(this._jsObject, key);
},
 operator$index$1: function(key) {
  if (this.containsKey$1(key) !== true)
    return;
  return this._jsObject[key];
},
 forEach$1: function(f) {
  $.forEach(this._lib4_keys, new $.ConstantMap_forEach_anon(this, f));
},
 getKeys$0: function() {
  return this._lib4_keys;
},
 getValues$0: function() {
  var result = [];
  $.forEach(this._lib4_keys, new $.ConstantMap_getValues_anon(this, result));
  return result;
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _throwImmutable$0: function() {
  throw $.$$throw($.CTC24);
},
 operator$indexSet$2: function(key, val) {
  return this._throwImmutable$0();
},
 putIfAbsent$2: function(key, ifAbsent) {
  return this._throwImmutable$0();
},
 remove$1: function(key) {
  return this._throwImmutable$0();
},
 clear$0: function() {
  return this._throwImmutable$0();
},
 is$Map: function() { return true; }
};

$$.MetaInfo = {"":
 ["_tag?", "_tags", "_lib4_set?"],
 "super": "Object",
 _lib4_set$2: function(arg0, arg1) { return this._lib4_set.call$2(arg0, arg1); }
};

$$._AbstractWorkerEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._AudioContextEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$._BatteryManagerEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._BodyElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 get$message: function() {
  return this.operator$index$1('message');
},
 get$resize: function() {
  return this.operator$index$1('resize');
}
};

$$._DOMApplicationCacheEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$progress: function() {
  return this.operator$index$1('progress');
}
};

$$._DedicatedWorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_WorkerContextEventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$.EmptyElementRect = {"":
 ["client", "offset", "scroll", "bounding", "clientRects"],
 "super": "Object"
};

$$._DocumentEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$touchMove: function() {
  return this.operator$index$1('touchmove');
}
};

$$._ElementAttributeMap = {"":
 ["_lib_element?"],
 "super": "Object",
 containsKey$1: function(key) {
  return this._lib_element.$dom_hasAttribute$1(key);
},
 operator$index$1: function(key) {
  return this._lib_element.$dom_getAttribute$1(key);
},
 operator$indexSet$2: function(key, value) {
  this._lib_element.$dom_setAttribute$2(key, $.S(value));
},
 putIfAbsent$2: function(key, ifAbsent) {
  if (this.containsKey$1(key) !== true)
    this.operator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 remove$1: function(key) {
  var t1 = this._lib_element;
  var value = t1.$dom_getAttribute$1(key);
  t1.$dom_removeAttribute$1(key);
  return value;
},
 clear$0: function() {
  var attributes = this._lib_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.clear$0$bailout(1, attributes);
  for (var i = attributes.length - 1; i >= 0; --i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    this.remove$1(attributes[i].get$name());
  }
},
 clear$0$bailout: function(state, attributes) {
  for (var i = $.sub($.get$length(attributes), 1); $.geB(i, 0); i = $.sub(i, 1))
    this.remove$1($.index(attributes, i).get$name());
},
 forEach$1: function(f) {
  var attributes = this._lib_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.forEach$1$bailout(1, f, attributes);
  for (var len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    var item = attributes[i];
    f.call$2(item.get$name(), item.get$value());
  }
},
 forEach$1$bailout: function(state, f, attributes) {
  for (var len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    var item = $.index(attributes, i);
    f.call$2(item.get$name(), item.get$value());
  }
},
 getKeys$0: function() {
  var attributes = this._lib_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.getKeys$0$bailout(1, attributes);
  var t2 = attributes.length;
  var keys = $.ListImplementation_List(t2);
  for (var len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    var t1 = attributes[i].get$name();
    if (i >= t2)
      throw $.ioore(i);
    keys[i] = t1;
  }
  return keys;
},
 getKeys$0$bailout: function(state, attributes) {
  var keys = $.ListImplementation_List($.get$length(attributes));
  for (var len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    var t1 = $.index(attributes, i).get$name();
    if (i >= keys.length)
      throw $.ioore(i);
    keys[i] = t1;
  }
  return keys;
},
 getValues$0: function() {
  var attributes = this._lib_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.getValues$0$bailout(1, attributes);
  var t2 = attributes.length;
  var values = $.ListImplementation_List(t2);
  for (var len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    var t1 = attributes[i].get$value();
    if (i >= t2)
      throw $.ioore(i);
    values[i] = t1;
  }
  return values;
},
 getValues$0$bailout: function(state, attributes) {
  var values = $.ListImplementation_List($.get$length(attributes));
  for (var len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    var t1 = $.index(attributes, i).get$value();
    if (i >= values.length)
      throw $.ioore(i);
    values[i] = t1;
  }
  return values;
},
 get$length: function() {
  return $.get$length(this._lib_element.get$$$dom_attributes());
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 is$Map: function() { return true; }
};

$$._SimpleClientRect = {"":
 ["left?", "top?", "width?", "height?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.left, other.get$left()) && $.eqB(this.top, other.get$top()) && $.eqB(this.width, other.get$width()) && $.eqB(this.height, other.get$height());
},
 toString$0: function() {
  return '(' + $.S(this.left) + ', ' + $.S(this.top) + ', ' + $.S(this.width) + ', ' + $.S(this.height) + ')';
}
};

$$._ElementRectImpl = {"":
 ["client", "offset", "scroll", "_boundingClientRect", "_clientRects"],
 "super": "Object"
};

$$._ElementEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$touchMove: function() {
  return this.operator$index$1('touchmove');
}
};

$$._EventSourceEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$message: function() {
  return this.operator$index$1('message');
},
 get$open: function() {
  return this.operator$index$1('open');
},
 open$2: function(arg0, arg1) { return this.get$open().call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._EventsImpl = {"":
 ["_ptr"],
 "super": "Object",
 operator$index$1: function(type) {
  return $._EventListenerListImpl$(this._ptr, type);
}
};

$$._EventListenerListImpl = {"":
 ["_ptr", "_type"],
 "super": "Object",
 add$2: function(listener, useCapture) {
  this._add$2(listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener,false)
},
 remove$2: function(listener, useCapture) {
  this._lib_remove$2(listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener,false)
},
 _add$2: function(listener, useCapture) {
  this._ptr.$dom_addEventListener$3(this._type, listener, useCapture);
},
 _lib_remove$2: function(listener, useCapture) {
  this._ptr.$dom_removeEventListener$3(this._type, listener, useCapture);
}
};

$$._FileReaderEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 get$loadEnd: function() {
  return this.operator$index$1('loadend');
},
 get$progress: function() {
  return this.operator$index$1('progress');
}
};

$$._FileWriterEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 get$error: function() {
  return this.operator$index$1('error');
},
 get$progress: function() {
  return this.operator$index$1('progress');
}
};

$$._FrameSetElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 get$message: function() {
  return this.operator$index$1('message');
},
 get$resize: function() {
  return this.operator$index$1('resize');
}
};

$$._HttpRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 get$loadEnd: function() {
  return this.operator$index$1('loadend');
},
 get$progress: function() {
  return this.operator$index$1('progress');
}
};

$$._HttpRequestUploadEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 get$loadEnd: function() {
  return this.operator$index$1('loadend');
},
 get$progress: function() {
  return this.operator$index$1('progress');
}
};

$$._IDBDatabaseEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._IDBOpenDBRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_IDBRequestEventsImpl"
};

$$._IDBRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._IDBTransactionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); },
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._IDBVersionChangeRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_IDBRequestEventsImpl"
};

$$._InputElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl"
};

$$._JavaScriptAudioNodeEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._LocalWindowEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 get$message: function() {
  return this.operator$index$1('message');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$progress: function() {
  return this.operator$index$1('progress');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$resize: function() {
  return this.operator$index$1('resize');
},
 get$touchMove: function() {
  return this.operator$index$1('touchmove');
}
};

$$._MediaElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$progress: function() {
  return this.operator$index$1('progress');
}
};

$$._MediaStreamEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MediaStreamTrackEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MediaStreamTrackListEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MessagePortEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._ListWrapper = {"":
 [],
 "super": "Object",
 iterator$0: function() {
  return $.iterator(this._lib_list);
},
 forEach$1: function(f) {
  return $.forEach(this._lib_list, f);
},
 map$1: function(f) {
  return $.map(this._lib_list, f);
},
 filter$1: function(f) {
  return $.filter(this._lib_list, f);
},
 every$1: function(f) {
  return $.every(this._lib_list, f);
},
 isEmpty$0: function() {
  return $.isEmpty(this._lib_list);
},
 get$length: function() {
  return $.get$length(this._lib_list);
},
 operator$index$1: function(index) {
  return $.index(this._lib_list, index);
},
 operator$indexSet$2: function(index, value) {
  $.indexSet(this._lib_list, index, value);
},
 set$length: function(newLength) {
  $.set$length(this._lib_list, newLength);
},
 add$1: function(value) {
  return $.add$1(this._lib_list, value);
},
 addLast$1: function(value) {
  return $.addLast(this._lib_list, value);
},
 addAll$1: function(collection) {
  return $.addAll(this._lib_list, collection);
},
 sort$1: function(compare) {
  return $.sort(this._lib_list, compare);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._lib_list, element, start);
},
 clear$0: function() {
  return $.clear(this._lib_list);
},
 removeLast$0: function() {
  return $.removeLast(this._lib_list);
},
 removeRange$2: function(start, rangeLength) {
  return $.removeRange(this._lib_list, start, rangeLength);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  return $.insertRange$3(this._lib_list, start, rangeLength, initialValue);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NodeListWrapper = {"":
 ["_lib_list"],
 "super": "_ListWrapper",
 filter$1: function(f) {
  return $._NodeListWrapper$($.filter(this._lib_list, f));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NotificationEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._PeerConnection00EventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$open: function() {
  return this.operator$index$1('open');
},
 open$2: function(arg0, arg1) { return this.get$open().call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._RTCPeerConnectionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$open: function() {
  return this.operator$index$1('open');
},
 open$2: function(arg0, arg1) { return this.get$open().call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._SVGElementInstanceEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$0: function() { return this.get$load().call$0(); },
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$resize: function() {
  return this.operator$index$1('resize');
}
};

$$._SharedWorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_WorkerContextEventsImpl",
 get$connect: function() {
  return this.operator$index$1('connect');
},
 connect$2: function(arg0, arg1) { return this.get$connect().call$2(arg0, arg1); }
};

$$._SpeechRecognitionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$start: function() {
  return this.operator$index$1('start');
},
 start$1: function(arg0) { return this.get$start().call$1(arg0); }
};

$$._TextTrackCueEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackListEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._WebSocketEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$error: function() {
  return this.operator$index$1('error');
},
 get$message: function() {
  return this.operator$index$1('message');
},
 get$open: function() {
  return this.operator$index$1('open');
},
 open$2: function(arg0, arg1) { return this.get$open().call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._WorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$._WorkerEventsImpl = {"":
 ["_ptr"],
 "super": "_AbstractWorkerEventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._MeasurementRequest = {"":
 ["computeValue", "completer?", "value=", "exception="],
 "super": "Object",
 computeValue$0: function() { return this.computeValue.call$0(); }
};

$$._MeasurementScheduler = {"":
 ["_callback?"],
 "super": "Object",
 _callback$0: function() { return this._callback.call$0(); },
 _callback$2: function(arg0, arg1) { return this._callback.call$2(arg0, arg1); },
 maybeSchedule$0: function() {
  if (this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = true;
  this._schedule$0();
},
 _schedule$0: function() {
},
 _onCallback$0: function() {
  if (!this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = false;
  this._callback$0();
}
};

$$._PostMessageScheduler = {"":
 ["_MEASUREMENT_MESSAGE", "_nextMeasurementFrameScheduled", "_callback"],
 "super": "_MeasurementScheduler",
 _schedule$0: function() {
  $.window().postMessage$2(this._MEASUREMENT_MESSAGE, '*');
},
 _handleMessage$1: function(e) {
  this._onCallback$0();
},
 get$_handleMessage: function() { return new $.BoundClosure(this, '_handleMessage$1'); },
 _PostMessageScheduler$1: function(callback) {
  $.add$1($.window().get$on().get$message(), this.get$_handleMessage());
}
};

$$._MutationObserverScheduler = {"":
 ["_observer", "_dummy", "_nextMeasurementFrameScheduled", "_callback"],
 "super": "_MeasurementScheduler",
 _schedule$0: function() {
  var t1 = this._dummy.get$hidden() !== true;
  this._dummy.set$hidden(t1);
},
 _handleMutation$2: function(mutations, observer) {
  this._onCallback$0();
},
 get$_handleMutation: function() { return new $.BoundClosure1(this, '_handleMutation$2'); },
 _MutationObserverScheduler$1: function(callback) {
  this._observer = $.MutationObserver_MutationObserver(this.get$_handleMutation());
  this._dummy = $.DivElement_DivElement();
  this._observer.observe$3$attributes(this._dummy, $.makeLiteralMap([]), true);
}
};

$$._DOMWindowCrossFrameImpl = {"":
 ["_window"],
 "super": "Object",
 get$top: function() {
  return $._DOMWindowCrossFrameImpl__createSafe(this._window.top);
},
 close$0: function() {
  return this._window.close();
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1 = messagePorts == null;
  var t2 = this._window;
  if (t1)
    t2.postMessage(message,targetOrigin);
  else
    t2.postMessage(message,targetOrigin,messagePorts);
},
 postMessage$2: function(message,targetOrigin) {
  return this.postMessage$3(message,targetOrigin,null)
}
};

$$._FixedSizeListIterator = {"":
 ["_lib_length", "_array", "_pos"],
 "super": "_VariableSizeListIterator",
 hasNext$0: function() {
  var t1 = this._lib_length;
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1);
  return t1 > this._pos;
},
 hasNext$0$bailout: function(state, t1) {
  return $.gt(t1, this._pos);
}
};

$$._VariableSizeListIterator = {"":
 [],
 "super": "Object",
 hasNext$0: function() {
  var t1 = $.get$length(this._array);
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1);
  return t1 > this._pos;
},
 hasNext$0$bailout: function(state, t1) {
  return $.gt(t1, this._pos);
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC11);
  var t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  var t3 = this._pos;
  this._pos = t3 + 1;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state, t1) {
  var t3 = this._pos;
  this._pos = t3 + 1;
  return $.index(t1, t3);
}
};

$$._Manager = {"":
 ["nextIsolateId=", "currentManagerId?", "nextManagerId", "currentContext=", "rootContext=", "topEventLoop?", "fromCommandLine?", "isWorker?", "supportsWorkers", "isolates?", "mainManager?", "managers?"],
 "super": "Object",
 get$useWorkers: function() {
  return this.supportsWorkers;
},
 get$needSerialization: function() {
  return this.get$useWorkers();
},
 _nativeDetectEnvironment$0: function() {
    this.isWorker = $isWorker;
    this.supportsWorkers = $supportsWorkers;
    this.fromCommandLine = typeof(window) == 'undefined';
  
},
 _nativeInitWorkerMessageHandler$0: function() {
    $globalThis.onmessage = function (e) {
      _IsolateNatives._processWorkerMessage(this.mainManager, e);
    }
  
},
 maybeCloseWorker$0: function() {
  if ($.isEmpty(this.isolates) === true)
    this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'close'])));
},
 _Manager$0: function() {
  this._nativeDetectEnvironment$0();
  this.topEventLoop = $._EventLoop$();
  this.isolates = $.HashMapImplementation$();
  this.managers = $.HashMapImplementation$();
  if (this.isWorker === true) {
    this.mainManager = $._MainManagerStub$();
    this._nativeInitWorkerMessageHandler$0();
  }
}
};

$$._IsolateContext = {"":
 ["id?", "ports?", "isolateStatics"],
 "super": "Object",
 initGlobals$0: function() {
$initGlobals(this);
},
 eval$1: function(code) {
  var old = $._globalState().get$currentContext();
  $._globalState().set$currentContext(this);
  this._setGlobals$0();
  var result = null;
  try {
    result = code.call$0();
  } finally {
    var t1 = old;
    $._globalState().set$currentContext(t1);
    if (!(old == null))
      old._setGlobals$0();
  }
  return result;
},
 _setGlobals$0: function() {
$setGlobals(this);
},
 lookup$1: function(portId) {
  return $.index(this.ports, portId);
},
 register$2: function(portId, port) {
  if (this.ports.containsKey$1(portId) === true)
    throw $.$$throw($.ExceptionImplementation$('Registry: ports must be registered only once.'));
  $.indexSet(this.ports, portId, port);
  $.indexSet($._globalState().get$isolates(), this.id, this);
},
 unregister$1: function(portId) {
  this.ports.remove$1(portId);
  if ($.isEmpty(this.ports) === true)
    $._globalState().get$isolates().remove$1(this.id);
},
 _IsolateContext$0: function() {
  var t1 = $._globalState();
  var t2 = t1.get$nextIsolateId();
  t1.set$nextIsolateId($.add(t2, 1));
  this.id = t2;
  this.ports = $.HashMapImplementation$();
  this.initGlobals$0();
}
};

$$._EventLoop = {"":
 ["events"],
 "super": "Object",
 enqueue$3: function(isolate, fn, msg) {
  $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
},
 dequeue$0: function() {
  var t1 = this.events;
  if ($.isEmpty(t1) === true)
    return;
  return t1.removeFirst$0();
},
 runIteration$0: function() {
  var event$ = this.dequeue$0();
  if (event$ == null) {
    if ($._globalState().get$isWorker() === true)
      $._globalState().maybeCloseWorker$0();
    else if (!($._globalState().get$rootContext() == null) && $._globalState().get$isolates().containsKey$1($._globalState().get$rootContext().get$id()) === true && $._globalState().get$fromCommandLine() === true && $.isEmpty($._globalState().get$rootContext().get$ports()) === true)
      throw $.$$throw($.ExceptionImplementation$('Program exited with open ReceivePorts.'));
    return false;
  }
  event$.process$0();
  return true;
},
 _runHelper$0: function() {
  if (!($._window() == null))
    new $._EventLoop__runHelper_next(this).call$0();
  else
    for (; this.runIteration$0() === true;)
      ;
},
 run$0: function() {
  if ($._globalState().get$isWorker() !== true)
    this._runHelper$0();
  else
    try {
      this._runHelper$0();
    } catch (exception) {
      var t1 = $.unwrapException(exception);
      var e = t1;
      var trace = $.getTraceFromException(exception);
      $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'error', 'msg', $.S(e) + '\n' + $.S(trace)])));
    }

}
};

$$._IsolateEvent = {"":
 ["isolate", "fn", "message?"],
 "super": "Object",
 process$0: function() {
  this.isolate.eval$1(this.fn);
}
};

$$._MainManagerStub = {"":
 [],
 "super": "Object",
 get$id: function() {
  return 0;
},
 postMessage$1: function(msg) {
$globalThis.postMessage(msg);
}
};

$$._BaseSendPort = {"":
 ["_isolateId?"],
 "super": "Object",
 _checkReplyTo$1: function(replyTo) {
  if (!(replyTo == null) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_NativeJsSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_WorkerSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_BufferingSendPort))
    throw $.$$throw($.ExceptionImplementation$('SendPort.send: Illegal replyTo port type'));
},
 call$1: function(message) {
  var completer = $.Completer_Completer();
  var port = $._ReceivePortImpl$();
  this.send$2(message, port.toSendPort$0());
  port.receive$1(new $._BaseSendPort_call_anon(port, completer));
  return completer.get$future();
},
 is$SendPort: true
};

$$._NativeJsSendPort = {"":
 ["_receivePort?", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$_NativeJsSendPort && $.eqB(this._receivePort, other._receivePort);
},
 hashCode$0: function() {
  return this._receivePort.get$_id();
},
 is$_NativeJsSendPort: true,
 is$SendPort: true
};

$$._WorkerSendPort = {"":
 ["_workerId?", "_receivePortId", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
},
 operator$eq$1: function(other) {
  if (typeof other === 'object' && other !== null && !!other.is$_WorkerSendPort)
    var t1 = $.eqB(this._workerId, other._workerId) && $.eqB(this._isolateId, other._isolateId) && $.eqB(this._receivePortId, other._receivePortId);
  else
    t1 = false;
  return t1;
},
 hashCode$0: function() {
  return $.xor($.xor($.shl(this._workerId, 16), $.shl(this._isolateId, 8)), this._receivePortId);
},
 is$_WorkerSendPort: true,
 is$SendPort: true
};

$$._ReceivePortImpl = {"":
 ["_id?", "_lib7_callback?"],
 "super": "Object",
 _lib7_callback$0: function() { return this._lib7_callback.call$0(); },
 _lib7_callback$2: function(arg0, arg1) { return this._lib7_callback.call$2(arg0, arg1); },
 receive$1: function(onMessage) {
  this._lib7_callback = onMessage;
},
 close$0: function() {
  this._lib7_callback = null;
  $._globalState().get$currentContext().unregister$1(this._id);
},
 toSendPort$0: function() {
  return $._NativeJsSendPort$(this, $._globalState().get$currentContext().get$id());
},
 _ReceivePortImpl$0: function() {
  $._globalState().get$currentContext().register$2(this._id, this);
}
};

$$._PendingSendPortFinder = {"":
 ["ports?", "_visited"],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
},
 visitList$1: function(list) {
  if (!($.index(this._visited, list) == null))
    return;
  $.indexSet(this._visited, list, true);
  $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
},
 visitMap$1: function(map) {
  if (!($.index(this._visited, map) == null))
    return;
  $.indexSet(this._visited, map, true);
  $.forEach(map.getValues$0(), new $._PendingSendPortFinder_visitMap_anon(this));
},
 visitSendPort$1: function(port) {
  if (!!port.is$_BufferingSendPort && port._port == null)
    this.ports.push(port.get$_futurePort());
},
 _PendingSendPortFinder$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsSerializer = {"":
 ["_nextFreeRefId", "_visited"],
 "super": "_Serializer",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(x));
},
 visitNativeJsSendPort$1: function(port) {
  return ['sendport', $._globalState().get$currentManagerId(), port._isolateId, port._receivePort.get$_id()];
},
 visitWorkerSendPort$1: function(port) {
  return ['sendport', port._workerId, port._isolateId, port._receivePortId];
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsSerializer$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsCopier = {"":
 ["_visited"],
 "super": "_Copier",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(this.get$p()));
},
 visitNativeJsSendPort$1: function(port) {
  return $._NativeJsSendPort$(port._receivePort, port._isolateId);
},
 visitWorkerSendPort$1: function(port) {
  return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsCopier$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsDeserializer = {"":
 ["_deserialized"],
 "super": "_Deserializer",
 deserializeSendPort$1: function(x) {
  var managerId = $.index(x, 1);
  var isolateId = $.index(x, 2);
  var receivePortId = $.index(x, 3);
  if ($.eqB(managerId, $._globalState().get$currentManagerId())) {
    var isolate = $.index($._globalState().get$isolates(), isolateId);
    if (isolate == null)
      return;
    return $._NativeJsSendPort$(isolate.lookup$1(receivePortId), isolateId);
  } else
    return $._WorkerSendPort$(managerId, isolateId, receivePortId);
}
};

$$._JsVisitedMap = {"":
 ["tagged"],
 "super": "Object",
 operator$index$1: function(object) {
  return this._getAttachedInfo$1(object);
},
 operator$indexSet$2: function(object, info) {
  $.add$1(this.tagged, object);
  this._setAttachedInfo$2(object, info);
},
 reset$0: function() {
  this.tagged = $.ListImplementation_List(null);
},
 cleanup$0: function() {
  var length$ = $.get$length(this.tagged);
  if (typeof length$ !== 'number')
    return this.cleanup$0$bailout(1, length$);
  var i = 0;
  for (; i < length$; ++i)
    this._clearAttachedInfo$1($.index(this.tagged, i));
  this.tagged = null;
},
 cleanup$0$bailout: function(state, length$) {
  var i = 0;
  for (; $.ltB(i, length$); ++i)
    this._clearAttachedInfo$1($.index(this.tagged, i));
  this.tagged = null;
},
 _clearAttachedInfo$1: function(o) {
o['__MessageTraverser__attached_info__'] = (void 0);
},
 _setAttachedInfo$2: function(o, info) {
o['__MessageTraverser__attached_info__'] = info;
},
 _getAttachedInfo$1: function(o) {
return o['__MessageTraverser__attached_info__'];
}
};

$$._MessageTraverserVisitedMap = {"":
 [],
 "super": "Object",
 operator$index$1: function(object) {
  return;
},
 operator$indexSet$2: function(object, info) {
},
 reset$0: function() {
},
 cleanup$0: function() {
}
};

$$._MessageTraverser = {"":
 [],
 "super": "Object",
 traverse$1: function(x) {
  if ($._MessageTraverser_isPrimitive(x))
    return this.visitPrimitive$1(x);
  this._visited.reset$0();
  var result = null;
  try {
    result = this._dispatch$1(x);
  } finally {
    this._visited.cleanup$0();
  }
  return result;
},
 _dispatch$1: function(x) {
  if ($._MessageTraverser_isPrimitive(x))
    return this.visitPrimitive$1(x);
  if (typeof x === 'object' && x !== null && (x.constructor === Array || x.is$List()))
    return this.visitList$1(x);
  if (typeof x === 'object' && x !== null && x.is$Map())
    return this.visitMap$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPort)
    return this.visitSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPortSync)
    return this.visitSendPortSync$1(x);
  return this.visitObject$1(x);
},
 visitObject$1: function(x) {
  throw $.$$throw('Message serialization: Illegal value ' + $.S(x) + ' passed');
}
};

$$._Copier = {"":
 [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  if (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior())
    return this.visitList$1$bailout(1, list);
  var copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  var len = list.length;
  copy = $.ListImplementation_List(len);
  $.indexSet(this._visited, list, copy);
  for (var i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    copy[i] = this._dispatch$1(list[i]);
  }
  return copy;
},
 visitList$1$bailout: function(state, list) {
  var copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  var len = $.get$length(list);
  copy = $.ListImplementation_List(len);
  $.indexSet(this._visited, list, copy);
  for (var i = 0; $.ltB(i, len); ++i) {
    var t1 = this._dispatch$1($.index(list, i));
    if (i >= copy.length)
      throw $.ioore(i);
    copy[i] = t1;
  }
  return copy;
},
 visitMap$1: function(map) {
  var t1 = {};
  t1.copy_10 = $.index(this._visited, map);
  var t2 = t1.copy_10;
  if (!(t2 == null))
    return t2;
  t1.copy_10 = $.HashMapImplementation$();
  $.indexSet(this._visited, map, t1.copy_10);
  map.forEach$1(new $._Copier_visitMap_anon(this, t1));
  return t1.copy_10;
}
};

$$._Serializer = {"":
 [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copyId = $.index(this._visited, list);
  if (!(copyId == null))
    return ['ref', copyId];
  var id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, list, id);
  return ['list', id, this._serializeList$1(list)];
},
 visitMap$1: function(map) {
  var copyId = $.index(this._visited, map);
  if (!(copyId == null))
    return ['ref', copyId];
  var id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, map, id);
  return ['map', id, this._serializeList$1(map.getKeys$0()), this._serializeList$1(map.getValues$0())];
},
 _serializeList$1: function(list) {
  if (typeof list !== 'string' && (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return this._serializeList$1$bailout(1, list);
  var len = list.length;
  var result = $.ListImplementation_List(len);
  for (var i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    result[i] = this._dispatch$1(list[i]);
  }
  return result;
},
 _serializeList$1$bailout: function(state, list) {
  var len = $.get$length(list);
  var result = $.ListImplementation_List(len);
  for (var i = 0; $.ltB(i, len); ++i) {
    var t1 = this._dispatch$1($.index(list, i));
    if (i >= result.length)
      throw $.ioore(i);
    result[i] = t1;
  }
  return result;
}
};

$$._Deserializer = {"":
 [],
 "super": "Object",
 deserialize$1: function(x) {
  if ($._Deserializer_isPrimitive(x))
    return x;
  this._deserialized = $.HashMapImplementation$();
  return this._deserializeHelper$1(x);
},
 _deserializeHelper$1: function(x) {
  if ($._Deserializer_isPrimitive(x))
    return x;
  switch ($.index(x, 0)) {
    case 'ref':
      return this._deserializeRef$1(x);
    case 'list':
      return this._deserializeList$1(x);
    case 'map':
      return this._deserializeMap$1(x);
    case 'sendport':
      return this.deserializeSendPort$1(x);
    default:
      return this.deserializeObject$1(x);
  }
},
 _deserializeRef$1: function(x) {
  var id = $.index(x, 1);
  return $.index(this._deserialized, id);
},
 _deserializeList$1: function(x) {
  var id = $.index(x, 1);
  var dartList = $.index(x, 2);
  if (typeof dartList !== 'object' || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
    return this._deserializeList$1$bailout(1, dartList, id);
  $.indexSet(this._deserialized, id, dartList);
  var len = dartList.length;
  for (var i = 0; i < len; ++i) {
    if (i >= dartList.length)
      throw $.ioore(i);
    var t1 = this._deserializeHelper$1(dartList[i]);
    if (i >= dartList.length)
      throw $.ioore(i);
    dartList[i] = t1;
  }
  return dartList;
},
 _deserializeList$1$bailout: function(state, dartList, id) {
  $.indexSet(this._deserialized, id, dartList);
  var len = $.get$length(dartList);
  for (var i = 0; $.ltB(i, len); ++i)
    $.indexSet(dartList, i, this._deserializeHelper$1($.index(dartList, i)));
  return dartList;
},
 _deserializeMap$1: function(x) {
  var result = $.HashMapImplementation$();
  var id = $.index(x, 1);
  $.indexSet(this._deserialized, id, result);
  var keys = $.index(x, 2);
  if (typeof keys !== 'string' && (typeof keys !== 'object' || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(1, x, result, keys);
  var values = $.index(x, 3);
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(2, values, result, keys);
  var len = keys.length;
  for (var i = 0; i < len; ++i) {
    if (i >= keys.length)
      throw $.ioore(i);
    var key = this._deserializeHelper$1(keys[i]);
    if (i >= values.length)
      throw $.ioore(i);
    result.operator$indexSet$2(key, this._deserializeHelper$1(values[i]));
  }
  return result;
},
 _deserializeMap$1$bailout: function(state, env0, env1, env2) {
  switch (state) {
    case 1:
      var x = env0;
      result = env1;
      keys = env2;
      break;
    case 2:
      values = env0;
      result = env1;
      keys = env2;
      break;
  }
  switch (state) {
    case 0:
      var result = $.HashMapImplementation$();
      var id = $.index(x, 1);
      $.indexSet(this._deserialized, id, result);
      var keys = $.index(x, 2);
    case 1:
      state = 0;
      var values = $.index(x, 3);
    case 2:
      state = 0;
      var len = $.get$length(keys);
      for (var i = 0; $.ltB(i, len); ++i)
        result.operator$indexSet$2(this._deserializeHelper$1($.index(keys, i)), this._deserializeHelper$1($.index(values, i)));
      return result;
  }
},
 deserializeObject$1: function(x) {
  throw $.$$throw('Unexpected serialized object');
}
};

$$._Timer = {"":
 ["_once", "_handle"],
 "super": "Object",
 _Timer$repeating$2: function(milliSeconds, callback) {
  this._handle = $._window().setInterval$2(new $.anon5(this, callback), milliSeconds);
},
 _Timer$2: function(milliSeconds, callback) {
  this._handle = $._window().setTimeout$2(new $.anon4(this, callback), milliSeconds);
}
};

$$._Random = {"":
 [],
 "super": "Object",
 nextInt$1: function(max) {
  if (max < 0)
    throw $.$$throw($.ArgumentError$('negative max: ' + $.S(max)));
  if (max > 4294967295)
    max = 4294967295;
  return (Math.random() * max) >>> 0;
}
};

$$.DisposableImpl = {"":
 [],
 "super": "Object",
 validateNotDisposed$0: function() {
}
};

$$.GlobalId = {"":
 ["id?", "_hashCode"],
 "super": "Object",
 compareTo$1: function(other) {
  return $.compareTo(this.id, other.get$id());
},
 hashCode$0: function() {
  return this._hashCode;
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(other.get$id(), this.id);
}
};

$$.Tuple = {"":
 ["item1?", "item2?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.item1, other.get$item1()) && $.eqB(this.item2, other.get$item2());
},
 toString$0: function() {
  return '{item1: ' + $.S(this.item1) + ', item2: ' + $.S(this.item2) + '}';
},
 hashCode$0: function() {
  return $.Util_getHashCode([this.item1, this.item2]);
}
};

$$.NullArgumentException = {"":
 ["theArg", "message"],
 "super": "IllegalArgumentException",
 toString$0: function() {
  return 'Null argument(s): ' + this.theArg;
}
};

$$.InvalidOperationException = {"":
 ["message?"],
 "super": "Object",
 is$Exception: true
};

$$.DetailedIllegalArgumentException = {"":
 ["argument", "message"],
 "super": "ArgumentError",
 toString$0: function() {
  var t1 = this.message;
  var t2 = t1 == null || $.eqB($.get$length(t1), 0);
  var t3 = this.argument;
  if (t2)
    return 'Illegal argument: ' + t3;
  else
    return 'Illegal argument: ' + t3 + ' -- ' + $.S(t1);
}
};

$$.Enumerable = {"":
 [],
 "super": "Object",
 every$1: function(f) {
  $.requireArgumentNotNull(f, 'f');
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
},
 contains$1: function(item) {
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    if ($.eqB(t1.next$0(), item))
      return true;
  return false;
},
 isEmpty$0: function() {
  return this.some$1(new $.Enumerable_isEmpty_anon()) !== true;
},
 some$1: function(f) {
  $.requireArgumentNotNull(f, 'f');
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
},
 count$1: function(f) {
  if (f == null)
    f = new $.Enumerable_count_anon();
  for (var t1 = $.iterator(this), c = 0; t1.hasNext$0() === true;)
    if (f.call$1(t1.next$0()) === true)
      ++c;
  return c;
},
 count$0: function() {
  return this.count$1(null)
},
 join$1: function(separator) {
  var sb = $.StringBuffer_StringBuffer('');
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if ($.gtB($.get$length(sb), 0))
      $.add$1(sb, separator);
    $.add$1(sb, t2);
  }
  return $.toString(sb);
},
 join$0: function() {
  return this.join$1(', ')
},
 map$1: function(f) {
  $.requireArgumentNotNull(f, 'f');
  return $._FuncEnumerable$(this, new $.Enumerable_map_anon(f));
},
 filter$1: function(f) {
  $.requireArgumentNotNull(f, 'f');
  return $._FuncEnumerable$(this, new $.Enumerable_filter_anon(f));
},
 firstOrDefault$2: function(f, defaultValue) {
  if (f == null)
    f = new $.Enumerable_firstOrDefault_anon();
  var iter = $._WhereIterator$(this.iterator$0(), f);
  if (iter.hasNext$0() !== true)
    return defaultValue;
  return iter.next$0();
},
 firstOrDefault$1: function(f) {
  return this.firstOrDefault$2(f,null)
},
 single$1: function(f) {
  if (f == null)
    f = new $.Enumerable_single_anon();
  var iter = $._WhereIterator$(this.iterator$0(), f);
  if (iter.hasNext$0() !== true)
    throw $.$$throw($.CTC48);
  var value = iter.next$0();
  if (iter.hasNext$0() === true)
    throw $.$$throw($.CTC49);
  return value;
},
 toReadOnlyCollection$0: function() {
  return $.ReadOnlyCollection$(this);
},
 forEach$1: function(f) {
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
},
 toList$0: function() {
  return $.ListImplementation_List$from(this);
},
 selectNumbers$1: function(f) {
  $.requireArgumentNotNull(f, 'f');
  return $._FuncNumEnumerable$(this, new $.Enumerable_selectNumbers_anon(f));
},
 toString$0: function() {
  return '[' + $.S(this.join$0()) + ']';
},
 is$Enumerable: true,
 is$Collection: function() { return true; }
};

$$._SimpleEnumerable = {"":
 ["_source"],
 "super": "Enumerable",
 iterator$0: function() {
  return $.iterator(this._source);
},
 get$length: function() {
  return this.count$0();
}
};

$$._FuncEnumerable = {"":
 ["_source", "_func"],
 "super": "Enumerable",
 _func$1: function(arg0) { return this._func.call$1(arg0); },
 iterator$0: function() {
  return this._func$1(this._source.iterator$0());
},
 get$length: function() {
  return this.count$0();
}
};

$$._SelectIterator = {"":
 ["_source", "_func"],
 "super": "Object",
 _func$1: function(arg0) { return this._func.call$1(arg0); },
 hasNext$0: function() {
  return this._source.hasNext$0();
},
 next$0: function() {
  return this._func$1(this._source.next$0());
}
};

$$._WhereIterator = {"":
 ["_source", "_func", "_lib2_next=", "_current"],
 "super": "Object",
 _func$1: function(arg0) { return this._func.call$1(arg0); },
 hasNext$0: function() {
  if (this._lib2_next == null) {
    this._lib2_next = false;
    for (var t1 = this._source; t1.hasNext$0() === true;) {
      this._current = t1.next$0();
      if (this._func$1(this._current) === true) {
        this._lib2_next = true;
        break;
      }
    }
  }
  return this._lib2_next;
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC11);
  this._lib2_next = null;
  return this._current;
}
};

$$.NumberEnumerable = {"":
 [],
 "super": "Enumerable",
 sum$0: function() {
  for (var t1 = $.iterator(this), theSum = 0; t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    theSum += t2;
  }
  return theSum;
}
};

$$._FuncNumEnumerable = {"":
 ["_source", "_func"],
 "super": "NumberEnumerable",
 _func$1: function(arg0) { return this._func.call$1(arg0); },
 iterator$0: function() {
  return this._func$1(this._source.iterator$0());
},
 get$length: function() {
  return this.count$0();
}
};

$$._RangeEnumerable = {"":
 ["_start", "_count"],
 "super": "NumberEnumerable",
 iterator$0: function() {
  return $._RangeIterator$(this._start, this._count);
},
 get$length: function() {
  return this.count$0();
}
};

$$._RangeIterator = {"":
 ["_start", "_count", "_current"],
 "super": "Object",
 hasNext$0: function() {
  var t1 = this._current;
  var t2 = this._count;
  if (typeof t2 !== 'number')
    return this.hasNext$0$bailout(1, t1, t2);
  return t1 < t2;
},
 hasNext$0$bailout: function(state, t1, t2) {
  return $.lt(t1, t2);
},
 next$0: function() {
  var t1 = this._start;
  var t2 = this._current;
  var val = t1 + t2;
  this._current = t2 + 1;
  return val;
}
};

$$.IndexIterator = {"":
 ["_indexer", "_lib2_length", "_lib2_pos"],
 "super": "Object",
 hasNext$0: function() {
  var t1 = this._lib2_length;
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1);
  return t1 > this._lib2_pos;
},
 hasNext$0$bailout: function(state, t1) {
  return $.gt(t1, this._lib2_pos);
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC11);
  var t1 = this._lib2_pos;
  this._lib2_pos = t1 + 1;
  return this._indexer$1(t1);
},
 _indexer$1: function(arg0) { return this._indexer.call$1(arg0); },
 IndexIterator$2: function(length$, indexer) {
  $.requireArgumentNotNull(this._indexer, '_indexer');
}
};

$$.ListBase = {"":
 [],
 "super": "Enumerable",
 iterator$0: function() {
  return $.IndexIterator$($.get$length(this), new $.ListBase_iterator_anon(this));
},
 forEach$1: function(f) {
  for (var i = 0; $.ltB(i, $.get$length(this)); ++i)
    f.call$1(this.operator$index$1(i));
},
 every$1: function(f) {
  for (var i = 0; $.ltB(i, $.get$length(this)); ++i)
    if (f.call$1(this.operator$index$1(i)) !== true)
      return false;
  return true;
},
 some$1: function(f) {
  for (var i = 0; $.ltB(i, $.get$length(this)); ++i)
    if (f.call$1(this.operator$index$1(i)) === true)
      return true;
  return false;
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  for (var i = start; $.ltB(i, $.get$length(this)); ++i)
    if ($.eqB(this.operator$index$1(i), element))
      return i;
  return -1;
},
 set$length: function(newLength) {
  throw $.$$throw($.CTC21);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.CTC21);
},
 add$1: function(value) {
  throw $.$$throw($.CTC21);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC21);
},
 addAll$1: function(value) {
  throw $.$$throw($.CTC21);
},
 sort$1: function(comparer) {
  throw $.$$throw($.CTC21);
},
 clear$0: function() {
  throw $.$$throw($.CTC21);
},
 removeLast$0: function() {
  throw $.$$throw($.CTC21);
},
 removeRange$2: function(start, length$) {
  throw $.$$throw($.CTC21);
},
 insertRange$3: function(start, length$, initialValue) {
  throw $.$$throw($.CTC21);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.ReadOnlyCollection = {"":
 ["_items"],
 "super": "ListBase",
 get$length: function() {
  return this._items.length;
},
 operator$index$1: function(index) {
  var t1 = this._items;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
}
};

$$.Array2d = {"":
 ["width?", "height?", "_source"],
 "super": "ListBase",
 get$length: function() {
  return $.get$length(this._source);
},
 operator$index$1: function(index) {
  var t1 = this._source;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.operator$index$1$bailout(1, t1, index);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 operator$index$1$bailout: function(state, t1, index) {
  return $.index(t1, index);
},
 operator$indexSet$2: function(index, value) {
  $.indexSet(this._source, index, value);
},
 get$2: function(x, y) {
  return this.operator$index$1(this._getIndex$2(x, y));
},
 set$3: function(x, y, value) {
  this.operator$indexSet$2(this._getIndex$2(x, y), value);
},
 getAdjacentIndices$2: function(x, y) {
  if (typeof x !== 'number')
    return this.getAdjacentIndices$2$bailout(1, x, y);
  if (typeof y !== 'number')
    return this.getAdjacentIndices$2$bailout(1, x, y);
  var adj = $.ListImplementation_List(null);
  for (var k = $.max(0, y - 1), t1 = this.height, t2 = this.width, t3 = y + 2, t4 = x - 1, t5 = x + 2; k < $.min(t1, t3); ++k)
    for (var j = $.max(0, t4), t6 = !(k === y); j < $.min(t2, t5); ++j)
      if (!(j === x) || t6)
        adj.push(this._getIndex$2(j, k));
  return adj;
},
 getAdjacentIndices$2$bailout: function(state, x, y) {
  var adj = $.ListImplementation_List(null);
  for (var k = $.max(0, $.sub(y, 1)), t1 = this.height, t2 = this.width; k < $.min(t1, $.add(y, 2)); ++k)
    for (var j = $.max(0, $.sub(x, 1)), t3 = !(k === y); j < $.min(t2, $.add(x, 2)); ++j)
      if (!(j === x) || t3)
        adj.push(this._getIndex$2(j, k));
  return adj;
},
 getCoordinate$1: function(index) {
  if (typeof index !== 'number')
    return this.getCoordinate$1$bailout(1, index, 0);
  var t1 = this.width;
  if (typeof t1 !== 'number')
    return this.getCoordinate$1$bailout(2, index, t1);
  return $.Tuple$($.mod(index, t1), $.tdiv(index, t1));
},
 getCoordinate$1$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      var index = env0;
      break;
    case 2:
      index = env0;
      t1 = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this.width;
    case 2:
      state = 0;
      return $.Tuple$($.mod(index, t1), $.tdiv(index, t1));
  }
},
 _getIndex$2: function(x, y) {
  if (typeof x !== 'number')
    return this._getIndex$2$bailout(1, x, y, 0);
  if (typeof y !== 'number')
    return this._getIndex$2$bailout(1, x, y, 0);
  var t1 = this.width;
  if (typeof t1 !== 'number')
    return this._getIndex$2$bailout(2, x, y, t1);
  return x + y * t1;
},
 _getIndex$2$bailout: function(state, env0, env1, env2) {
  switch (state) {
    case 1:
      var x = env0;
      var y = env1;
      break;
    case 2:
      x = env0;
      y = env1;
      t1 = env2;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var t1 = this.width;
    case 2:
      state = 0;
      return $.add(x, $.mul(y, t1));
  }
},
 Array2d$wrap$2: function(width, source) {
  $.requireArgumentNotNull(width, 'width');
  $.requireArgumentNotNull(source, 'source');
  $.requireArgument($.ge(width, 0), 'width', 'width must be non-zero');
  var t1 = $.eqB(width, 0);
  var t2 = this._source;
  if (t1)
    $.requireArgument($.eq($.get$length(t2), 0), 'width', 'width must be greater than zero if the source is non-empty');
  else {
    $.requireArgument($.gt($.get$length(t2), 0), 'source', 'if width is non-zero, source must be non-empty');
    $.requireArgument($.eq($.mod($.get$length(t2), width), 0), 'width', 'width must evenly divide the source');
  }
}
};

$$.EventHandle = {"":
 ["_handlers", "_disposed"],
 "super": "DisposableImpl",
 fireEvent$1: function(args) {
  var t1 = this._handlers;
  if (!(t1 == null))
    $.forEach(t1, new $.EventHandle_fireEvent_anon(args));
},
 add$1: function(handler) {
  var id = $.GlobalId_GlobalId();
  if (this._handlers == null)
    this._handlers = $.HashMapImplementation$();
  $.indexSet(this._handlers, id, handler);
  return id;
},
 remove$1: function(id) {
  var t1 = this._handlers;
  if (!(t1 == null))
    return !(t1.remove$1(id) == null);
  else
    return false;
}
};

$$.EventArgs = {"":
 [],
 "super": "Object"
};

$$.Size = {"":
 ["width?", "height?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.width, other.get$width()) && $.eqB(this.height, other.get$height());
},
 get$area: function() {
  return $.mul(this.width, this.height);
},
 isEmpty$0: function() {
  return $.eq(this.get$area(), 0);
},
 get$isValid: function() {
  var t1 = this.width;
  if ($.isValidNumber(t1)) {
    var t2 = this.height;
    t1 = $.isValidNumber(t2) && $.geB(t1, 0) && $.geB(t2, 0);
  } else
    t1 = false;
  return t1;
},
 scale$1: function(magnitude) {
  return $.Size$($.mul(this.width, magnitude), $.mul(this.height, magnitude));
},
 operator$mul$1: function(magnitude) {
  return this.scale$1(magnitude);
},
 toString$0: function() {
  return '(' + $.S(this.width) + ' x ' + $.S(this.height) + ')';
}
};

$$.Coordinate = {"":
 ["x?", "y?"],
 "super": "Object",
 get$isValid: function() {
  return $.isValidNumber(this.x) && $.isValidNumber(this.y);
},
 operator$sub$1: function(other) {
  return $.Coordinate_difference(this, other);
},
 operator$add$1: function(other) {
  return $.Coordinate$($.add(this.x, other.get$x()), $.add(this.y, other.get$y()));
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.x, other.get$x()) && $.eqB(this.y, other.get$y());
},
 toString$0: function() {
  return '{x:' + $.S(this.x) + ', y:' + $.S(this.y) + '}';
}
};

$$.Vector = {"":
 ["x", "y"],
 "super": "Coordinate",
 get$length: function() {
  var t1 = this.x;
  t1 = $.mul(t1, t1);
  var t2 = this.y;
  return $.sqrt($.add(t1, $.mul(t2, t2)));
},
 operator$add$1: function(other) {
  return $.Vector$($.add(this.x, other.get$x()), $.add(this.y, other.get$y()));
},
 operator$mul$1: function(magnitude) {
  return this.scale$1(magnitude);
},
 scale$1: function(magnitude) {
  return $.Vector$($.mul(this.x, magnitude), $.mul(this.y, magnitude));
}
};

$$.Box = {"":
 ["left?", "top?", "width?", "height?"],
 "super": "Object",
 get$topLeft: function() {
  return $.Coordinate$(this.left, this.top);
},
 get$size: function() {
  return $.Size$(this.width, this.height);
},
 get$isValid: function() {
  return this.get$topLeft().get$isValid() === true && this.get$size().get$isValid() === true;
},
 contains$1: function(point) {
  var t1 = point.get$x();
  var t2 = this.left;
  if ($.geB(t1, t2))
    if ($.leB(point.get$x(), $.add(t2, this.width))) {
      t1 = point.get$y();
      t2 = this.top;
      t1 = $.geB(t1, t2) && $.leB(point.get$y(), $.add(t2, this.height));
    } else
      t1 = false;
  else
    t1 = false;
  return t1;
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(other.get$left(), this.left) && $.eqB(other.get$top(), this.top) && $.eqB(other.get$width(), this.width) && $.eqB(other.get$height(), this.height);
},
 toString$0: function() {
  return 'Location: ' + $.S(this.get$topLeft()) + ', Size: ' + $.S(this.get$size());
},
 hashCode$0: function() {
  return $.Util_getHashCode([this.left, this.top, this.width, this.height]);
}
};

$$.AffineTransform = {"":
 ["_m00?", "_m10?", "_m01?", "_m11?", "_m02?", "_m12?"],
 "super": "Object",
 get$scaleX: function() {
  return this._m00;
},
 get$scaleY: function() {
  return this._m11;
},
 get$translateX: function() {
  return this._m02;
},
 get$translateY: function() {
  return this._m12;
},
 get$shearX: function() {
  return this._m01;
},
 get$shearY: function() {
  return this._m10;
},
 get$determinant: function() {
  return $.sub($.mul(this._m00, this._m11), $.mul(this._m01, this._m10));
},
 scale$2: function(sx, sy) {
  this._m00 = $.mul(this._m00, sx);
  this._m10 = $.mul(this._m10, sx);
  this._m01 = $.mul(this._m01, sy);
  this._m11 = $.mul(this._m11, sy);
  return this;
},
 concatenate$1: function(tx) {
  var m0 = this._m00;
  var m1 = this._m01;
  this._m00 = $.add($.mul(tx.get$_m00(), m0), $.mul(tx.get$_m10(), m1));
  this._m01 = $.add($.mul(tx.get$_m01(), m0), $.mul(tx.get$_m11(), m1));
  this._m02 = $.add(this._m02, $.add($.mul(tx.get$_m02(), m0), $.mul(tx.get$_m12(), m1)));
  var m00 = this._m10;
  var m10 = this._m11;
  this._m10 = $.add($.mul(tx.get$_m00(), m00), $.mul(tx.get$_m10(), m10));
  this._m11 = $.add($.mul(tx.get$_m01(), m00), $.mul(tx.get$_m11(), m10));
  this._m12 = $.add(this._m12, $.add($.mul(tx.get$_m02(), m00), $.mul(tx.get$_m12(), m10)));
  return this;
},
 get$concatenate: function() { return new $.BoundClosure(this, 'concatenate$1'); },
 rotate$3: function(theta, x, y) {
  return this.concatenate$1($.AffineTransform_AffineTransform$fromRotate(theta, x, y));
},
 translate$2: function(dx, dy) {
  this._m02 = $.add(this._m02, $.add($.mul(dx, this._m00), $.mul(dy, this._m01)));
  this._m12 = $.add(this._m12, $.add($.mul(dx, this._m10), $.mul(dy, this._m11)));
  return this;
},
 setToScale$2: function(sx, sy) {
  return this.setTransform$6(sx, 0, 0, sy, 0, 0);
},
 setToRotation$3: function(theta, x, y) {
  var cos = $.cos(theta);
  var sin = $.sin(theta);
  return this.setTransform$6(cos, sin, -sin, cos, x - x * cos + y * sin, y - x * sin - y * cos);
},
 setToTranslation$2: function(dx, dy) {
  return this.setTransform$6(1, 0, 0, 1, dx, dy);
},
 setTransform$6: function(m00, m10, m01, m11, m02, m12) {
  this._m00 = m00;
  this._m10 = m10;
  this._m01 = m01;
  this._m11 = m11;
  this._m02 = m02;
  this._m12 = m12;
  return this;
},
 transformCoordinate$1: function(point) {
  return $.Coordinate$($.add($.add($.mul(point.get$x(), this._m00), $.mul(point.get$y(), this._m01)), this._m02), $.add($.add($.mul(point.get$x(), this._m10), $.mul(point.get$y(), this._m11)), this._m12));
},
 createInverse$0: function() {
  var det = this.get$determinant();
  return $.AffineTransform$($.div(this._m11, det), $.div($.neg(this._m10), det), $.div($.neg(this._m01), det), $.div(this._m00, det), $.div($.sub($.mul(this._m01, this._m12), $.mul(this._m11, this._m02)), det), $.div($.sub($.mul(this._m10, this._m02), $.mul(this._m00, this._m12)), det));
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this._m00, other.get$_m00()) && $.eqB(this._m01, other.get$_m01()) && $.eqB(this._m02, other.get$_m02()) && $.eqB(this._m10, other.get$_m10()) && $.eqB(this._m11, other.get$_m11()) && $.eqB(this._m12, other.get$_m12());
},
 toString$0: function() {
  return $.Strings_join($.map($.$$([this.get$translateX(), this.get$translateY(), this.get$scaleX(), this.get$scaleY(), this.get$shearX(), this.get$shearY()]), new $.AffineTransform_toString_anon()).toList$0(), ', ');
}
};

$$.Attachable = {"":
 ["name?"],
 "super": "Object"
};

$$.AttachableObject = {"":
 [],
 "super": "DisposableImpl",
 _addHandler$2: function(property, watcher) {
  this.validateNotDisposed$0();
  return $.add$1(this._eventHandlers.putIfAbsent$2(property, new $.AttachableObject__addHandler_anon()), watcher);
},
 _fireEvent$2: function(attachable, args) {
  this.validateNotDisposed$0();
  var handle = this._eventHandlers.operator$index$1(attachable);
  if (!(handle == null))
    handle.fireEvent$1(args);
},
 _set$2: function(key, value) {
  this.validateNotDisposed$0();
  this._propertyValues.operator$indexSet$2(key, value);
  this._fireChange$1(key);
},
 get$_set: function() { return new $.BoundClosure1(this, '_set$2'); },
 _isSet$1: function(key) {
  this.validateNotDisposed$0();
  return this._propertyValues.containsKey$1(key);
},
 _remove$1: function(key) {
  this.validateNotDisposed$0();
  if (this._isSet$1(key) === true) {
    this._propertyValues.remove$1(key);
    this._fireChange$1(key);
  }
},
 _getValueOrUndefined$3: function(key, obj, ifAbsent) {
  this.validateNotDisposed$0();
  if (this._isSet$1(key) === true)
    return this._propertyValues.operator$index$1(key);
  else if (!(ifAbsent == null)) {
    var value = ifAbsent.call$1(obj);
    this._set$2(key, value);
    return value;
  } else
    return $.CTC18;
},
 _fireChange$1: function(key) {
  this.validateNotDisposed$0();
  var handle = this._eventHandlers.operator$index$1(key);
  if (!(handle == null))
    handle.fireEvent$1(key);
}
};

$$.Property = {"":
 ["defaultValue", "name"],
 "super": "Attachable",
 get$2: function(obj, ifAbsent) {
  var coreValue = this.getCore$2(obj, ifAbsent);
  if (!$.identical(coreValue, $.CTC18))
    return coreValue;
  else
    return this.defaultValue;
},
 get$1: function(obj) {
  return this.get$2(obj,null)
},
 getCore$2: function(obj, ifAbsent) {
  return obj._getValueOrUndefined$3(this, obj, ifAbsent);
},
 set$2: function(obj, value) {
  obj._set$2(this, value);
},
 clear$1: function(obj) {
  return obj._remove$1(this);
},
 addHandler$2: function(obj, handler) {
  return obj._addHandler$2(this, handler);
},
 toString$0: function() {
  return 'Property \'' + this.name + '\'';
}
};

$$._UndefinedValue = {"":
 [],
 "super": "Object"
};

$$.AttachedEvent = {"":
 ["name"],
 "super": "Attachable",
 addHandler$2: function(obj, handler) {
  return obj._addHandler$2(this, handler);
},
 fireEvent$2: function(obj, args) {
  return obj._fireEvent$2(this, args);
}
};

$$._ResourceEntry = {"":
 ["url?", "_resource", "_blobUrl", "_total", "_completed"],
 "super": "Object",
 get$totalBytes: function() {
  return this._total;
},
 get$completedBytes: function() {
  return this._completed;
},
 setResource$1: function(resource) {
  this._resource = resource;
},
 updateProgress$2: function(completed, total) {
  if (!$.eqB(this._completed, completed)) {
    this._completed = completed;
    var changed = true;
  } else
    changed = false;
  if (!$.eqB(this._total, total)) {
    this._total = total;
    changed = true;
  }
  return changed;
},
 get$completed: function() {
  return !(this._resource == null);
},
 get$resource: function() {
  return this._resource;
},
 matchesBlobUrl$1: function(blobUrl) {
  return $.eq(blobUrl, this._blobUrl);
},
 getBlobUrl$1: function(blob) {
  this._blobUrl = $.window().createObjectUrl$1(blob);
  if (this._blobUrl == null)
    this._blobUrl = this.url;
  return this._blobUrl;
},
 revokeBlobUrl$0: function() {
  $.window().revokeObjectUrl$1(this._blobUrl);
}
};

$$.ResourceLoader = {"":
 [],
 "super": "Object",
 get$state: function() {
  return this._lib6_state;
},
 get$loaded: function() {
  return this._loadedEvent;
},
 get$progress: function() {
  return this._progressEvent;
},
 getResource$1: function(url) {
  return this._getByUrl$1(url).get$resource();
},
 get$completedBytes: function() {
  return this._entries.selectNumbers$1(new $.ResourceLoader_completedBytes_anon()).sum$0();
},
 get$totalBytes: function() {
  return this._entries.selectNumbers$1(new $.ResourceLoader_totalBytes_anon()).sum$0();
},
 load$0: function() {
  this._lib6_state = 'loading';
  for (var t1 = $.iterator(this._entries); t1.hasNext$0() === true;)
    this._httpLoad$1(t1.next$0().get$url());
},
 get$load: function() { return new $.BoundClosure0(this, 'load$0'); },
 _doLoad$1: function(blobUrl) {
},
 _loadResourceFailed$1: function(blobUrl) {
  var e = this._getByBlobUrl$1(blobUrl);
  $.print(['failled to load resources with blobUrl', e.get$url()]);
  e.revokeBlobUrl$0();
},
 _loadResourceSucceed$2: function(blobUrl, resource) {
  var entry = this._getByBlobUrl$1(blobUrl);
  entry.revokeBlobUrl$0();
  entry.setResource$1(resource);
  if ($.every(this._entries, new $.ResourceLoader__loadResourceSucceed_anon()) === true) {
    this._lib6_state = 'loaded';
    this._loadedEvent.fireEvent$1($.CTC20);
  }
},
 _getByUrl$1: function(url) {
  return this._entries.single$1(new $.ResourceLoader__getByUrl_anon(url));
},
 _getByBlobUrl$1: function(blobUrl) {
  return this._entries.single$1(new $.ResourceLoader__getByBlobUrl_anon(blobUrl));
},
 _httpLoad$1: function(url) {
  var request = $.HttpRequest_HttpRequest();
  var e = this._getByUrl$1(url);
  $.add$1(request.get$on().get$abort(), new $.ResourceLoader__httpLoad_anon(this, e));
  $.add$1(request.get$on().get$error(), new $.ResourceLoader__httpLoad_anon0(this, e));
  $.add$1(request.get$on().get$loadEnd(), new $.ResourceLoader__httpLoad_anon1(this, e));
  $.add$1(request.get$on().get$progress(), new $.ResourceLoader__httpLoad_anon2(this, e));
  request.open$2('GET', url);
  request.set$responseType('blob');
  request.send$0();
},
 _onLoadEnd$2: function(entry, args) {
  var request = args.get$currentTarget();
  if ($.eqB(request.get$status(), 200))
    this._doLoad$1(entry.getBlobUrl$1(request.get$response()));
  else
    this._onError$2(entry, args);
},
 _onError$2: function(entry, args) {
  throw $.$$throw('wtf?');
},
 _onProgress$2: function(entry, args) {
  if (entry.updateProgress$2(args.get$loaded(), args.get$totalSize()) === true)
    this._progressEvent.fireEvent$1($.CTC20);
}
};

$$.ImageLoader = {"":
 ["_entries", "_loadedEvent", "_progressEvent", "_lib6_state"],
 "super": "ResourceLoader",
 _doLoad$1: function(blobUrl) {
  var img = $.ImageElement_ImageElement(blobUrl, $, $);
  $.add$1(img.get$on().get$load(), new $.ImageLoader__doLoad_anon(this, img, blobUrl));
}
};

$$.AudioLoader = {"":
 ["context?", "_entries", "_loadedEvent", "_progressEvent", "_lib6_state"],
 "super": "ResourceLoader",
 _doLoad$1: function(blobUrl) {
  var arrayBufferRequest = $.HttpRequest_HttpRequest();
  arrayBufferRequest.open$3('GET', blobUrl, true);
  arrayBufferRequest.set$responseType('arraybuffer');
  $.add$1(arrayBufferRequest.get$on().get$load(), new $.AudioLoader__doLoad_anon(arrayBufferRequest, blobUrl, this));
  $.add$1(arrayBufferRequest.get$on().get$error(), new $.AudioLoader__doLoad_anon0(this, blobUrl));
  arrayBufferRequest.send$0();
},
 _onAudioLoadError$3: function(blobUrl, description, error) {
  $.print(['Error!', description, error]);
  this._loadResourceFailed$1(blobUrl);
},
 _saveBuffer$2: function(blobUrl, buffer) {
  if (buffer == null)
    this._onAudioLoadError$3(blobUrl, 'null buffer', '');
  this._loadResourceSucceed$2(blobUrl, buffer);
}
};

$$.TextureInput = {"":
 ["name?", "frame?", "rotated?", "trimmed", "sourceColorRect?", "sourceSize", "image?"],
 "super": "Object",
 toString$0: function() {
  return this.name;
}
};

$$.TextureData = {"":
 ["_textures"],
 "super": "Object",
 getTexture$1: function(key) {
  return $.index(this._textures, key);
},
 drawTextureKeyAt$3: function(ctx, textureKey, location$) {
  this.drawTextureAt$3(ctx, location$, this.getTexture$1(textureKey));
},
 drawTextureKeyAt$2: function(ctx,textureKey) {
  return this.drawTextureKeyAt$3(ctx,textureKey,Isolate.$isolateProperties.CTC51)
},
 drawTextureAt$3: function(ctx, location$, texture) {
  ctx.save$0();
  var tx = $.AffineTransform$(1, 0, 0, 1, 0, 0);
  tx.translate$2(location$.x, location$.y);
  var theFrame = texture.get$frame();
  var source = texture.get$sourceColorRect().get$topLeft();
  tx.translate$2(source.get$x(), source.get$y());
  if (texture.get$rotated() === true) {
    var t1 = theFrame.get$height();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = 0.5 * t1;
    var t2 = theFrame.get$height();
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    tx.rotate$3(-1.5707963267948966, t1, 0.5 * t2);
    var theFrame0 = $.Box$(theFrame.get$left(), theFrame.get$top(), theFrame.get$height(), theFrame.get$width());
    theFrame = theFrame0;
  }
  $.CanvasUtil_transform(ctx, tx);
  $.CanvasUtil_drawImage(ctx, texture.get$image(), theFrame, null);
  ctx.restore$0();
}
};

$$.TextureAnimationElement = {"":
 ["_textureData?", "_requests", "_transforms", "cacheEnabled", "_updatedEventHandle", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_lib1_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 add$1: function(request) {
  this._requests.push(request);
  this.invalidateDraw$0();
},
 update$0: function() {
  var toRemove = $.ListImplementation_List(null);
  for (var t1 = this._requests, t2 = $.iterator(t1); t2.hasNext$0() === true;) {
    var t3 = t2.next$0();
    t3.update$0();
    if (t3.get$done() === true)
      toRemove.push(t3);
  }
  for (t2 = $.iterator(toRemove); t2.hasNext$0() === true;)
    $.removeRange(t1, $.indexOf$2(t1, t2.next$0(), 0), 1);
  if (t1.length > 0)
    this.invalidateDraw$0();
},
 drawOverride$1: function(ctx) {
  for (var t1 = $.iterator(this._requests), t2 = this._textureData; t1.hasNext$0() === true;) {
    var data = t1.next$0()._getFrameDetails$0();
    var offset = data.get$item1();
    var frameName = data.get$item2();
    ctx.save$0();
    ctx.translate$2(offset.get$x(), offset.get$y());
    t2.drawTextureKeyAt$2(ctx, frameName);
    ctx.restore$0();
  }
}
};

$$.TextureAnimationRequest = {"":
 ["_startEventHandle", "_texturePrefix", "_frameCount", "_offset", "_delay", "_initialFrame", "_initialFrameOffset", "_done", "_frame"],
 "super": "Object",
 get$done: function() {
  return this._done;
},
 get$started: function() {
  return this._startEventHandle;
},
 update$0: function() {
  var t1 = this._frame;
  if (typeof t1 !== 'number')
    return this.update$0$bailout(1, t1);
  if (t1 < this._frameCount - 1)
    this._frame = t1 + 1;
  else
    this._done = true;
  t1 = this._frame;
  if (typeof t1 !== 'number')
    return this.update$0$bailout(4, t1);
  if (t1 === 0 && !this._done)
    this._startEventHandle.fireEvent$1($.CTC20);
},
 update$0$bailout: function(state, env0) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t1 = env0;
      break;
    case 4:
      t1 = env0;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this._frame;
    case 1:
      state = 0;
    default:
      if (state === 2 || state === 0 && t1 == null)
        switch (state) {
          case 0:
            t1 = this._delay;
          case 2:
            state = 0;
            this._frame = $.neg(t1);
        }
      else
        switch (state) {
          case 0:
          case 3:
            if (state === 3 || state === 0 && $.ltB(t1, this._frameCount - 1))
              switch (state) {
                case 0:
                  t1 = this._frame;
                case 3:
                  state = 0;
                  this._frame = $.add(t1, 1);
              }
            else
              this._done = true;
        }
      t1 = this._frame;
    case 4:
      state = 0;
      if ($.eqB(t1, 0) && !this._done)
        this._startEventHandle.fireEvent$1($.CTC20);
  }
},
 _getFrameDetails$0: function() {
  var offset = this._offset;
  var t1 = this._frame;
  if (typeof t1 !== 'number')
    return this._getFrameDetails$0$bailout(1, offset, t1);
  if (t1 < 0 && !(this._initialFrame == null)) {
    var frameName = this._initialFrame;
    var offset0 = this._initialFrameOffset;
    if (!(offset0 == null))
      offset = offset0;
  } else {
    if (t1 < 0)
      var frame = 0;
    else
      frame = t1;
    var frameString = $.toString($.toInt(frame));
    if (typeof frameString !== 'string')
      return this._getFrameDetails$0$bailout(4, frameString, offset);
    for (; frameString.length < 4;)
      frameString = '0' + frameString;
    frameName = this._texturePrefix + '_' + frameString + '.png';
  }
  return $.Tuple$(offset, frameName);
},
 _getFrameDetails$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      offset = env0;
      t1 = env1;
      break;
    case 2:
      t1 = env0;
      offset = env1;
      break;
    case 3:
      t1 = env0;
      offset = env1;
      break;
    case 4:
      frameString = env0;
      offset = env1;
      break;
  }
  switch (state) {
    case 0:
      var offset = this._offset;
      var t1 = this._frame;
    case 1:
      state = 0;
    default:
      if (state === 0 && $.ltB(t1, 0) && !(this._initialFrame == null)) {
        var frameName = this._initialFrame;
        var offset0 = this._initialFrameOffset;
        if (!(offset0 == null))
          offset = offset0;
      } else
        switch (state) {
          case 0:
            t1 = this._frame;
          case 2:
            state = 0;
          case 3:
            if (state === 0 && $.ltB(t1, 0))
              var frame = 0;
            else
              switch (state) {
                case 0:
                  t1 = this._frame;
                case 3:
                  state = 0;
                  frame = t1;
              }
            var frameString = $.toString($.toInt(frame));
          case 4:
            state = 0;
            for (; $.ltB($.get$length(frameString), 4);)
              frameString = '0' + $.S(frameString);
            frameName = this._texturePrefix + '_' + $.S(frameString) + '.png';
        }
      return $.Tuple$(offset, frameName);
  }
},
 TextureAnimationRequest$7$delay$initialFrame$initialFrameOffset$startFrame: function(_texturePrefix, _frameCount, _offset, delay, initialFrame, initialFrameOffset, startFrame) {
}
};

$$.PElement = {"":
 ["_lib1_parent?"],
 "super": "AttachableObject",
 clip$0: function() { return this.clip.call$0(); },
 get$width: function() {
  return this._width;
},
 set$width: function(value) {
  this._width = value;
  this.invalidateDraw$0();
},
 get$height: function() {
  return this._height;
},
 set$height: function(value) {
  this._height = value;
  this.invalidateDraw$0();
},
 get$size: function() {
  return $.Size$(this._width, this._height);
},
 set$size: function(value) {
  this._width = value.get$width();
  this._height = value.get$height();
  this.invalidateDraw$0();
},
 get$visualChildCount: function() {
  return 0;
},
 get$parent: function() {
  return this._lib1_parent;
},
 get$updated: function() {
  return this._updatedEventHandle;
},
 getTransform$0: function() {
  var tx = $.AffineTransform$(1, 0, 0, 1, 0, 0);
  $.forEach(this._transforms, tx.get$concatenate());
  return tx;
},
 draw$1: function(ctx) {
  this.update$0();
  var dirty = this._lastDrawSize == null;
  this.drawCore$1(ctx);
  return dirty;
},
 update$0: function() {
  this._updatedEventHandle.fireEvent$1($.CTC20);
},
 drawCore$1: function(ctx) {
  if (this.cacheEnabled)
    this._drawCached$1(ctx);
  else
    this._drawNormal$1(ctx);
},
 addTransform$0: function() {
  this.validateNotDisposed$0();
  var tx = $.AffineTransform$(1, 0, 0, 1, 0, 0);
  this._transforms.push(tx);
  return tx;
},
 invalidateDraw$0: function() {
  this.validateNotDisposed$0();
  if (!(this._lastDrawSize == null)) {
    this._lastDrawSize = null;
    this._invalidateParent$0();
  }
},
 getVisualChild$1: function(index) {
  throw $.$$throw('no children for this type');
},
 registerParent$1: function(parent$) {
  this._lib1_parent = parent$;
},
 _drawCached$1: function(ctx) {
  if (this._cacheCanvas == null)
    this._cacheCanvas = $.CanvasElement_CanvasElement($, $);
  var t1 = this._lastDrawSize;
  var intLastDrawSize = t1 == null ? null : $.Size$($.toInt(t1.get$width()), $.toInt(this._lastDrawSize.get$height()));
  if (!$.eqB($.CanvasUtil_getCanvasSize(this._cacheCanvas), intLastDrawSize)) {
    $.indexSet(this._cacheCanvas.get$attributes(), 'width', this.get$width());
    $.indexSet(this._cacheCanvas.get$attributes(), 'height', this.get$height());
    this._drawInternal$1(this._cacheCanvas.get$context2d());
  }
  ctx.save$0();
  $.CanvasUtil_transform(ctx, this.getTransform$0());
  ctx.drawImage$3(this._cacheCanvas, 0, 0);
  ctx.restore$0();
},
 _drawNormal$1: function(ctx) {
  var tx = this.getTransform$0();
  if (this._isClipped$2(tx, ctx) === true)
    return;
  ctx.save$0();
  $.CanvasUtil_transform(ctx, tx);
  if (this.clip) {
    ctx.beginPath$0();
    ctx.rect$4(0, 0, this.get$width(), this.get$height());
    ctx.clip$0();
  }
  this._drawInternal$1(ctx);
  ctx.restore$0();
},
 _drawInternal$1: function(ctx) {
  var t1 = this._alpha;
  if (!(t1 == null))
    ctx.set$globalAlpha(t1);
  this.drawOverride$1(ctx);
  this._lastDrawSize = this.get$size();
},
 _isClipped$2: function(tx, ctx) {
  if (this.clip)
    ;
  return false;
},
 _invalidateParent$0: function() {
  this._invalidatedEventHandle.fireEvent$1($.CTC20);
  this._lib1_parent.childInvalidated$1(this);
}
};

$$.ElementParentImpl = {"":
 [],
 "super": "PElement",
 onChildrenChanged$0: function() {
  this.invalidateDraw$0();
},
 childInvalidated$1: function(child) {
  this.invalidateDraw$0();
},
 update$0: function() {
  this._forEach$1(new $.ElementParentImpl_update_anon());
  $.PElement.prototype.update$0.call(this);
},
 drawOverride$1: function(ctx) {
  this._forEach$1(new $.ElementParentImpl_drawOverride_anon(ctx));
},
 _forEach$1: function(f) {
  var length$ = this.get$visualChildCount();
  if (typeof length$ !== 'number')
    return this._forEach$1$bailout(1, f, length$);
  for (var i = 0; i < length$; ++i)
    f.call$1(this.getVisualChild$1(i));
},
 _forEach$1$bailout: function(state, f, length$) {
  for (var i = 0; $.ltB(i, length$); ++i)
    f.call$1(this.getVisualChild$1(i));
}
};

$$.Panel = {"":
 [],
 "super": "ElementParentImpl",
 addElement$1: function(element) {
  this.insertAt$2(element, this._children.length);
},
 insertAt$2: function(element, index) {
  element.registerParent$1(this);
  $.insertRange$3(this._children, index, 1, element);
  $.get$Panel__containerTransformProperty().set$2(element, element.addTransform$0());
  this.onChildrenChanged$0();
},
 getVisualChild$1: function(index) {
  var t1 = this._children;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 get$visualChildCount: function() {
  return this._children.length;
},
 getChildTransform$1: function(child) {
  return $.get$Panel__containerTransformProperty().get$1(child);
},
 drawOverride$1: function(ctx) {
  var t1 = this.background;
  if (!(t1 == null)) {
    ctx.set$fillStyle(t1);
    ctx.fillRect$4(0, 0, this.get$width(), this.get$height());
  }
  $.ElementParentImpl.prototype.drawOverride$1.call(this, ctx);
}
};

$$.PCanvas = {"":
 ["_children", "background", "_transforms", "cacheEnabled", "_updatedEventHandle", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_lib1_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "Panel",
 setTopLeft$2: function(element, value) {
  this.getChildTransform$1(element).setToTranslation$2(value.get$x(), value.get$y());
},
 is$PCanvas: true
};

$$.Stage = {"":
 ["_invalidatedEventHandle", "_canvas", "_lib1_element?", "_ctx", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "AttachableObject",
 get$size: function() {
  var t1 = this._canvas;
  return $.Size$(t1.get$width(), t1.get$height());
},
 get$invalidated: function() {
  return this._invalidatedEventHandle;
},
 get$rootElement: function() {
  return this._lib1_element;
},
 draw$0: function() {
  this.validateNotDisposed$0();
  var t1 = this._ctx;
  var t2 = t1 == null;
  var t3 = this._canvas;
  if (t2)
    this._ctx = t3.get$context2d();
  else
    t1.clearRect$4(0, 0, t3.get$width(), t3.get$height());
  return this._lib1_element.draw$1(this._ctx);
},
 childInvalidated$1: function(child) {
  this.validateNotDisposed$0();
  this._invalidatedEventHandle.fireEvent$1($.CTC20);
},
 Stage$2: function(_canvas, _element) {
  this._lib1_element.registerParent$1(this);
}
};

$$.ClickManager = {"":
 ["_stage", "_mouseDownElement"],
 "super": "Object",
 _mouseMove$1: function(e) {
  var items = this._updateMouseLocation$1($.getMouseEventCoordinate(e));
  if ($.gtB($.get$length(items), 0))
    $.forEach(items, new $.ClickManager__mouseMove_anon($.ElementMouseEventArgs_ElementMouseEventArgs($.index(items, 0), e)));
},
 get$_mouseMove: function() { return new $.BoundClosure(this, '_mouseMove$1'); },
 _mouseOut$1: function(e) {
  this._updateMouseLocation$1(null);
  $.get$ClickManager__mouseOutEvent().fireEvent$2(this._stage, $.CTC20);
},
 get$_mouseOut: function() { return new $.BoundClosure(this, '_mouseOut$1'); },
 _mouseUp$1: function(e) {
  if (!(this._mouseDownElement == null)) {
    var upElement = $.$$(this._updateMouseLocation$1($.getMouseEventCoordinate(e))).firstOrDefault$1(new $.ClickManager__mouseUp_anon());
    if ($.eqB(upElement, this._mouseDownElement))
      this._doClick$2(upElement, e);
    this._mouseDownElement = null;
  }
},
 get$_mouseUp: function() { return new $.BoundClosure(this, '_mouseUp$1'); },
 _mouseDown$1: function(e) {
  this._mouseDownElement = $.$$(this._updateMouseLocation$1($.getMouseEventCoordinate(e))).firstOrDefault$1(new $.ClickManager__mouseDown_anon());
},
 get$_mouseDown: function() { return new $.BoundClosure(this, '_mouseDown$1'); },
 _updateMouseLocation$1: function(value) {
  return $.Mouse_markMouseOver(this._stage, value);
},
 _doClick$2: function(element, e) {
  var args = $.ElementMouseEventArgs_ElementMouseEventArgs(element, e);
  $.get$ClickManager__clickEvent().fireEvent$2(element, args);
},
 ClickManager$1: function(_stage) {
  var t1 = this._stage._canvas;
  $.add$1(t1.get$on().get$mouseMove(), this.get$_mouseMove());
  $.add$1(t1.get$on().get$mouseOut(), this.get$_mouseOut());
  $.add$1(t1.get$on().get$mouseUp(), this.get$_mouseUp());
  $.add$1(t1.get$on().get$mouseDown(), this.get$_mouseDown());
}
};

$$.ElementMouseEventArgs = {"":
 ["element?", "shiftKey?"],
 "super": "EventArgs"
};

$$.Field = {"":
 ["mineCount?", "_adjacents", "width", "height", "_source"],
 "super": "Array2d",
 getAdjacentCount$2: function(x, y) {
  if (this.get$2(x, y) === true)
    return;
  var t1 = this._adjacents;
  var val = t1.get$2(x, y);
  if (val == null) {
    for (var t2 = $.iterator(this.getAdjacentIndices$2(x, y)), val = 0; t2.hasNext$0() === true;)
      if (this.operator$index$1(t2.next$0()) === true)
        ++val;
    t1.set$3(x, y, val);
  }
  return val;
},
 Field$_internal$3: function(mineCount, cols, source) {
  for (var t1 = $.iterator(this), count = 0; t1.hasNext$0() === true;)
    if (t1.next$0() === true)
      ++count;
}
};

$$.Game = {"":
 ["field?", "_states", "_updatedEvent", "_gameStateEvent", "_state", "_minesLeft", "_revealsLeft", "_startTime", "_endTime"],
 "super": "Object",
 get$minesLeft: function() {
  return this._minesLeft;
},
 get$state: function() {
  return this._state;
},
 get$updated: function() {
  return this._updatedEvent;
},
 get$stateChanged: function() {
  return this._gameStateEvent;
},
 getSquareState$2: function(x, y) {
  return this._states.get$2(x, y);
},
 get$gameEnded: function() {
  return $.eqB(this._state, $.CTC37) || $.eqB(this._state, $.CTC38);
},
 get$duration: function() {
  if (this._startTime == null)
    return;
  else {
    var end = this._endTime;
    if (end == null)
      end = $.Date_Date$now();
    return end.difference$1(this._startTime);
  }
},
 setFlag$3: function(x, y, value) {
  this._ensureStarted$0();
  var t1 = this._states;
  var currentSS = t1.get$2(x, y);
  if (value) {
    $.require($.eq(currentSS, $.CTC34), '');
    t1.set$3(x, y, $.CTC36);
    this._minesLeft = $.sub(this._minesLeft, 1);
  } else {
    $.require($.eq(currentSS, $.CTC36), '');
    t1.set$3(x, y, $.CTC34);
    this._minesLeft = $.add(this._minesLeft, 1);
  }
  this._update$0();
},
 canReveal$2: function(x, y) {
  if ($.eqB(this._states.get$2(x, y), $.CTC34))
    return true;
  else if (this._canChord$2(x, y) === true)
    return true;
  return false;
},
 reveal$2: function(x, y) {
  this._ensureStarted$0();
  $.require(this.canReveal$2(x, y), 'Item cannot be revealed.');
  if ($.eqB(this._states.get$2(x, y), $.CTC34))
    if (this.field.get$2(x, y) === true) {
      this._setLost$0();
      var reveals = [];
    } else {
      reveals = this._doReveal$2(x, y);
      if (typeof reveals !== 'object' || reveals === null || reveals.constructor !== Array || !!reveals.fixed$length)
        return this.reveal$2$bailout(1, reveals);
    }
  else
    reveals = this._canChord$2(x, y) === true ? this._doChord$2(x, y) : null;
  this._update$0();
  if ($.eqB(this._state, $.CTC38))
    return;
  else
    return reveals;
},
 reveal$2$bailout: function(state, env0) {
  switch (state) {
    case 1:
      reveals = env0;
      break;
  }
  switch (state) {
    case 0:
      this._ensureStarted$0();
      $.require(this.canReveal$2(x, y), 'Item cannot be revealed.');
    case 1:
      if (state === 1 || state === 0 && $.eqB(this._states.get$2(x, y), $.CTC34))
        switch (state) {
          case 0:
          case 1:
            if (state === 0 && this.field.get$2(x, y) === true) {
              this._setLost$0();
              var reveals = [];
            } else
              switch (state) {
                case 0:
                  reveals = this._doReveal$2(x, y);
                case 1:
                  state = 0;
              }
        }
      else
        reveals = this._canChord$2(x, y) === true ? this._doChord$2(x, y) : null;
      this._update$0();
      if ($.eqB(this._state, $.CTC38))
        return;
      else
        return reveals;
  }
},
 _canChord$2: function(x, y) {
  if ($.eqB(this._states.get$2(x, y), $.CTC35)) {
    var adjCount = this.field.getAdjacentCount$2(x, y);
    if ($.gtB(adjCount, 0))
      if ($.gtB(this._getAdjacentCount$3(x, y, $.CTC34), 0))
        if ($.eqB(this._getAdjacentCount$3(x, y, $.CTC36), adjCount))
          return true;
  }
  return false;
},
 _doChord$2: function(x, y) {
  var t1 = this._states;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._doChord$2$bailout(1, x, y, t1, 0, 0, 0);
  t1.get$2(x, y);
  var flagged = $.ListImplementation_List(null);
  var hidden = $.ListImplementation_List(null);
  var t3 = this.field;
  if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
    return this._doChord$2$bailout(2, x, y, t1, t3, flagged, hidden);
  t3.getAdjacentCount$2(x, y);
  for (var t2 = $.iterator(t3.getAdjacentIndices$2(x, y)), failed = false; t2.hasNext$0() === true;) {
    var t4 = t2.next$0();
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t1.length)
      throw $.ioore(t4);
    if ($.eqB(t1[t4], $.CTC34)) {
      hidden.push(t4);
      if (t4 >= t3.length)
        throw $.ioore(t4);
      if (t3[t4] === true)
        failed = true;
    } else {
      if (t4 >= t1.length)
        throw $.ioore(t4);
      if ($.eqB(t1[t4], $.CTC36))
        flagged.push(t4);
    }
  }
  var reveals = [];
  if (failed)
    this._setLost$0();
  else
    for (t1 = $.iterator(hidden); t1.hasNext$0() === true;) {
      var c = t3.getCoordinate$1(t1.next$0());
      if (this.canReveal$2(c.get$item1(), c.get$item2()) === true)
        $.addAll(reveals, this.reveal$2(c.get$item1(), c.get$item2()));
    }
  return reveals;
},
 _doChord$2$bailout: function(state, env0, env1, env2, env3, env4, env5) {
  switch (state) {
    case 1:
      var x = env0;
      var y = env1;
      t1 = env2;
      break;
    case 2:
      x = env0;
      y = env1;
      t1 = env2;
      t3 = env3;
      flagged = env4;
      hidden = env5;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this._states;
    case 1:
      state = 0;
      t1.get$2(x, y);
      var flagged = $.ListImplementation_List(null);
      var hidden = $.ListImplementation_List(null);
      var t3 = this.field;
    case 2:
      state = 0;
      t3.getAdjacentCount$2(x, y);
      for (var t2 = $.iterator(t3.getAdjacentIndices$2(x, y)), failed = false; t2.hasNext$0() === true;) {
        var t4 = t2.next$0();
        if ($.eqB($.index(t1, t4), $.CTC34)) {
          hidden.push(t4);
          if ($.index(t3, t4) === true)
            failed = true;
        } else if ($.eqB($.index(t1, t4), $.CTC36))
          flagged.push(t4);
      }
      var reveals = [];
      if (failed)
        this._setLost$0();
      else
        for (t1 = $.iterator(hidden); t1.hasNext$0() === true;) {
          var c = t3.getCoordinate$1(t1.next$0());
          if (this.canReveal$2(c.get$item1(), c.get$item2()) === true)
            $.addAll(reveals, this.reveal$2(c.get$item1(), c.get$item2()));
        }
      return reveals;
  }
},
 _doReveal$2: function(x, y) {
  var t1 = this._states;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._doReveal$2$bailout(1, x, y, t1, 0, 0, 0);
  t1.set$3(x, y, $.CTC35);
  var t3 = this._revealsLeft;
  if (typeof t3 !== 'number')
    return this._doReveal$2$bailout(2, x, y, t1, t3, 0, 0);
  this._revealsLeft = t3 - 1;
  var reveals = [$.Coordinate$(x, y)];
  var t2 = this._revealsLeft;
  if (typeof t2 !== 'number')
    return this._doReveal$2$bailout(3, x, y, t1, t2, reveals, 0);
  if (t2 === 0)
    this._setWon$0();
  else {
    t2 = this.field;
    t3 = t2.getAdjacentCount$2(x, y);
    if (typeof t3 !== 'number')
      return this._doReveal$2$bailout(4, x, y, t1, t2, t3, reveals);
    if (t3 === 0)
      for (t3 = $.iterator(t2.getAdjacentIndices$2(x, y)); t3.hasNext$0() === true;) {
        var t4 = t3.next$0();
        if (t4 !== (t4 | 0))
          throw $.iae(t4);
        if (t4 < 0 || t4 >= t1.length)
          throw $.ioore(t4);
        if ($.eqB(t1[t4], $.CTC34)) {
          var c = t2.getCoordinate$1(t4);
          $.addAll(reveals, this._doReveal$2(c.get$item1(), c.get$item2()));
        }
      }
  }
  return reveals;
},
 _doReveal$2$bailout: function(state, env0, env1, env2, env3, env4, env5) {
  switch (state) {
    case 1:
      var x = env0;
      var y = env1;
      t1 = env2;
      break;
    case 2:
      x = env0;
      y = env1;
      t1 = env2;
      t3 = env3;
      break;
    case 3:
      x = env0;
      y = env1;
      t1 = env2;
      t2 = env3;
      reveals = env4;
      break;
    case 4:
      x = env0;
      y = env1;
      t1 = env2;
      t2 = env3;
      t3 = env4;
      reveals = env5;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this._states;
    case 1:
      state = 0;
      t1.set$3(x, y, $.CTC35);
      var t3 = this._revealsLeft;
    case 2:
      state = 0;
      this._revealsLeft = $.sub(t3, 1);
      var reveals = [$.Coordinate$(x, y)];
      var t2 = this._revealsLeft;
    case 3:
      state = 0;
    case 4:
      if (state === 0 && $.eqB(t2, 0))
        this._setWon$0();
      else
        switch (state) {
          case 0:
            t2 = this.field;
            t3 = t2.getAdjacentCount$2(x, y);
          case 4:
            state = 0;
            if ($.eqB(t3, 0))
              for (t3 = $.iterator(t2.getAdjacentIndices$2(x, y)); t3.hasNext$0() === true;) {
                var t4 = t3.next$0();
                if ($.eqB($.index(t1, t4), $.CTC34)) {
                  var c = t2.getCoordinate$1(t4);
                  $.addAll(reveals, this._doReveal$2(c.get$item1(), c.get$item2()));
                }
              }
        }
      return reveals;
  }
},
 _setWon$0: function() {
  var t1 = this.field;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._setWon$0$bailout(1, t1, 0);
  var t3 = this._states;
  if (typeof t3 !== 'object' || t3 === null || (t3.constructor !== Array || !!t3.immutable$list) && !t3.is$JavaScriptIndexingBehavior())
    return this._setWon$0$bailout(2, t1, t3);
  var t5 = t1.length;
  var t6 = t3.length;
  var i = 0;
  for (; i < t5; ++i)
    if (t1[i] === true) {
      if (i >= t6)
        throw $.ioore(i);
      t3[i] = $.CTC44;
    }
  this._setState$1($.CTC37);
},
 _setWon$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this.field;
    case 1:
      state = 0;
      var t3 = this._states;
    case 2:
      state = 0;
      var i = 0;
      for (; $.ltB(i, $.get$length(t1)); ++i)
        if ($.index(t1, i) === true)
          $.indexSet(t3, i, $.CTC44);
      this._setState$1($.CTC37);
  }
},
 _setLost$0: function() {
  var t1 = this.field;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._setLost$0$bailout(1, t1, 0);
  var t3 = this._states;
  if (typeof t3 !== 'object' || t3 === null || (t3.constructor !== Array || !!t3.immutable$list) && !t3.is$JavaScriptIndexingBehavior())
    return this._setLost$0$bailout(2, t1, t3);
  var t5 = t1.length;
  var t6 = t3.length;
  var i = 0;
  for (; i < t5; ++i)
    if (t1[i] === true) {
      if (i >= t6)
        throw $.ioore(i);
      t3[i] = $.CTC41;
    }
  this._setState$1($.CTC38);
},
 _setLost$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state) {
    case 0:
      var t1 = this.field;
    case 1:
      state = 0;
      var t3 = this._states;
    case 2:
      state = 0;
      var i = 0;
      for (; $.ltB(i, $.get$length(t1)); ++i)
        if ($.index(t1, i) === true)
          $.indexSet(t3, i, $.CTC41);
      this._setState$1($.CTC38);
  }
},
 _update$0: function() {
  return this._updatedEvent.fireEvent$1($.CTC20);
},
 _setState$1: function(value) {
  if (!$.eqB(this._state, value)) {
    this._state = value;
    if ($.eqB(this._state, $.CTC39))
      this._startTime = $.Date_Date$now();
    else if (this.get$gameEnded() === true)
      this._endTime = $.Date_Date$now();
    this._gameStateEvent.fireEvent$1(this._state);
  }
},
 _ensureStarted$0: function() {
  if ($.eqB(this.get$state(), $.CTC31))
    this._setState$1($.CTC39);
},
 _getAdjacentCount$3: function(x, y, state) {
  var t1 = $.iterator(this.field.getAdjacentIndices$2(x, y));
  var t2 = this._states;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this._getAdjacentCount$3$bailout(1, state, t1, t2);
  var val = 0;
  for (; t1.hasNext$0() === true;) {
    var t3 = t1.next$0();
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    if ($.eqB(t2[t3], state))
      ++val;
  }
  return val;
},
 _getAdjacentCount$3$bailout: function(state, state, t1, t2) {
  var val = 0;
  for (; t1.hasNext$0() === true;)
    if ($.eqB($.index(t2, t1.next$0()), state))
      ++val;
  return val;
},
 Game$1: function(field) {
  this._minesLeft = field.get$mineCount();
  this._revealsLeft = $.sub($.get$length(field), field.get$mineCount());
}
};

$$.GameState = {"":
 ["name?"],
 "super": "Object",
 toString$0: function() {
  return 'GameState: ' + $.S(this.name);
}
};

$$.SquareState = {"":
 ["name?"],
 "super": "Object",
 toString$0: function() {
  return 'SquareState: ' + $.S(this.name);
}
};

$$.BoardElement = {"":
 ["_elements", "_transforms", "cacheEnabled", "_updatedEventHandle", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_lib1_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "ElementParentImpl",
 get$visualChildCount: function() {
  var t1 = this._elements;
  if (t1 == null)
    return 0;
  else
    return $.get$length(t1);
},
 getVisualChild$1: function(index) {
  var t1 = this._elements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.getVisualChild$1$bailout(1, t1, index);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 getVisualChild$1$bailout: function(state, t1, index) {
  return $.index(t1, index);
},
 update$0: function() {
  if (this.get$_lib3_game() == null)
    this._elements = null;
  else if (this.get$_elementsNeedUpdate() === true) {
    this._elements = $.Array2d_Array2d(this.get$_lib3_game().get$field().get$width(), this.get$_lib3_game().get$field().get$height(), null);
    var i = 0;
    while (true) {
      var t1 = $.get$length(this._elements);
      if (typeof t1 !== 'number')
        return this.update$0$bailout(1, i, t1, 0, 0, 0);
      if (!(i < t1))
        break;
      var coords = this._elements.getCoordinate$1(i);
      var se = $.SquareElement$(coords.get$item1(), coords.get$item2());
      se.registerParent$1(this);
      $.ClickManager_addHandler(se, this.get$_lib3_parent().get$_squareClicked());
      var etx = se.addTransform$0();
      t1 = coords.get$item1();
      if (typeof t1 !== 'number')
        return this.update$0$bailout(2, coords, etx, t1, i, se);
      t1 *= 80;
      var t3 = coords.get$item2();
      if (typeof t3 !== 'number')
        return this.update$0$bailout(3, etx, i, se, t1, t3);
      etx.setToTranslation$2(t1, t3 * 80);
      t1 = this._elements;
      if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
        return this.update$0$bailout(4, t1, i, se, 0, 0);
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = se;
      ++i;
    }
    t1 = this.get$_lib3_game().get$field().get$width();
    if (typeof t1 !== 'number')
      return this.update$0$bailout(5, t1, 0, 0, 0, 0);
    t1 *= 80;
    t3 = this.get$_lib3_game().get$field().get$height();
    if (typeof t3 !== 'number')
      return this.update$0$bailout(6, t1, t3, 0, 0, 0);
    this.set$size($.Size$(t1, t3 * 80));
  }
  $.ElementParentImpl.prototype.update$0.call(this);
},
 update$0$bailout: function(state, env0, env1, env2, env3, env4) {
  switch (state) {
    case 1:
      i = env0;
      t1 = env1;
      break;
    case 2:
      coords = env0;
      etx = env1;
      t1 = env2;
      i = env3;
      se = env4;
      break;
    case 3:
      etx = env0;
      i = env1;
      se = env2;
      t1 = env3;
      t3 = env4;
      break;
    case 4:
      t1 = env0;
      i = env1;
      se = env2;
      break;
    case 5:
      t1 = env0;
      break;
    case 6:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state) {
    case 0:
    default:
      if (state === 0 && this.get$_lib3_game() == null)
        this._elements = null;
      else
        switch (state) {
          case 0:
          default:
            if (state === 6 || state === 5 || state === 4 || state === 3 || state === 2 || state === 1 || state === 0 && this.get$_elementsNeedUpdate() === true)
              switch (state) {
                case 0:
                  this._elements = $.Array2d_Array2d(this.get$_lib3_game().get$field().get$width(), this.get$_lib3_game().get$field().get$height(), null);
                  var i = 0;
                default:
                  L0:
                    while (true)
                      switch (state) {
                        case 0:
                          var t1 = $.get$length(this._elements);
                        case 1:
                          state = 0;
                          if (!$.ltB(i, t1))
                            break L0;
                          var coords = this._elements.getCoordinate$1(i);
                          var se = $.SquareElement$(coords.get$item1(), coords.get$item2());
                          se.registerParent$1(this);
                          $.ClickManager_addHandler(se, this.get$_lib3_parent().get$_squareClicked());
                          var etx = se.addTransform$0();
                          t1 = coords.get$item1();
                        case 2:
                          state = 0;
                          t1 = $.mul(t1, 80);
                          var t3 = coords.get$item2();
                        case 3:
                          state = 0;
                          etx.setToTranslation$2(t1, $.mul(t3, 80));
                          t1 = this._elements;
                        case 4:
                          state = 0;
                          $.indexSet(t1, i, se);
                          ++i;
                      }
                  t1 = this.get$_lib3_game().get$field().get$width();
                case 5:
                  state = 0;
                  t1 = $.mul(t1, 80);
                  t3 = this.get$_lib3_game().get$field().get$height();
                case 6:
                  state = 0;
                  this.set$size($.Size$(t1, $.mul(t3, 80)));
              }
        }
      $.ElementParentImpl.prototype.update$0.call(this);
  }
},
 get$_lib3_parent: function() {
  return $.propertyTypeCast(this.get$parent(), 'is$PCanvas').get$parent();
},
 get$_lib3_game: function() {
  return this.get$_lib3_parent().get$_lib3_game();
},
 get$_elementsNeedUpdate: function() {
  var t1 = this._elements;
  return t1 == null || !$.eqB(t1.get$width(), this.get$_lib3_game().get$field().get$width()) || !$.eqB(this._elements.get$height(), this.get$_lib3_game().get$field().get$height());
},
 get$_lib3_textureData: function() {
  return this.get$_lib3_parent().get$_lib3_textureData();
}
};

$$.GameBackgroundElement = {"":
 ["_transforms", "cacheEnabled", "_updatedEventHandle", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_lib1_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 update$0: function() {
  if (!$.eqB(this.get$size(), this.get$_lib3_parent().get$size()))
    this.set$size(this.get$_lib3_parent().get$size());
},
 drawOverride$1: function(ctx) {
  var t1 = $.sub(this.get$_lib3_parent().get$_lib3_game().get$field().get$width(), 1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var rightBgLoc = 80 * t1 + 32;
  var t2 = $.sub(this.get$_lib3_parent().get$_lib3_game().get$field().get$height(), 1);
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  var bottomBgLoc = 80 * t2 + 32;
  ctx.save$0();
  ctx.translate$2(this.get$_lib3_parent().get$_scaledBoardOffset().get$x(), this.get$_lib3_parent().get$_scaledBoardOffset().get$y());
  this.get$_lib3_textureData().drawTextureKeyAt$2(ctx, 'game_board_corner_top_left.png');
  this.get$_lib3_textureData().drawTextureKeyAt$3(ctx, 'game_board_corner_top_right.png', $.Coordinate$(rightBgLoc, 0));
  this.get$_lib3_textureData().drawTextureKeyAt$3(ctx, 'game_board_corner_bottom_left.png', $.Coordinate$(0, bottomBgLoc));
  this.get$_lib3_textureData().drawTextureKeyAt$3(ctx, 'game_board_corner_bottom_right.png', $.Coordinate$(rightBgLoc, bottomBgLoc));
  for (var i = 1; $.ltB(i, $.sub(this.get$_lib3_parent().get$_lib3_game().get$field().get$width(), 1)); ++i) {
    var xLoc = 80 * i + 32;
    this.get$_lib3_textureData().drawTextureKeyAt$3(ctx, 'game_board_side_top.png', $.Coordinate$(xLoc, 0));
    this.get$_lib3_textureData().drawTextureKeyAt$3(ctx, 'game_board_side_bottom.png', $.Coordinate$(xLoc, bottomBgLoc));
  }
  for (i = 1; $.ltB(i, $.sub(this.get$_lib3_parent().get$_lib3_game().get$field().get$height(), 1)); ++i) {
    var yLoc = 80 * i + 32;
    this.get$_lib3_textureData().drawTextureKeyAt$3(ctx, 'game_board_side_left.png', $.Coordinate$(0, yLoc));
    this.get$_lib3_textureData().drawTextureKeyAt$3(ctx, 'game_board_side_right.png', $.Coordinate$(rightBgLoc, yLoc));
  }
  ctx.restore$0();
  ctx.save$0();
  ctx.transform$6(this.get$_lib3_parent().get$_scale(), 0, 0, this.get$_lib3_parent().get$_scale(), 0, 0);
  this._drawCorner$1(ctx);
  ctx.save$0();
  ctx.transform$6(-1, 0, 0, 1, $.CTC27.width, 0);
  this._drawCorner$1(ctx);
  t1 = $.CTC27.height;
  ctx.transform$6(1, 0, 0, -1, 0, t1);
  this._drawCorner$1(ctx);
  ctx.restore$0();
  ctx.transform$6(1, 0, 0, -1, 0, t1);
  this._drawCorner$1(ctx);
  ctx.restore$0();
},
 _drawCorner$1: function(ctx) {
  this.get$_lib3_textureData().drawTextureKeyAt$2(ctx, 'background_top_left.png');
  this.get$_lib3_textureData().drawTextureKeyAt$3(ctx, 'background_side_left.png', $.Coordinate$(0, $.CTC28.y));
},
 get$_lib3_parent: function() {
  return $.propertyTypeCast(this.get$parent(), 'is$PCanvas').get$parent();
},
 get$_lib3_textureData: function() {
  return this.get$_lib3_parent().get$_lib3_textureData();
}
};

$$.GameElement = {"":
 ["_lib3_canvas", "_background", "_boardElement", "_scoreElement", "_newGameElement", "_titleElement", "_popAnimationLayer", "_dartAnimationLayer", "_lib3_textureData?", "_targetChanged", "_targetX", "_targetY", "_scale?", "_scaledBoardOffset?", "_scaledInnerBox", "_lib3_game?", "_transforms", "cacheEnabled", "_updatedEventHandle", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_lib1_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "ElementParentImpl",
 get$newGameClick: function() {
  return this._newGameElement.get$clicked();
},
 get$game: function() {
  return this._lib3_game;
},
 set$game: function(value) {
  this._lib3_game = value;
  if (value == null)
    this.set$size($.CTC30);
  else
    this._updateSize$2(value.get$field().get$width(), value.get$field().get$height());
},
 setGameManager$1: function(manager) {
  this._scoreElement.setGameManager$1(manager);
},
 get$visualChildCount: function() {
  return 1;
},
 getVisualChild$1: function(index) {
  return this._lib3_canvas;
},
 update$0: function() {
  $.ElementParentImpl.prototype.update$0.call(this);
  var offset = $.add(this._scaledBoardOffset, $.CTC26);
  var t1 = this._lib3_canvas;
  t1.setTopLeft$2(this._boardElement, offset);
  t1.setTopLeft$2(this._popAnimationLayer, offset);
  t1.setTopLeft$2(this._dartAnimationLayer, offset);
  var t2 = this._scale;
  var t3 = $.CTC27.width;
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  var t4 = 40 + t3;
  var t5 = $.CTC28.x;
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  t4 -= t5;
  var t6 = this._scoreElement;
  var t7 = t6.get$width();
  if (typeof t7 !== 'number')
    throw $.iae(t7);
  t1.setTopLeft$2(t6, $.Coordinate$($.mul(t2, t4 - t7), 0));
  t6 = t1.getChildTransform$1(t6);
  var t8 = this._scale;
  t6.scale$2(t8, t8);
  t8 = this._newGameElement;
  t6 = $.mul(t8.get$width(), 0.2);
  if (typeof t6 !== 'number')
    throw $.iae(t6);
  t6 = t5 + t6;
  t5 = this._scale;
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  t1.setTopLeft$2(t8, $.Coordinate$(t6 * t5, 0));
  t8 = t1.getChildTransform$1(t8);
  var t9 = this._scale;
  t8.scale$2(t9, t9);
  t9 = $.mul(this._scale, 0.5);
  t8 = this._titleElement;
  var t10 = $.mul(t8.get$width(), 1.7);
  if (typeof t10 !== 'number')
    throw $.iae(t10);
  t1.setTopLeft$2(t8, $.Coordinate$($.mul(t9, t3 - t10), 0));
  t8 = t1.getChildTransform$1(t8);
  t1 = this._scale;
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  t8.scale$2(1.7 * t1, 1.7 * t1);
},
 drawOverride$1: function(ctx) {
  $.ElementParentImpl.prototype.drawOverride$1.call(this, ctx);
  this._drawTarget$1(ctx);
},
 _drawTarget$1: function(ctx) {
  var t1 = this._targetX;
  if (!(t1 == null)) {
    var targetLoc = $.Vector$(t1, this._targetY).scale$1(80);
    ctx.set$fillStyle('rgba(255, 0, 0, 0.5)');
    $.CanvasUtil_centeredCircle(ctx, $.add(targetLoc.get$x(), 40), $.add(targetLoc.get$y(), 40), 40);
    ctx.fill$0();
  }
},
 _startPopAnimation$2: function(start, reveals) {
  if (reveals == null)
    reveals = $.map($.filter($.map($.NumberEnumerable_NumberEnumerable$fromRange(0, $.get$length(this.get$game().get$field())), new $.GameElement__startPopAnimation_anon(this)), new $.GameElement__startPopAnimation_anon0()), new $.GameElement__startPopAnimation_anon1()).toList$0();
  var values = $.map($.$$(reveals), new $.GameElement__startPopAnimation_anon2(start)).toList$0();
  $.sort(values, new $.GameElement__startPopAnimation_anon3());
  for (var t1 = $.iterator(values), t2 = this._popAnimationLayer; t1.hasNext$0() === true;) {
    var t3 = t1.next$0();
    var c = $.index(t3, 0);
    var initialOffset = $.index(t3, 1);
    var squareOffset = $.index(t3, 2);
    var delay = $.index(t3, 3);
    var ss = this.get$game().getSquareState$2(c.get$x(), c.get$y());
    switch (ss) {
      case $.CTC35:
      case $.CTC34:
        var frameCount = 28;
        var texturePrefix = 'balloon_pop';
        break;
      case $.CTC41:
        frameCount = 24;
        texturePrefix = 'balloon_explode';
        break;
      default:
        throw $.$$throw('not supported');
    }
    var request = $.TextureAnimationRequest$(texturePrefix, frameCount, squareOffset, delay, 'balloon.png', initialOffset, 0);
    switch (ss) {
      case $.CTC35:
      case $.CTC34:
        $.add$1(request.get$started(), new $.GameElement__startPopAnimation_anon4(this));
        break;
      case $.CTC41:
        $.add$1(request.get$started(), new $.GameElement__startPopAnimation_anon5(this));
        break;
    }
    t2.add$1(request);
  }
},
 _startPopAnimation$1: function(start) {
  return this._startPopAnimation$2(start,null)
},
 _playPop$0: function() {
  $.playAudio('Pop' + $.S($.rnd().nextInt$1(8)));
},
 _playBoom$0: function() {
  $.playAudio('Bomb' + $.S($.add($.rnd().nextInt$1(4), 1)));
},
 _startDartAnimation$1: function(points) {
  $.playAudio('DartThrow3');
  for (var t1 = $.iterator(points), t2 = this._dartAnimationLayer; t1.hasNext$0() === true;) {
    var t3 = t1.next$0();
    var t4 = t3.get$x();
    if (typeof t4 !== 'number')
      throw $.iae(t4);
    t4 = 80 * t4;
    t3 = t3.get$y();
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    var squareOffset = $.CTC45.operator$add$1($.Vector$(t4, 80 * t3));
    t2.add$1($.TextureAnimationRequest$('dart_fly_shadow', 54, squareOffset, 0, null, null, 0));
    t2.add$1($.TextureAnimationRequest$('dart_fly', 54, squareOffset, 0, null, null, 0));
  }
},
 _squareClicked$1: function(args) {
  if (this._lib3_game.get$gameEnded() !== true) {
    var se = args.get$element();
    this._click$3(se.get$x(), se.get$y(), args.get$shiftKey());
  }
},
 get$_squareClicked: function() { return new $.BoundClosure(this, '_squareClicked$1'); },
 _lib3_target$2: function(x, y) {
  this._targetX = x;
  this._targetY = y;
  this._targetChanged.fireEvent$1(null);
  this.invalidateDraw$0();
},
 get$_lib3_target: function() { return new $.BoundClosure1(this, '_lib3_target$2'); },
 _toggleFlag$2: function(x, y) {
  var ss = this.get$game().getSquareState$2(x, y);
  if ($.eqB(ss, $.CTC34)) {
    this.get$game().setFlag$3(x, y, true);
    $.playAudio('Flag2');
    return true;
  } else if ($.eqB(ss, $.CTC36)) {
    this.get$game().setFlag$3(x, y, false);
    $.playAudio('Unflag2');
    return true;
  }
  return false;
},
 _click$3: function(x, y, alt) {
  var ss = this.get$game().getSquareState$2(x, y);
  var t1 = alt === true;
  if (t1)
    if ($.eqB(ss, $.CTC34) || $.eqB(ss, $.CTC36)) {
      this._toggleFlag$2(x, y);
      var reveals = null;
    } else if ($.eqB(ss, $.CTC35))
      if (this.get$game().canReveal$2(x, y) === true) {
        this._startDartAnimation$1($.filter($.map($.$$(this.get$game().get$field().getAdjacentIndices$2(x, y)), new $.GameElement__click_anon(this)), new $.GameElement__click_anon0(this)).toList$0());
        reveals = this.get$game().reveal$2(x, y);
      } else
        reveals = null;
    else
      reveals = null;
  else if ($.eqB(ss, $.CTC34)) {
    this._startDartAnimation$1([$.Coordinate$(x, y)]);
    reveals = this.get$game().reveal$2(x, y);
  } else
    reveals = null;
  if (!(reveals == null) && $.gtB($.get$length(reveals), 0)) {
    if (!t1)
      $.index(reveals, 0);
    this._startPopAnimation$2($.Coordinate$(x, y), reveals);
  } else if ($.eqB(this.get$game().get$state(), $.CTC38))
    this._startPopAnimation$1($.Coordinate$(x, y));
},
 _updateSize$2: function(w, h) {
  var t1 = $.CTC27.width;
  var sizeX = $.GameElement__getScale(w, t1, 1344);
  var sizeY = $.GameElement__getScale(h, $.CTC27.height, 1344);
  var t2 = $.Size$(sizeX, sizeY);
  this.set$size(t2);
  this._lib3_canvas.set$size(t2);
  this._scale = $.div(sizeX, t1);
  this._scaledBoardOffset = $.CTC28.scale$1(this._scale);
  t2 = this._scale;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  this._scaledInnerBox = $.Box$(256 * t2, 0, $.sub(sizeX, 512 * t2), sizeY);
},
 GameElement$1: function(textureData) {
  var t1 = this._lib3_canvas;
  t1.registerParent$1(this);
  t1.addElement$1(this._background);
  t1.addElement$1(this._boardElement);
  var t2 = this._titleElement;
  t1.addElement$1(t2);
  var t3 = this._newGameElement;
  t1.addElement$1(t3);
  t1.addElement$1(this._scoreElement);
  t1.addElement$1(this._popAnimationLayer);
  t1.addElement$1(this._dartAnimationLayer);
  $.add$1(t3.get$clicked(), new $.anon2());
  $.ClickManager_setClickable(t2, true);
  $.ClickManager_addHandler(t2, new $.anon3());
}
};

$$.GameRoot = {"":
 ["_lib3_stage", "_lib3_canvas", "_gameElement", "_clickMan", "_gameElementTx", "_frameRequested", "_lib5_width", "_lib5_height", "_mineCount", "_gameStorage", "_game", "_updatedEventId", "_gameStateChangedId", "_setIntervalId"],
 "super": "GameManager",
 newGame$0: function() {
  $.GameManager.prototype.newGame$0.call(this);
  var t1 = $.GameManager.prototype.get$game.call(this);
  this._gameElement.set$game(t1);
  this._requestFrame$0();
},
 _updateCanvasSize$0: function() {
  this._updateCanvasSizeCore$1($.Size$($.window().get$innerWidth(), $.window().get$innerHeight()));
},
 _updateCanvasSizeCore$1: function(windowSize) {
  var t1 = this._lib3_canvas;
  $.indexSet(t1.get$attributes(), 'width', windowSize.width);
  $.indexSet(t1.get$attributes(), 'height', windowSize.height);
  this._requestFrame$0();
},
 _requestFrame$0: function() {
  if (!this._frameRequested) {
    this._frameRequested = true;
    $.window().requestAnimationFrame$1(this.get$_onFrame());
  }
},
 _onFrame$1: function(time) {
  var t1 = this._gameElement;
  var boardInnerBox = t1._scaledInnerBox;
  var t2 = this._lib3_stage;
  var prettyScale = $.min(1, $.min($.div(t2.get$size().get$width(), boardInnerBox.get$width()), $.div(t2.get$size().get$height(), boardInnerBox.get$height())));
  var newDimensions = $.mul(t1.get$size(), prettyScale);
  var delta = $.Vector$($.sub(t2.get$size().get$width(), newDimensions.get$width()), $.sub(t2.get$size().get$height(), newDimensions.get$height())).scale$1(0.5).scale$1(1 / prettyScale);
  var t3 = this._gameElementTx;
  t3.setToScale$2(prettyScale, prettyScale);
  t3.translate$2(delta.get$x(), delta.get$y());
  var updated = t2.draw$0();
  this._frameRequested = false;
  if (updated === true)
    this._requestFrame$0();
},
 get$_onFrame: function() { return new $.BoundClosure(this, '_onFrame$1'); },
 updateClock$0: function() {
  this._requestFrame$0();
  $.GameManager.prototype.updateClock$0.call(this);
},
 gameUpdated$1: function(args) {
  this._requestFrame$0();
},
 get$gameUpdated: function() { return new $.BoundClosure(this, 'gameUpdated$1'); },
 _stageInvalidated$1: function(args) {
  this._requestFrame$0();
},
 get$_stageInvalidated: function() { return new $.BoundClosure(this, '_stageInvalidated$1'); },
 _mouseMoveHandler$1: function(args) {
  if (this.get$game().get$gameEnded() !== true) {
    var t1 = args.get$element();
    t1 = typeof t1 === 'object' && t1 !== null && !!t1.is$SquareElement;
  } else
    t1 = false;
  if (t1) {
    var se = args.get$element();
    var showPointer = this.get$game().canReveal$2(se.get$x(), se.get$y());
  } else {
    t1 = args.get$element();
    if (typeof t1 === 'object' && t1 !== null && !!t1.is$NewGameElement)
      showPointer = true;
    else {
      t1 = args.get$element();
      showPointer = typeof t1 === 'object' && t1 !== null && !!t1.is$GameTitleElement && true;
    }
  }
  this._updateCursor$1(showPointer);
},
 get$_mouseMoveHandler: function() { return new $.BoundClosure(this, '_mouseMoveHandler$1'); },
 _mouseOutHandler$1: function(args) {
  this._updateCursor$1(false);
},
 get$_mouseOutHandler: function() { return new $.BoundClosure(this, '_mouseOutHandler$1'); },
 _updateCursor$1: function(showFinger) {
  var t1 = showFinger === true ? 'pointer' : 'inherit';
  this._lib3_canvas.get$style().set$cursor(t1);
},
 GameRoot$_internal$7: function(width, height, mineCount, _canvas, _stage, gameElement, _clickMan) {
  var t1 = this._gameElement;
  t1.setGameManager$1(this);
  var t2 = this._lib3_stage;
  $.add$1(t2.get$invalidated(), this.get$_stageInvalidated());
  $.add$1(t1.get$newGameClick(), new $.anon(this));
  $.ClickManager_addMouseMoveHandler(t1, this.get$_mouseMoveHandler());
  $.ClickManager_addMouseOutHandler(t2, this.get$_mouseOutHandler());
  $.add$1($.window().get$on().get$resize(), new $.anon0(this));
  this._updateCanvasSize$0();
}
};

$$.NewGameElement = {"":
 ["_clickedEvent?", "_transforms", "cacheEnabled", "_updatedEventHandle", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_lib1_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 get$clicked: function() {
  return this._clickedEvent;
},
 drawOverride$1: function(ctx) {
  var texture = $.Mouse_isMouseDirectlyOver(this) === true ? 'button_new_game_clicked.png' : 'button_new_game.png';
  this.get$_lib3_textureData().drawTextureKeyAt$2(ctx, texture);
},
 get$_lib3_parent: function() {
  return $.propertyTypeCast(this.get$parent(), 'is$PCanvas').get$parent();
},
 get$_lib3_textureData: function() {
  return this.get$_lib3_parent().get$_lib3_textureData();
},
 get$_lib3_game: function() {
  return this.get$_lib3_parent().get$_lib3_game();
},
 _mouseDirectlyOver$1: function(args) {
  this.invalidateDraw$0();
},
 get$_mouseDirectlyOver: function() { return new $.BoundClosure(this, '_mouseDirectlyOver$1'); },
 NewGameElement$0: function() {
  $.ClickManager_setClickable(this, true);
  $.ClickManager_addHandler(this, new $.anon1(this));
  $.get$Mouse_isMouseDirectlyOverProperty().addHandler$2(this, this.get$_mouseDirectlyOver());
},
 is$NewGameElement: true
};

$$.ScoreElement = {"":
 ["_gameManager", "_clockStr", "_minesStr", "_highScoreStr", "_textSize", "_transforms", "cacheEnabled", "_updatedEventHandle", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_lib1_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 setGameManager$1: function(manager) {
  this._gameManager = manager;
  this.invalidateDraw$0();
},
 update$0: function() {
  var newMineStr = $.toString(this.get$_lib3_game().get$minesLeft());
  if (!$.eqB(newMineStr, this._minesStr)) {
    this._minesStr = newMineStr;
    this.invalidateDraw$0();
  }
  var newClockStr = !(this.get$_lib3_game().get$duration() == null) ? $.toString(this.get$_lib3_game().get$duration().get$inSeconds()) : '';
  if (!$.eqB(newClockStr, this._clockStr)) {
    this._clockStr = newClockStr;
    this.invalidateDraw$0();
  }
  var highScoreStr = !(this._gameManager.get$highScore() == null) ? $.toString($.mul($.toInt($.mul($.mul(this._gameManager.get$highScore(), 0.001), 10)), 0.1)) : null;
  if (!$.eqB(this._highScoreStr, highScoreStr)) {
    this._highScoreStr = highScoreStr;
    this.invalidateDraw$0();
  }
  $.PElement.prototype.update$0.call(this);
},
 drawOverride$1: function(ctx) {
  var t1 = this.get$height();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var rowHeight = 0.33 * t1;
  ctx.set$font($.S($.toInt(rowHeight * 0.9)) + 'px Slackey');
  ctx.set$textBaseline('middle');
  var textSize = this._getTextSize$1(ctx);
  ctx.set$fillStyle('black');
  ctx.set$textAlign('right');
  t1 = 0.5 * rowHeight;
  ctx.fillText$3('MINES LEFT:', textSize, t1);
  ctx.set$textAlign('left');
  ctx.fillText$3(this._minesStr, $.add(textSize, 15), t1);
  ctx.set$textAlign('right');
  t1 = 1.5 * rowHeight;
  ctx.fillText$3('TIME:', textSize, t1);
  ctx.set$textAlign('left');
  ctx.fillText$3(this._clockStr, $.add(textSize, 15), t1);
  if (!(this._highScoreStr == null)) {
    ctx.set$textAlign('right');
    t1 = 2.5 * rowHeight;
    ctx.fillText$3('RECORD:', textSize, t1);
    ctx.set$textAlign('left');
    ctx.fillText$3(this._highScoreStr, $.add(textSize, 15), t1);
  }
},
 _getTextSize$1: function(ctx) {
  if (this._textSize == null)
    this._textSize = ctx.measureText$1('MINES LEFT:').get$width();
  return this._textSize;
},
 get$_lib3_game: function() {
  return this._gameManager.get$game();
}
};

$$.SquareElement = {"":
 ["x?", "y?", "_lastDrawingState", "_transforms", "cacheEnabled", "_updatedEventHandle", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_lib1_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 update$0: function() {
  if (!$.eqB(this._lastDrawingState, this.get$_squareState())) {
    this._lastDrawingState = this.get$_squareState();
    this.invalidateDraw$0();
  }
},
 drawOverride$1: function(ctx) {
  var textureName = null;
  switch (this._lastDrawingState) {
    case $.CTC34:
      textureName = this._getHiddenTexture$0();
      break;
    case $.CTC36:
      textureName = 'balloon_tagged_frozen.png';
      break;
    case $.CTC35:
      var t1 = this.get$_adjacentCount();
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= 9)
        throw $.ioore(t1);
      textureName = $.S($.CTC46[t1]) + '.png';
      break;
    case $.CTC41:
      textureName = 'crater_b.png';
      break;
    case $.CTC44:
      textureName = 'balloon_tagged_bomb.png';
      break;
  }
  this.get$_lib3_textureData().drawTextureKeyAt$2(ctx, textureName);
},
 toString$0: function() {
  return 'Square at [' + $.S(this.x) + ', ' + $.S(this.y) + ']';
},
 _getHiddenTexture$0: function() {
  if ($.eqB(this.get$_lib3_game().get$state(), $.CTC38)) {
    var index = $.mod($.add(this.x, this.y), 4);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= 4)
      throw $.ioore(index);
    return $.CTC47[index];
  } else
    return 'balloon.png';
},
 get$_squareState: function() {
  return this.get$_lib3_game().getSquareState$2(this.x, this.y);
},
 get$_adjacentCount: function() {
  return this.get$_lib3_game().get$field().getAdjacentCount$2(this.x, this.y);
},
 get$_board: function() {
  return this.get$parent();
},
 get$_lib3_textureData: function() {
  return this.get$_board().get$_lib3_textureData();
},
 get$_lib3_game: function() {
  return this.get$_board().get$_lib3_game();
},
 SquareElement$2: function(x, y) {
  $.ClickManager_setClickable(this, true);
},
 is$SquareElement: true
};

$$.GameTitleElement = {"":
 ["_transforms", "cacheEnabled", "_updatedEventHandle", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_lib1_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 drawOverride$1: function(ctx) {
  this.get$_lib3_textureData().drawTextureKeyAt$2(ctx, 'logo_win.png');
},
 get$_lib3_parent: function() {
  return $.propertyTypeCast(this.get$parent(), 'is$PCanvas').get$parent();
},
 get$_lib3_textureData: function() {
  return this.get$_lib3_parent().get$_lib3_textureData();
},
 get$_lib3_game: function() {
  return this.get$_lib3_parent().get$_lib3_game();
},
 _mouseDirectlyOver$1: function(args) {
  this.invalidateDraw$0();
},
 get$_mouseDirectlyOver: function() { return new $.BoundClosure(this, '_mouseDirectlyOver$1'); },
 is$GameTitleElement: true
};

$$.GameStorage = {"":
 ["_highScoreUpdated", "_storage"],
 "super": "Object",
 recordState$1: function(state) {
  this._incrementIntValue$1(state.name);
},
 updateHighScore$1: function(game) {
  var w = game.get$field().get$width();
  var h = game.get$field().get$height();
  var m = game.get$field().get$mineCount();
  var duration = game.get$duration().get$inMilliseconds();
  var key = 'w' + $.S(w) + '-h' + $.S(h) + '-m' + $.S(m);
  var currentScore = this._getIntValue$2(key, null);
  if (currentScore == null || $.gtB(currentScore, duration)) {
    this._setIntValue$2(key, duration);
    this._highScoreUpdated.fireEvent$1(null);
    return true;
  } else
    return false;
},
 getHighScore$3: function(width, height, mineCount) {
  return this._getIntValue$2('w' + $.S(width) + '-h' + $.S(height) + '-m' + $.S(mineCount), null);
},
 reset$0: function() {
  $.clear(this._storage);
},
 toString$0: function() {
  return $.Maps_mapToString(this._storage);
},
 _getIntValue$2: function(key, defaultValue) {
  var strValue = $.index(this._storage, key);
  if (strValue == null)
    return defaultValue;
  else
    return $.int_parse(strValue);
},
 _getIntValue$1: function(key) {
  return this._getIntValue$2(key,0)
},
 _setIntValue$2: function(key, value) {
  var t1 = value == null;
  var t2 = this._storage;
  if (t1)
    $.indexSet(t2, key, null);
  else
    $.indexSet(t2, key, $.toString(value));
},
 _incrementIntValue$1: function(key) {
  this._setIntValue$2(key, $.add(this._getIntValue$1(key), 1));
}
};

$$.GameManager = {"":
 ["_game?"],
 "super": "Object",
 get$game: function() {
  return this._game;
},
 get$highScore: function() {
  return this._gameStorage.getHighScore$3(this._lib5_width, this._lib5_height, this._mineCount);
},
 newGame$0: function() {
  if (!(this._updatedEventId == null)) {
    this._game.get$updated().remove$1(this._updatedEventId);
    this._game.get$stateChanged().remove$1(this._gameStateChangedId);
    this._gameStateChanged$1($.CTC31);
  }
  this._game = $.Game$($.Field_Field(this._mineCount, this._lib5_width, this._lib5_height, null));
  this._updatedEventId = $.add$1(this._game.get$updated(), this.get$gameUpdated());
  this._gameStateChangedId = $.add$1(this._game.get$stateChanged(), this.get$_gameStateChanged());
},
 gameUpdated$1: function(args) {
},
 get$gameUpdated: function() { return new $.BoundClosure(this, 'gameUpdated$1'); },
 _lib5_click$3: function(x, y, alt) {
  var ss = this._game.getSquareState$2(x, y);
  if (alt === true) {
    if ($.eqB(ss, $.CTC34))
      this._game.setFlag$3(x, y, true);
    else if ($.eqB(ss, $.CTC36))
      this._game.setFlag$3(x, y, false);
    else if ($.eqB(ss, $.CTC35))
      this._game.reveal$2(x, y);
  } else if ($.eqB(ss, $.CTC34))
    this._game.reveal$2(x, y);
},
 updateClock$0: function() {
  if (this._setIntervalId == null && $.eqB(this._game.get$state(), $.CTC39))
    this._setIntervalId = $.window().setInterval$2(this.get$_doClock(), 1000);
  else if (!(this._setIntervalId == null) && !$.eqB(this._game.get$state(), $.CTC39)) {
    $.window().clearInterval$1(this._setIntervalId);
    this._setIntervalId = null;
  }
},
 _doClock$0: function() {
  this.updateClock$0();
},
 get$_doClock: function() { return new $.BoundClosure0(this, '_doClock$0'); },
 _gameStateChanged$1: function(newState) {
  var t1 = this._gameStorage;
  t1.recordState$1(newState);
  if ($.eqB(newState, $.CTC37))
    t1.updateHighScore$1(this._game);
  this.updateClock$0();
},
 get$_gameStateChanged: function() { return new $.BoundClosure(this, '_gameStateChanged$1'); },
 GameManager$3: function(_width, _height, _mineCount) {
  this.newGame$0();
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"":
 ["copies_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_2;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  var length$ = t1.length;
  for (var i = 0; i < length$; ++i) {
    var t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
},
 call$1$bailout: function(state, value, t1) {
  var length$ = $.get$length(t1);
  for (var i = 0; $.ltB(i, length$); ++i) {
    var t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"":
 ["copies_4"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_4, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"":
 ["copies_5"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_5, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"":
 [],
 "super": "Closure",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"":
 ["writeSlot_8", "findSlot_7", "readSlot_6"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.CTC3);
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.CTC4);
  if (typeof e === 'object' && e !== null && e.is$_FileImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$File())
    throw $.$$throw($.CTC5);
  if (typeof e === 'object' && e !== null && e.is$_BlobImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    throw $.$$throw($.CTC6);
  if (typeof e === 'object' && e !== null && e.is$_FileListImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$_ImageDataImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    throw $.$$throw($.CTC7);
  if (typeof e === 'object' && e !== null && e.is$_ArrayBufferImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    throw $.$$throw($.CTC8);
  if (typeof e === 'object' && e !== null && e.is$_ArrayBufferViewImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    throw $.$$throw($.CTC9);
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    var slot = this.findSlot_7.call$1(e);
    t1.copy_1 = this.readSlot_6.call$1(slot);
    var t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_8.call$2(slot, t1.copy_1);
    e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e, 0, 0, 0, 0, 0, 0);
    var length$ = e.length;
    slot = this.findSlot_7.call$1(e);
    t2 = this.readSlot_6;
    var copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_8.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    var t3 = this.writeSlot_8;
    if (t1) {
      t3.call$2(slot, true);
      for (var i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        var element = e[i];
        var elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy = t2.call$1(slot);
          if (true === copy) {
            copy = new Array(length$);
            t3.call$2(slot, copy);
          }
          if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(2, e, t3, length$, elementCopy, slot, copy, i);
          for (var t1 = e.length, t2 = copy.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            var t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy[i] = elementCopy;
          ++i;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, i, copy, length$, 0, 0, 0);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.CTC10);
},
 call$1$bailout: function(state, env0, env1, env2, env3, env4, env5, env6) {
  switch (state) {
    case 1:
      var e = env0;
      break;
    case 2:
      e = env0;
      t3 = env1;
      length$ = env2;
      elementCopy = env3;
      slot = env4;
      copy = env5;
      i = env6;
      break;
    case 3:
      e = env0;
      i = env1;
      copy = env2;
      length$ = env3;
      break;
  }
  switch (state) {
    case 0:
      var t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.CTC3);
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.CTC4);
      if (typeof e === 'object' && e !== null && e.is$_FileImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$File())
        throw $.$$throw($.CTC5);
      if (typeof e === 'object' && e !== null && e.is$_BlobImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        throw $.$$throw($.CTC6);
      if (typeof e === 'object' && e !== null && e.is$_FileListImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$_ImageDataImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        throw $.$$throw($.CTC7);
      if (typeof e === 'object' && e !== null && e.is$_ArrayBufferImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        throw $.$$throw($.CTC8);
      if (typeof e === 'object' && e !== null && e.is$_ArrayBufferViewImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        throw $.$$throw($.CTC9);
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        var slot = this.findSlot_7.call$1(e);
        t1.copy_1 = this.readSlot_6.call$1(slot);
        var t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_8.call$2(slot, t1.copy_1);
        e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
        return t1.copy_1;
      }
    default:
      if (state === 3 || state === 2 || state === 1 || state === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state) {
          case 0:
          case 1:
            state = 0;
            var length$ = $.get$length(e);
            slot = this.findSlot_7.call$1(e);
            t2 = this.readSlot_6;
            var copy = t2.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_8.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            var t3 = this.writeSlot_8;
          case 2:
            if (state === 2 || state === 0 && t1)
              switch (state) {
                case 0:
                  t3.call$2(slot, true);
                  var i = 0;
                case 2:
                  L0:
                    while (true)
                      switch (state) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          var element = $.index(e, i);
                          var elementCopy = this.call$1(element);
                        case 2:
                          if (state === 2 || state === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state) {
                              case 0:
                                copy = t2.call$1(slot);
                                if (true === copy) {
                                  copy = new Array(length$);
                                  t3.call$2(slot, copy);
                                }
                              case 2:
                                state = 0;
                                for (var j = 0; j < i; ++j)
                                  $.indexSet(copy, j, $.index(e, j));
                                $.indexSet(copy, i, elementCopy);
                                ++i;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t3.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t3.call$2(slot, copy);
              i = 0;
            }
          case 3:
            state = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.CTC10);
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"":
 ["walk_9", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$.Maps__emitMap_anon = {"":
 ["result_3", "box_0", "visiting_2"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1 = this.box_0;
  if (t1.first_1 !== true)
    $.add$1(this.result_3, ', ');
  t1.first_1 = false;
  t1 = this.result_3;
  var t2 = this.visiting_2;
  $.Collections__emitObject(k, t1, t2);
  $.add$1(t1, ': ');
  $.Collections__emitObject(v, t1, t2);
}
};

$$.ResourceLoader_totalBytes_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  if (e.get$totalBytes() == null)
    return 2000;
  else
    return e.get$totalBytes();
}
};

$$.ResourceLoader_completedBytes_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return e.get$completedBytes();
}
};

$$._runppw_anon = {"":
 [],
 "super": "Closure",
 call$1: function(args) {
  return args.preventDefault$0();
}
};

$$._getTextures_anon = {"":
 ["frames_1", "transparentElement_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var parsed = $.TextureInput_TextureInput$fromHash(key, value, this.transparentElement_0);
  $.indexSet(this.frames_1, key, parsed);
}
};

$$._getTextures_anon0 = {"":
 ["frames_3", "opaqueElement_2"],
 "super": "Closure",
 call$2: function(key, value) {
  var parsed = $.TextureInput_TextureInput$fromHash(key, value, this.opaqueElement_2);
  $.indexSet(this.frames_3, key, parsed);
}
};

$$.DoubleLinkedQueue_length__ = {"":
 ["box_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$.LinkedHashMapImplementation_forEach__ = {"":
 ["f_0"],
 "super": "Closure",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$._convertNativeToDart_AcceptStructuredClone_findSlot = {"":
 ["copies_1", "values_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_0;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  var length$ = t1.length;
  for (var i = 0; i < length$; ++i) {
    var t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_1, null);
  return length$;
},
 call$1$bailout: function(state, value, t1) {
  var length$ = $.get$length(t1);
  for (var i = 0; $.ltB(i, length$); ++i) {
    var t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_1, null);
  return length$;
}
};

$$._convertNativeToDart_AcceptStructuredClone_readSlot = {"":
 ["copies_2"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_2, i);
}
};

$$._convertNativeToDart_AcceptStructuredClone_writeSlot = {"":
 ["copies_3"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$._convertNativeToDart_AcceptStructuredClone_walk = {"":
 ["writeSlot_7", "mustCopy_6", "findSlot_5", "readSlot_4"],
 "super": "Closure",
 call$1: function(e) {
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout(1, e, 0, 0, 0);
  if (e instanceof Date)
    throw $.$$throw($.CTC3);
  if (e instanceof RegExp)
    throw $.$$throw($.CTC4);
  if ($._isJavaScriptSimpleObject(e)) {
    var slot = this.findSlot_5.call$1(e);
    var copy = this.readSlot_4.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(2, e, slot, copy, 0);
    this.writeSlot_7.call$2(slot, copy);
    for (var t1 = $.iterator(Object.keys(e)); t1.hasNext$0() === true;) {
      var t2 = t1.next$0();
      var t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_5.call$1(e);
    copy = this.readSlot_4.call$1(slot);
    if (!(copy == null))
      return copy;
    var length$ = e.length;
    if (this.mustCopy_6 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, length$, copy, slot);
    this.writeSlot_7.call$2(slot, copy);
    for (var i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout: function(state, env0, env1, env2, env3) {
  switch (state) {
    case 1:
      var e = env0;
      break;
    case 2:
      e = env0;
      slot = env1;
      copy = env2;
      break;
    case 3:
      e = env0;
      length$ = env1;
      copy = env2;
      slot = env3;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.CTC3);
      if (e instanceof RegExp)
        throw $.$$throw($.CTC4);
    case 2:
      if (state === 2 || state === 0 && $._isJavaScriptSimpleObject(e))
        switch (state) {
          case 0:
            var slot = this.findSlot_5.call$1(e);
            var copy = this.readSlot_4.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state = 0;
            this.writeSlot_7.call$2(slot, copy);
            for (var t1 = $.iterator(Object.keys(e)); t1.hasNext$0() === true;) {
              var t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    case 3:
      if (state === 3 || state === 0 && e instanceof Array)
        switch (state) {
          case 0:
            slot = this.findSlot_5.call$1(e);
            copy = this.readSlot_4.call$1(slot);
            if (!(copy == null))
              return copy;
            var length$ = $.get$length(e);
            copy = this.mustCopy_6 === true ? new Array(length$) : e;
          case 3:
            state = 0;
            this.writeSlot_7.call$2(slot, copy);
            for (var i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$._convertNativeToDart_IDBKey_containsDate = {"":
 [],
 "super": "Closure",
 call$1: function(object) {
  if (object instanceof Date)
    return true;
  if (typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List())) {
    if (typeof object !== 'object' || object === null || object.constructor !== Array && !object.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, object);
    for (var i = 0; i < object.length; ++i)
      if (this.call$1(object[i]) === true)
        return true;
  }
  return false;
},
 call$1$bailout: function(state, env0) {
  switch (state) {
    case 1:
      var object = env0;
      break;
  }
  switch (state) {
    case 0:
      if (object instanceof Date)
        return true;
    case 1:
      if (state === 1 || state === 0 && typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List()))
        switch (state) {
          case 0:
          case 1:
            state = 0;
            for (var i = 0; $.ltB(i, $.get$length(object)); ++i)
              if (this.call$1($.index(object, i)) === true)
                return true;
        }
      return false;
  }
}
};

$$.invokeClosure_anon = {"":
 ["closure_0"],
 "super": "Closure",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"":
 ["closure_2", "arg1_1"],
 "super": "Closure",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"":
 ["closure_5", "arg1_4", "arg2_3"],
 "super": "Closure",
 call$0: function() {
  return this.closure_5.call$2(this.arg1_4, this.arg2_3);
}
};

$$.ClickManager__mouseDown_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return $.get$ClickManager__isClickableProperty().get$1(e);
}
};

$$.Mouse_markMouseOver_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  $.get$Mouse_isMouseOverProperty().clear$1(e);
  $.get$Mouse_isMouseDirectlyOverProperty().clear$1(e);
}
};

$$.Mouse_markMouseOver_anon0 = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  $.get$Mouse_isMouseOverProperty().set$2(e, true);
}
};

$$.AffineTransform_toString_anon = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  return $.toString(n);
}
};

$$.ResourceLoader__buildRORE_anon = {"":
 [],
 "super": "Closure",
 call$1: function(url) {
  return $._ResourceEntry$(url);
}
};

$$.EventHandle_fireEvent_anon = {"":
 ["args_0"],
 "super": "Closure",
 call$2: function(id, handler) {
  handler.call$1(this.args_0);
}
};

$$.Enumerable_selectNumbers_anon = {"":
 ["f_0"],
 "super": "Closure",
 call$1: function(s) {
  return $._SelectIterator$(s, this.f_0);
}
};

$$.Enumerable_count_anon = {"":
 [],
 "super": "Closure",
 call$1: function(a) {
  return true;
}
};

$$.ListBase_iterator_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.this_0, i);
}
};

$$.Enumerable_firstOrDefault_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return true;
}
};

$$.Enumerable_map_anon = {"":
 ["f_0"],
 "super": "Closure",
 call$1: function(s) {
  return $._SelectIterator$(s, this.f_0);
}
};

$$.Enumerable_isEmpty_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return true;
}
};

$$.ClickManager__mouseUp_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return $.get$ClickManager__isClickableProperty().get$1(e);
}
};

$$.ClickManager__mouseMove_anon = {"":
 ["args_0"],
 "super": "Closure",
 call$1: function(e) {
  return $.get$ClickManager__mouseMoveEvent().fireEvent$2(e, this.args_0);
}
};

$$.anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_0.newGame$0();
}
};

$$.anon0 = {"":
 ["this_1"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_1._updateCanvasSize$0();
}
};

$$.ElementParentImpl_drawOverride_anon = {"":
 ["ctx_0"],
 "super": "Closure",
 call$1: function(e) {
  return e.drawCore$1(this.ctx_0);
}
};

$$._ElementImpl_rect_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  return $._ElementRectImpl$(this.this_0);
}
};

$$._MutationObserverImpl_observe_anon = {"":
 ["parsedOptions_0"],
 "super": "Closure",
 call$2: function(k, v) {
  if ($.CTC23.containsKey$1(k) === true)
    this.parsedOptions_0[k] = true === v;
  else if ($.eqB(k, 'attributeFilter'))
    this.parsedOptions_0[k] = v;
  else
    throw $.$$throw($.ArgumentError$('Illegal MutationObserver.observe option \'' + $.S(k) + '\''));
}
};

$$._MutationObserverImpl_observe_override = {"":
 ["parsedOptions_1"],
 "super": "Closure",
 call$2: function(key, value) {
  if (!(value == null))
    this.parsedOptions_1[key] = value;
}
};

$$.ConstantMap_forEach_anon = {"":
 ["this_1", "f_0"],
 "super": "Closure",
 call$1: function(key) {
  return this.f_0.call$2(key, $.index(this.this_1, key));
}
};

$$._DocumentFragmentImpl_rect_anon = {"":
 [],
 "super": "Closure",
 call$0: function() {
  return $.CTC25;
}
};

$$.ElementParentImpl_update_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return e.update$0();
}
};

$$.AttachableObject__addHandler_anon = {"":
 [],
 "super": "Closure",
 call$0: function() {
  return $.EventHandle$();
}
};

$$.Duration_toString_threeDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.gtB(n, 10))
    return '0' + $.S(n);
  return '00' + $.S(n);
}
};

$$.Duration_toString_twoDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return '0' + $.S(n);
}
};

$$.DateImplementation_toString_fourDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  var absN = $.abs(n);
  var sign = $.ltB(n, 0) ? '-' : '';
  if ($.geB(absN, 1000))
    return $.S(n);
  if ($.geB(absN, 100))
    return sign + '0' + $.S(absN);
  if ($.geB(absN, 10))
    return sign + '00' + $.S(absN);
  return sign + '000' + $.S(absN);
}
};

$$.DateImplementation_toString_threeDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.geB(n, 10))
    return '0' + $.S(n);
  return '00' + $.S(n);
}
};

$$.DateImplementation_toString_twoDigits = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return '0' + $.S(n);
}
};

$$.anon2 = {"":
 [],
 "super": "Closure",
 call$1: function(args) {
  return $.playAudio('Click1');
}
};

$$.anon3 = {"":
 [],
 "super": "Closure",
 call$1: function(args) {
  $.window().open$2('https://github.com/dart-lang/pop-pop-win', '_blank');
}
};

$$.anon1 = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_0.get$_clickedEvent().fireEvent$1($.CTC20);
}
};

$$.GameElement__click_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(i) {
  var t = this.this_0.get$game().get$field().getCoordinate$1(i);
  return $.Coordinate$(t.get$item1(), t.get$item2());
}
};

$$.GameElement__click_anon0 = {"":
 ["this_1"],
 "super": "Closure",
 call$1: function(t) {
  return $.eq(this.this_1.get$game().getSquareState$2(t.get$x(), t.get$y()), $.CTC34);
}
};

$$.GameElement__startPopAnimation_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(i) {
  var t1 = this.this_0;
  var t = t1.get$game().get$field().getCoordinate$1(i);
  var c = $.Coordinate$(t.get$item1(), t.get$item2());
  return $.Tuple$(c, t1.get$game().getSquareState$2(c.x, c.y));
}
};

$$.GameElement__startPopAnimation_anon0 = {"":
 [],
 "super": "Closure",
 call$1: function(t2) {
  return $.eqB(t2.get$item2(), $.CTC41) || $.eqB(t2.get$item2(), $.CTC34);
}
};

$$.GameElement__startPopAnimation_anon1 = {"":
 [],
 "super": "Closure",
 call$1: function(t2) {
  return t2.get$item1();
}
};

$$.GameElement__startPopAnimation_anon2 = {"":
 ["start_1"],
 "super": "Closure",
 call$1: function(c) {
  var t1 = c.get$x();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  t1 = 80 * t1;
  var t2 = c.get$y();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  var initialOffset = $.Vector$(t1, 80 * t2);
  var squareOffset = $.CTC43.operator$add$1(initialOffset);
  t1 = $.toInt($.mul($.get$length($.sub(c, this.start_1)), 4));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var delay = 12 + t1;
  t1 = $.rnd().nextInt$1(10);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return [c, initialOffset, squareOffset, delay + t1];
}
};

$$.GameElement__startPopAnimation_anon3 = {"":
 [],
 "super": "Closure",
 call$2: function(a, b) {
  return $.compareTo($.index(a, 3), $.index(b, 3));
}
};

$$.GameElement__startPopAnimation_anon4 = {"":
 ["this_2"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_2._playPop$0();
}
};

$$.GameElement__startPopAnimation_anon5 = {"":
 ["this_3"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_3._playBoom$0();
}
};

$$.Enumerable_filter_anon = {"":
 ["f_0"],
 "super": "Closure",
 call$1: function(s) {
  return $._WhereIterator$(s, this.f_0);
}
};

$$.ResourceLoader__getByUrl_anon = {"":
 ["url_0"],
 "super": "Closure",
 call$1: function(e) {
  return $.eq(e.get$url(), this.url_0);
}
};

$$.Enumerable_single_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return true;
}
};

$$.ResourceLoader__httpLoad_anon = {"":
 ["this_1", "e_0"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_1._onError$2(this.e_0, args);
}
};

$$.ResourceLoader__httpLoad_anon0 = {"":
 ["this_3", "e_2"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_3._onError$2(this.e_2, args);
}
};

$$.ResourceLoader__httpLoad_anon1 = {"":
 ["this_5", "e_4"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_5._onLoadEnd$2(this.e_4, args);
}
};

$$.ResourceLoader__httpLoad_anon2 = {"":
 ["this_7", "e_6"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_7._onProgress$2(this.e_6, args);
}
};

$$.ImageLoader__doLoad_anon = {"":
 ["this_2", "img_1", "blobUrl_0"],
 "super": "Closure",
 call$1: function(args) {
  this.this_2._loadResourceSucceed$2(this.blobUrl_0, this.img_1);
}
};

$$.ResourceLoader__loadResourceSucceed_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return e.get$completed();
}
};

$$.ResourceLoader__getByBlobUrl_anon = {"":
 ["blobUrl_0"],
 "super": "Closure",
 call$1: function(e) {
  return e.matchesBlobUrl$1(this.blobUrl_0);
}
};

$$.AudioLoader__doLoad_anon = {"":
 ["arrayBufferRequest_2", "blobUrl_1", "this_0"],
 "super": "Closure",
 call$1: function(args) {
  var t1 = this.this_0;
  var t2 = t1.get$context();
  var t3 = this.arrayBufferRequest_2.get$response();
  var t4 = this.blobUrl_1;
  t2.decodeAudioData$3(t3, new $.AudioLoader__doLoad_anon1(t1, t4), new $.AudioLoader__doLoad_anon2(t1, t4));
}
};

$$.AudioLoader__doLoad_anon1 = {"":
 ["this_4", "blobUrl_3"],
 "super": "Closure",
 call$1: function(buffer) {
  return this.this_4._saveBuffer$2(this.blobUrl_3, buffer);
}
};

$$.AudioLoader__doLoad_anon2 = {"":
 ["this_6", "blobUrl_5"],
 "super": "Closure",
 call$1: function(buffer) {
  return this.this_6._onAudioLoadError$3(this.blobUrl_5, 'decode error', buffer);
}
};

$$.AudioLoader__doLoad_anon0 = {"":
 ["this_8", "blobUrl_7"],
 "super": "Closure",
 call$1: function(args) {
  this.this_8._onAudioLoadError$3(this.blobUrl_7, 'BufferLoader: XHR error', args);
}
};

$$.startRootIsolate_anon = {"":
 [],
 "super": "Closure",
 call$0: function() {
  $._TimerFactory__factory = $._timerFactory;
  return;
}
};

$$._BaseSendPort_call_anon = {"":
 ["port_1", "completer_0"],
 "super": "Closure",
 call$2: function(value, ignoreReplyTo) {
  this.port_1.close$0();
  var t1 = typeof value === 'object' && value !== null && !!value.is$Exception;
  var t2 = this.completer_0;
  if (t1)
    t2.completeException$1(value);
  else
    t2.complete$1(value);
}
};

$$._WorkerSendPort_send_anon = {"":
 ["this_2", "message_1", "replyTo_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_2;
  var t2 = this.replyTo_0;
  t1._checkReplyTo$1(t2);
  var workerMessage = $._serializeMessage($.makeLiteralMap(['command', 'message', 'port', t1, 'msg', this.message_1, 'replyTo', t2]));
  t2 = $._globalState().get$isWorker() === true;
  var t3 = $._globalState;
  if (t2)
    t3().get$mainManager().postMessage$1(workerMessage);
  else
    $.index(t3().get$managers(), t1.get$_workerId()).postMessage$1(workerMessage);
}
};

$$._waitForPendingPorts_anon = {"":
 ["callback_0"],
 "super": "Closure",
 call$1: function(_) {
  return this.callback_0.call$0();
}
};

$$.Futures_wait_anon = {"":
 ["completer_5", "pos_4", "box_0", "result_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_2;
  $.indexSet(t1, this.pos_4, value);
  var t2 = this.box_0;
  var remaining = $.sub(t2.remaining_1, 1);
  t2.remaining_1 = remaining;
  if ($.eqB(remaining, 0) && this.result_3.get$isComplete() !== true)
    this.completer_5.complete$1(t1);
}
};

$$.Futures_wait_anon0 = {"":
 ["future_8", "completer_7", "result_6"],
 "super": "Closure",
 call$1: function(exception) {
  if (this.result_6.get$isComplete() !== true)
    this.completer_7.completeException$2(exception, this.future_8.get$stackTrace());
  return true;
}
};

$$._PendingSendPortFinder_visitMap_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._StorageImpl_getValues_anon = {"":
 ["values_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.values_0, v);
}
};

$$.HashMapImplementation_getValues__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.i_1;
  t2.i_1 = $.add(t3, 1);
  $.indexSet(t1, t3, value);
}
};

$$.LinkedHashMapImplementation_getValues__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.index_1;
  t2.index_1 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$value());
}
};

$$.ConstantMap_getValues_anon = {"":
 ["this_1", "result_0"],
 "super": "Closure",
 call$1: function(key) {
  return $.add$1(this.result_0, $.index(this.this_1, key));
}
};

$$._PendingSendPortFinder_visitList_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._NativeJsSendPort_send_anon = {"":
 ["this_5", "message_4", "replyTo_3"],
 "super": "Closure",
 call$0: function() {
  var t1 = {};
  var t2 = this.this_5;
  var t3 = this.replyTo_3;
  t2._checkReplyTo$1(t3);
  var isolate = $.index($._globalState().get$isolates(), t2.get$_isolateId());
  if (isolate == null)
    return;
  if (t2.get$_receivePort().get$_lib7_callback() == null)
    return;
  var shouldSerialize = !($._globalState().get$currentContext() == null) && !$.eqB($._globalState().get$currentContext().get$id(), t2.get$_isolateId());
  var msg = this.message_4;
  t1.msg_1 = msg;
  t1.reply_2 = t3;
  if (shouldSerialize) {
    t1.msg_1 = $._serializeMessage(t1.msg_1);
    t1.reply_2 = $._serializeMessage(t1.reply_2);
  }
  $._globalState().get$topEventLoop().enqueue$3(isolate, new $._NativeJsSendPort_send_anon0(t2, t1, shouldSerialize), 'receive ' + $.S(msg));
}
};

$$._NativeJsSendPort_send_anon0 = {"":
 ["this_7", "box_0", "shouldSerialize_6"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_7;
  if (!(t1.get$_receivePort().get$_lib7_callback() == null)) {
    if (this.shouldSerialize_6 === true) {
      var t2 = this.box_0;
      t2.msg_1 = $._deserializeMessage(t2.msg_1);
      t2.reply_2 = $._deserializeMessage(t2.reply_2);
    }
    t1 = t1.get$_receivePort();
    t2 = this.box_0;
    t1._lib7_callback$2(t2.msg_1, t2.reply_2);
  }
}
};

$$._StorageImpl_getKeys_anon = {"":
 ["keys_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.keys_0, k);
}
};

$$.HashMapImplementation_getKeys__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.i_10;
  t2.i_10 = $.add(t3, 1);
  $.indexSet(t1, t3, key);
}
};

$$.LinkedHashMapImplementation_getKeys__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.index_10;
  t2.index_10 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$key());
}
};

$$._Copier_visitMap_anon = {"":
 ["this_2", "box_0"],
 "super": "Closure",
 call$2: function(key, val) {
  var t1 = this.box_0.copy_10;
  var t2 = this.this_2;
  $.indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
}
};

$$._EventLoop__runHelper_next = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  if (this.this_0.runIteration$0() !== true)
    return;
  $._window().setTimeout$2(this, 0);
}
};

$$.anon4 = {"":
 ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.anon5 = {"":
 ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.Closure = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.BoundClosure = {'':
 ['self', 'target'],
 'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$$.BoundClosure0 = {'':
 ['self', 'target'],
 'super': 'Closure',
call$0: function() { return this.self[this.target](); }
};
$$.BoundClosure1 = {'':
 ['self', 'target'],
 'super': 'Closure',
call$2: function(p0, p1) { return this.self[this.target](p0, p1); }
};
$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$._InputElementEventsImpl$ = function(_ptr) {
  return new $._InputElementEventsImpl(_ptr);
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver)) {
    $.checkNull(newLength);
    if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.IndexOutOfRangeException$(newLength));
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else
    receiver.set$length(newLength);
  return newLength;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._TextTrackListEventsImpl$ = function(_ptr) {
  return new $._TextTrackListEventsImpl(_ptr);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$._MediaStreamTrackEventsImpl$ = function(_ptr) {
  return new $._MediaStreamTrackEventsImpl(_ptr);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.ElementMouseEventArgs$_internal = function(element, shiftKey) {
  return new $.ElementMouseEventArgs(element, shiftKey);
};

$._fillStatics = function(context) {
  $globals = context.isolateStatics;
  $static_init();

};

$.populateAudio = function(context, buffers) {
  $._audioContext = context;
  $._buffers = buffers;
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$._JavaScriptAudioNodeEventsImpl$ = function(_ptr) {
  return new $._JavaScriptAudioNodeEventsImpl(_ptr);
};

$.TextureInput$ = function(name$, frame, rotated, trimmed, sourceColorRect, sourceSize, image) {
  return new $.TextureInput(name$, frame, rotated, trimmed, sourceColorRect, sourceSize, image);
};

$.Size$ = function(width, height) {
  return new $.Size(width, height);
};

$.NumberEnumerable_NumberEnumerable$fromRange = function(start, count) {
  return $._RangeEnumerable$(start, count);
};

$._IDBTransactionEventsImpl$ = function(_ptr) {
  return new $._IDBTransactionEventsImpl(_ptr);
};

$.buildDynamicMetadata = function(inputTable) {
  var result = [];
  for (var i = 0; i < inputTable.length; ++i) {
    var tag = inputTable[i][0];
    var array = inputTable[i];
    var tags = array[1];
    var set = {};
    var tagNames = tags.split('|');
    for (var j = 0, index = 1; j < tagNames.length; ++j) {
      $.propertySet(set, tagNames[j], true);
      index = j;
      array = tagNames;
    }
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicFunction = function(name$) {
  var f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  var methods = {};
  var dartMethod = Object.getPrototypeOf($.CTC50)[name$];
  if (!(dartMethod == null))
    $.propertySet(methods, 'Object', dartMethod);
  var bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.DualPivotQuicksort__dualPivotQuicksort = function(a, left, right, compare) {
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $.DualPivotQuicksort__dualPivotQuicksort$bailout(1, a, left, right, compare, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var sixth = $.tdiv($.add($.sub(right, left), 1), 6);
  if (typeof sixth !== 'number')
    throw $.iae(sixth);
  var index1 = left + sixth;
  var index5 = $.sub(right, sixth);
  if (typeof right !== 'number')
    throw $.iae(right);
  var index3 = $.tdiv(left + right, 2);
  var index2 = index3 - sixth;
  var index4 = index3 + sixth;
  if (index1 !== (index1 | 0))
    throw $.iae(index1);
  var t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  var el1 = a[index1];
  if (index2 !== (index2 | 0))
    throw $.iae(index2);
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  var el2 = a[index2];
  if (index3 !== (index3 | 0))
    throw $.iae(index3);
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  var el3 = a[index3];
  if (index4 !== (index4 | 0))
    throw $.iae(index4);
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  var el4 = a[index4];
  if (index5 !== (index5 | 0))
    throw $.iae(index5);
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  var el5 = a[index5];
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    var t0 = el1;
    el1 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el1;
    el1 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el3;
    el3 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left !== (left | 0))
    throw $.iae(left);
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  var t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right !== (right | 0))
    throw $.iae(right);
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  var less = left + 1;
  var great = right - 1;
  var pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (var k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      var ak = a[k];
      var comp = compare.call$2(ak, el2);
      if (typeof comp !== 'number')
        return $.DualPivotQuicksort__dualPivotQuicksort$bailout(2, a, left, right, compare, less, k, index1, index5, el2, pivots_are_equal, ak, comp, el4, great);
      if (comp === 0)
        continue;
      if (comp < 0) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else
        for (var less0 = less + 1; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else {
            t1 = $.ltB(comp, 0);
            var great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (less0 = less + 1; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.gtB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
  t1 = less - 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  t2 = a.length;
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  var t3 = a[t1];
  if (left >= t2)
    throw $.ioore(left);
  a[left] = t3;
  a[t1] = el2;
  t1 = great + 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (right >= t2)
    throw $.ioore(right);
  a[right] = t3;
  a[t1] = el4;
  $.DualPivotQuicksort__doSort(a, left, less - 2, compare);
  $.DualPivotQuicksort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less !== (less | 0))
        throw $.iae(less);
      if (less < 0 || less >= a.length)
        throw $.ioore(less);
      if (!$.eqB(compare.call$2(a[less], el2), 0))
        break;
      ++less;
    }
    while (true) {
      if (great !== (great | 0))
        throw $.iae(great);
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!$.eqB(compare.call$2(a[great], el4), 0))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (less0 = less + 1; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.eqB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
    $.DualPivotQuicksort__doSort(a, less, great, compare);
  } else
    $.DualPivotQuicksort__doSort(a, less, great, compare);
};

$.ListImplementation_List$from = function(other) {
  return $.ListImplementation__from(other);
};

$._Timer$repeating = function(milliSeconds, callback) {
  var t1 = new $._Timer(false, null);
  t1._Timer$repeating$2(milliSeconds, callback);
  return t1;
};

$._EventSourceEventsImpl$ = function(_ptr) {
  return new $._EventSourceEventsImpl(_ptr);
};

$._onLoaded = function(args) {
  if ($.eqB($._imageLoader.get$state(), 'loaded')) {
    var t1 = $._audioLoader;
    t1 = t1 == null || $.eqB(t1.get$state(), 'loaded');
  } else
    t1 = false;
  if (t1) {
    var opaqueImage = $._imageLoader.getResource$1('dart_opaque_01.jpg');
    var textureData = $.TextureData$($._getTextures($._imageLoader.getResource$1('dart_transparent_01.png'), opaqueImage));
    if (!($._audioLoader == null)) {
      var map = $.HashMapImplementation$();
      for (t1 = $.iterator($.CTC); t1.hasNext$0() === true;) {
        var t2 = t1.next$0();
        var path = 'audio/' + $.S(t2) + '.webm';
        map.operator$indexSet$2(t2, $._audioLoader.getResource$1(path));
      }
      $.populateAudio($._audioLoader.get$context(), map);
    }
    $.query('#loading').get$style().set$display('none');
    $._runppw(textureData);
  }
};

$.ClickManager_addMouseMoveHandler = function(obj, handler) {
  return $.get$ClickManager__mouseMoveEvent().addHandler$2(obj, handler);
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values = [];
  var copies = [];
  var t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(copies, values);
  var t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  var t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  var t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  var copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t3, t1, t2).call$1(value);
  t4.call$0();
  return copy;
};

$.floor = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.floor$0();
  return Math.floor(receiver);
};

$._WebSocketEventsImpl$ = function(_ptr) {
  return new $._WebSocketEventsImpl(_ptr);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$._convertDartToNative_SerializedScriptValue = function(value) {
  return $._convertDartToNative_PrepareForStructuredClone(value);
};

$._deserializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$._MediaStreamEventsImpl$ = function(_ptr) {
  return new $._MediaStreamEventsImpl(_ptr);
};

$.hashCode = function(receiver) {
  if (receiver == null)
    return 0;
  if (typeof receiver === 'number')
    return receiver & 0x1FFFFFFF;
  if (typeof receiver === 'boolean')
    return receiver ? 1077375012 : 3247177846;
  if ($.isJsArray(receiver))
    return $.Primitives_objectHashCode(receiver);
  if (!(typeof receiver === 'string'))
    return receiver.hashCode$0();
  var length$ = receiver.length;
  for (var hash = 0, i = 0; i < length$; ++i) {
    var hash0 = 536870911 & hash + receiver.charCodeAt(i);
    var hash1 = 536870911 & hash0 + 524287 & hash0 << 10;
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
    hash = hash1;
  }
  hash0 = 536870911 & hash + 67108863 & hash << 3;
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + 16383 & hash0 << 15;
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.FutureImpl_FutureImpl$immediate = function(value) {
  var res = $.FutureImpl$();
  res._setValue$1(value);
  return res;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Futures_wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._SimpleEnumerable$ = function(_source) {
  return new $._SimpleEnumerable(_source);
};

$.GameStorage$ = function() {
  return new $.GameStorage($.EventHandle$(), $.window().get$localStorage());
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.contains$1 = function(receiver, other) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$1(other);
  return $.contains$2(receiver, other, 0);
};

$.isValidNumber = function(value) {
  return !(value == null) && $.isInfinite(value) !== true && $.isNaN(value) !== true;
};

$._EventsImpl$ = function(_ptr) {
  return new $._EventsImpl(_ptr);
};

$._RTCPeerConnectionEventsImpl$ = function(_ptr) {
  return new $._RTCPeerConnectionEventsImpl(_ptr);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $.StringBufferImpl$(content$);
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.negate$0();
};

$.NoSuchMethodError$ = function(_receiver, _functionName, _arguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _functionName, _arguments, existingArgumentNames);
};

$.Strings_join = function(strings, separator) {
  return $.StringImplementation_join(strings, separator);
};

$.StringImplementation_join = function(strings, separator) {
  $.checkNull(strings);
  $.checkNull(separator);
  return $.stringJoinUnchecked($.StringImplementation__toJsStringArray(strings), separator);
};

$.add$1 = function(receiver, value) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'add');
    receiver.push(value);
    return;
  }
  return receiver.add$1(value);
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length;
  else
    return receiver.get$length();
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag = $.getTypeNameOf(obj);
  var method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (var i = 0; i < $._dynamicMetadata0().length; ++i) {
      var entry = $._dynamicMetadata0()[i];
      if (entry.get$_lib4_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods['Object'];
  var proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.int_parse = function(source) {
  return $.Primitives_parseInt(source);
};

$.regExpMakeNative = function(regExp, global) {
  var pattern = regExp.get$pattern();
  var multiLine = regExp.get$multiLine();
  var ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  var sb = $.StringBuffer_StringBuffer('');
  if (multiLine === true)
    $.add$1(sb, 'm');
  if (ignoreCase === true)
    $.add$1(sb, 'i');
  if (global)
    $.add$1(sb, 'g');
  try {
    return new RegExp(pattern, $.toString(sb));
  } catch (exception) {
    var t1 = $.unwrapException(exception);
    var e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.main = function() {
  $._loadingBar = $.query('.sprite.loading_bar');
  $._loadingBar.get$style().set$display('block');
  $._loadingBar.get$style().set$width('0');
  $._imageLoader = $.ImageLoader$(['dart_transparent_01.png', 'dart_opaque_01.jpg']);
  $.add$1($._imageLoader.get$loaded(), $._onLoaded);
  $.add$1($._imageLoader.get$progress(), $._onProgress);
  $._imageLoader.load$0();
  if ($.supportsAudio() === true) {
    $._audioLoader = $.AudioLoader$($.AudioContext_AudioContext(), $.map($.$$($.CTC), $._getAudioPath));
    $.add$1($._audioLoader.get$loaded(), $._onLoaded);
    $.add$1($._audioLoader.get$progress(), $._onProgress);
    $._audioLoader.load$0();
  }
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$.ceil = function(receiver) {
  return Math.ceil(receiver);
};

$.ListImplementation__from = function(other) {
  var result = $.ListImplementation_List(null);
  for (var t1 = $.iterator(other); t1.hasNext$0() === true;)
    result.push(t1.next$0());
  return result;
};

$.ClickManager_addMouseOutHandler = function(obj, handler) {
  return $.get$ClickManager__mouseOutEvent().addHandler$2(obj, handler);
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCFullYear() : $.Primitives_lazyAsJsDate(receiver).getFullYear();
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCHours() : $.Primitives_lazyAsJsDate(receiver).getHours();
};

$._getTextures = function(transparentElement, opaqueElement) {
  var frames$ = $.makeLiteralMap([]);
  $.forEach($._getTransparentItems(), new $._getTextures_anon(frames$, transparentElement));
  $.forEach($._getOpaqueItems(), new $._getTextures_anon0(frames$, opaqueElement));
  return frames$;
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer('');
  $.Maps__emitMap(m, result, $.ListImplementation_List(null));
  return $.toString(result);
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if ($.eqB(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if ($.eqB(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($.ExceptionImplementation$('Unsupported number of arguments for wrapped closure'));
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.SquareElement$ = function(x, y) {
  var t1 = new $.SquareElement(x, y, null, $.ListImplementation_List(null), false, $.EventHandle$(), $.EventHandle$(), null, 80, 80, null, null, false, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
  t1.SquareElement$2(x, y);
  return t1;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$._isJavaScriptSimpleObject = function(value) {
  return Object.getPrototypeOf(value) === Object.prototype;
};

$.ioore = function(index) {
  throw $.$$throw($.IndexOutOfRangeException$(index));
};

$.GameElement__getScale = function(count, fullSize, holeSize) {
  return $.div($.mul($.add($.mul(count, 80), 64), fullSize), holeSize);
};

$._callInIsolate = function(isolate, function$) {
  isolate.eval$1(function$);
  $._globalState().get$topEventLoop().run$0();
};

$.playAudio = function(name$) {
  var t1 = $._audioContext;
  if (!(t1 == null)) {
    var source = t1.createBufferSource$0();
    source.set$buffer($.index($._buffers, name$));
    source.connect$2($._audioContext.get$destination(), 0);
    source.start$1(0);
  }
};

$._convertNativeToDart_IDBKey = function(nativeKey) {
  if (new $._convertNativeToDart_IDBKey_containsDate().call$1(nativeKey) === true)
    throw $.$$throw($.CTC17);
  return nativeKey;
};

$.compareTo = function(a, b) {
  if ($.checkNumbers(a, b))
    if ($.ltB(a, b))
      return -1;
    else if ($.gtB(a, b))
      return 1;
    else if ($.eqB(a, b)) {
      if ($.eqB(a, 0)) {
        var aIsNegative = $.isNegative(a);
        if ($.eqB(aIsNegative, $.isNegative(b)))
          return 0;
        if (aIsNegative === true)
          return -1;
        return 1;
      }
      return 0;
    } else if ($.isNaN(a) === true) {
      if ($.isNaN(b) === true)
        return 0;
      return 1;
    } else
      return -1;
  else if (typeof a === 'string') {
    if (!(typeof b === 'string'))
      throw $.$$throw($.ArgumentError$(b));
    if (a == b)
      var t1 = 0;
    else
      t1 = a < b ? -1 : 1;
    return t1;
  } else
    return a.compareTo$1(b);
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.DateImplementation$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateImplementation(millisecondsSinceEpoch, isUtc);
  t1.DateImplementation$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.mod = function(a, b) {
  if ($.checkNumbers(a, b)) {
    var result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$._IDBRequestEventsImpl$ = function(_ptr) {
  return new $._IDBRequestEventsImpl(_ptr);
};

$.ImageLoader$ = function(urls) {
  var t1 = $.EventHandle$();
  var t2 = $.EventHandle$();
  return new $.ImageLoader($.ResourceLoader__buildRORE(urls), t1, t2, 'unloaded');
};

$._DOMWindowCrossFrameImpl$ = function(_window) {
  return new $._DOMWindowCrossFrameImpl(_window);
};

$.RetainedUtil_transformPointGlobalToLocal = function(element, point) {
  return element.getTransform$0().createInverse$0().transformCoordinate$1(point);
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer('');
  $.Collections__emitCollection(c, result, $.ListImplementation_List(null));
  return $.toString(result);
};

$.CanvasUtil_centeredCircle = function(ctx, x, y, radius) {
  var t1 = $.sub(x, radius);
  var t2 = $.sub(y, radius);
  var t3 = radius * 2;
  $.CanvasUtil_ellipse(ctx, t1, t2, t3, t3);
};

$._SharedWorkerContextEventsImpl$ = function(_ptr) {
  return new $._SharedWorkerContextEventsImpl(_ptr);
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver))
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    if (start < 0)
      return -1;
    return receiver.indexOf(element, start);
  }
  return receiver.indexOf$2(element, start);
};

$.RetainedUtil_hitTest = function(stage, point) {
  return $.RetainedUtil__hitTest(stage.get$rootElement(), point);
};

$._TextTrackEventsImpl$ = function(_ptr) {
  return new $._TextTrackEventsImpl(_ptr);
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.StringBufferImpl$ = function(content$) {
  var t1 = new $.StringBufferImpl(null, null);
  t1.StringBufferImpl$1(content$);
  return t1;
};

$.NoSuchMethodError_safeToString = function(object) {
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.toString(object);
  if (typeof object === 'string')
    return '"' + $.S($.replaceAll($.replaceAll($.replaceAll($.replaceAll(object, '\\', '\\\\'), '\n', '\\n'), '\r', '\\r'), '"', '\\"')) + '"';
  return $.Primitives_objectToString(object);
};

$._SVGElementInstanceEventsImpl$ = function(_ptr) {
  return new $._SVGElementInstanceEventsImpl(_ptr);
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCDate() : $.Primitives_lazyAsJsDate(receiver).getDate();
};

$._Elements_createDivElement = function() {
  return $._document().$dom_createElement$1('div');
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.Coordinate$ = function(x, y) {
  return new $.Coordinate(x, y);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator = $.iterator(keyValuePairs);
  var result = $.LinkedHashMapImplementation$();
  for (; iterator.hasNext$0() === true;)
    result.operator$indexSet$2(iterator.next$0(), iterator.next$0());
  return result;
};

$.StringImplementation_concatAll = function(strings) {
  return $.stringJoinUnchecked($.StringImplementation__toJsStringArray(strings), '');
};

$._createMeasurementFuture = function(computeValue, completer) {
  if ($._pendingRequests == null) {
    $._pendingRequests = [];
    $._maybeScheduleMeasurementFrame();
  }
  $.add$1($._pendingRequests, $._MeasurementRequest$(computeValue, completer));
  return completer.get$future();
};

$.Tuple$ = function(item1, item2) {
  return new $.Tuple(item1, item2);
};

$.NoMoreElementsException$ = function() {
  return new $.NoMoreElementsException();
};

$.addAll = function(receiver, collection) {
  if (!$.isJsArray(receiver))
    return receiver.addAll$1(collection);
  var iterator = $.iterator(collection);
  for (; iterator.hasNext$0() === true;)
    $.add$1(receiver, iterator.next$0());
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ImageElement_ImageElement = function(src, width, height) {
  var t1 = $ === src;
  if (t1)
    src = null;
  var t2 = $ === width;
  if (t2)
    width = null;
  var t3 = $ === height;
  if (t3)
    height = null;
  if (t1)
    return $._Elements_createImageElement(null, null, null);
  if (t2)
    return $._Elements_createImageElement(src, null, null);
  if (t3)
    return $._Elements_createImageElement(src, width, null);
  return $._Elements_createImageElement(src, width, height);
};

$._runppw = function(textureData) {
  $.GameRoot_GameRoot(7, 7, $.toInt(7.65625), $.query('#gameCanvas'), textureData);
  $.add$1($.window().get$on().get$touchMove(), new $._runppw_anon());
};

$.Collections__emitCollection = function(c, result, visiting) {
  $.add$1(visiting, c);
  var isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  $.add$1(result, isList ? '[' : '{');
  for (var t1 = $.iterator(c), first = true; t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (!first)
      $.add$1(result, ', ');
    $.Collections__emitObject(t2, result, visiting);
    first = false;
  }
  $.add$1(result, isList ? ']' : '}');
  $.removeLast(visiting);
};

$._MutationObserverFactoryProvider_createMutationObserver = function(callback) {
  callback = $.convertDartClosureToJS(callback, 2);
    var constructor =
        window.MutationObserver || window.WebKitMutationObserver ||
        window.MozMutationObserver;
    return new constructor(callback);
  
};

$._document = function() {
return document;
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  return name$;
};

$._FrameSetElementEventsImpl$ = function(_ptr) {
  return new $._FrameSetElementEventsImpl(_ptr);
};

$._getAudioPath = function(name$) {
  return 'audio/' + $.S(name$) + '.webm';
};

$.listInsertRange = function(receiver, start, length$, initialValue) {
  if (typeof receiver !== 'object' || receiver === null || (receiver.constructor !== Array || !!receiver.immutable$list) && !receiver.is$JavaScriptIndexingBehavior())
    return $.listInsertRange$bailout(1, receiver, start, length$, initialValue);
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  var receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = receiverLength + length$;
  $.set$length(receiver, t1);
  var t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (var t3 = receiver.length, i = start; i < t2; ++i) {
      if (i < 0 || i >= t3)
        throw $.ioore(i);
      receiver[i] = initialValue;
    }
  $.set$length(receiver, t1);
};

$._IDBDatabaseEventsImpl$ = function(_ptr) {
  return new $._IDBDatabaseEventsImpl(_ptr);
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.getTypeNameOf(obj);
};

$.Array2d_Array2d = function(width, height, initialValue) {
  $.requireArgumentNotNull(width, 'width');
  $.requireArgumentNotNull(height, 'height');
  $.requireArgument($.gt(width, 0), 'width', null);
  $.requireArgument($.gt(height, 0), 'height', null);
  var s = $.ListImplementation_List(null);
  $.insertRange$3(s, 0, $.mul(width, height), initialValue);
  return $.Array2d$wrap(width, s);
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$._Elements_createImageElement = function(src, width, height) {
  var _e = $._document().$dom_createElement$1('img');
  if (!(src == null))
    _e.set$src(src);
  if (!(width == null))
    _e.set$width(width);
  if (!(height == null))
    _e.set$height(height);
  return _e;
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.truncate(a / b);
  return a.operator$tdiv$1(b);
};

$.GlobalId_GlobalId = function() {
  var t1 = $.GlobalId__globalId;
  $.GlobalId__globalId = $.add(t1, 1);
  return $.GlobalId$_internal(t1);
};

$._MediaStreamTrackListEventsImpl$ = function(_ptr) {
  return new $._MediaStreamTrackListEventsImpl(_ptr);
};

$._Collections_map = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.hasNext$0() === true;)
    destination.push(f.call$1(t1.next$0()));
  return destination;
};

$.S = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$.$$ = function(source) {
  if (typeof source === 'object' && source !== null && !!source.is$Enumerable)
    return source;
  else
    return $.Enumerable_Enumerable$fromIterable(source);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains$2($._Device_userAgent(), 'MSIE', 0) === true;
};

$.EventHandle$ = function() {
  return new $.EventHandle(null, false);
};

$.sort = function(receiver, compare) {
  if (!$.isJsArray(receiver))
    return receiver.sort$1(compare);
  $.checkMutable(receiver, 'sort');
  $.DualPivotQuicksort_sort(receiver, compare);
};

$.DualPivotQuicksort_sort = function(a, compare) {
  $.DualPivotQuicksort__doSort(a, 0, $.sub($.get$length(a), 1), compare);
};

$.Collections_map = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.hasNext$0() === true;)
    destination.push(f.call$1(t1.next$0()));
  return destination;
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? '[...]' : '{...}');
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, '{...}');
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add$1(result, o);
};

$.throwNoSuchMethod = function(obj, name$, arguments$) {
  throw $.$$throw($.NoSuchMethodError$(obj, name$, arguments$, null));
};

$._DedicatedWorkerContextEventsImpl$ = function(_ptr) {
  return new $._DedicatedWorkerContextEventsImpl(_ptr);
};

$.truncate = function(receiver) {
  return receiver < 0 ? $.ceil(receiver) : $.floor(receiver);
};

$.startRootIsolate = function(entry) {
  var t1 = $._Manager$();
  $._globalState0(t1);
  if ($._globalState().get$isWorker() === true)
    return;
  var rootContext = $._IsolateContext$();
  $._globalState().set$rootContext(rootContext);
  $._fillStatics(rootContext);
  $._globalState().set$currentContext(rootContext);
  if (!($._window() == null))
    rootContext.eval$1(new $.startRootIsolate_anon());
  rootContext.eval$1(entry);
  $._globalState().get$topEventLoop().run$0();
};

$.map = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.map$1(f);
  else
    return $.Collections_map(receiver, [], f);
};

$.Field$_internal = function(mineCount, cols, source) {
  var t1 = $.Array2d_Array2d(cols, $.tdiv($.get$length(source), cols), null);
  var t2 = cols > 0 && true ? $.tdiv($.get$length(source), cols) : 0;
  t2 = new $.Field(mineCount, t1, cols, t2, source);
  t2.Array2d$wrap$2(cols, source);
  t2.Field$_internal$3(mineCount, cols, source);
  return t2;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue());
};

$.substringUnchecked = function(receiver, startIndex, endIndex) {
  return receiver.substring(startIndex, endIndex);
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrameImpl__createSafe(win);
};

$.TextureAnimationRequest$ = function(_texturePrefix, _frameCount, _offset, delay, initialFrame, initialFrameOffset, startFrame) {
  var t1 = new $.TextureAnimationRequest($.EventHandle$(), _texturePrefix, _frameCount, _offset, delay, initialFrame, initialFrameOffset, false, null);
  t1.TextureAnimationRequest$7$delay$initialFrame$initialFrameOffset$startFrame(_texturePrefix, _frameCount, _offset, delay, initialFrame, initialFrameOffset, startFrame);
  return t1;
};

$._convertNativeToDart_IDBAny = function(object) {
  return $._convertNativeToDart_AcceptStructuredClone(object, false);
};

$.every = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.every$1(f);
  else
    return $.Collections_every(receiver, f);
};

$.rnd = function() {
  if ($._botHelperRandom == null)
    $._botHelperRandom = $.Random_Random(null);
  return $._botHelperRandom;
};

$._AudioContextEventsImpl$ = function(_ptr) {
  return new $._AudioContextEventsImpl(_ptr);
};

$.Collections_every = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
};

$._PostMessageScheduler$ = function(callback) {
  var t1 = new $._PostMessageScheduler('DART-MEASURE', false, callback);
  t1._PostMessageScheduler$1(callback);
  return t1;
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  return name$;
};

$._ElementAttributeMap$ = function(_element) {
  return new $._ElementAttributeMap(_element);
};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$2(other, startIndex);
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$._WorkerContextEventsImpl$ = function(_ptr) {
  return new $._WorkerContextEventsImpl(_ptr);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$._ElementEventsImpl$ = function(_ptr) {
  return new $._ElementEventsImpl(_ptr);
};

$._getOpaqueItems = function() {
  return $.makeLiteralMap(['background_side_left.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 0, 'y', 96, 'w', 352, 'h', 672]), 'rotated', true, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 352, 'h', 672]), 'sourceSize', $.makeLiteralMap(['w', 352, 'h', 672])]), 'background_top_left.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 1024, 'h', 96]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 1024, 'h', 96]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 96])]), 'balloon.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1184, 'y', 352, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'balloon_pieces_a.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1184, 'y', 272, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'balloon_pieces_b.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1184, 'y', 192, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'balloon_pieces_c.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1104, 'y', 352, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'balloon_pieces_d.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1024, 'y', 304, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'balloon_tagged_!.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 832, 'y', 368, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'balloon_tagged_bomb.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 944, 'y', 304, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'balloon_tagged_frozen.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1104, 'y', 272, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'crater_b.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1136, 'y', 112, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'game_board_center.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1104, 'y', 192, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'game_board_corner_bottom_left.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 784, 'y', 96, 'w', 112, 'h', 112]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 112, 'h', 112]), 'sourceSize', $.makeLiteralMap(['w', 112, 'h', 112])]), 'game_board_corner_bottom_right.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 672, 'y', 96, 'w', 112, 'h', 112]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 112, 'h', 112]), 'sourceSize', $.makeLiteralMap(['w', 112, 'h', 112])]), 'game_board_corner_top_left.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1136, 'y', 0, 'w', 112, 'h', 112]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 112, 'h', 112]), 'sourceSize', $.makeLiteralMap(['w', 112, 'h', 112])]), 'game_board_corner_top_right.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1024, 'y', 0, 'w', 112, 'h', 112]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 112, 'h', 112]), 'sourceSize', $.makeLiteralMap(['w', 112, 'h', 112])]), 'game_board_side_bottom.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 976, 'y', 112, 'w', 80, 'h', 112]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 112]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 112])]), 'game_board_side_left.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 784, 'y', 208, 'w', 112, 'h', 80]), 'rotated', true, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 112, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 112, 'h', 80])]), 'game_board_side_right.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 672, 'y', 208, 'w', 112, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 112, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 112, 'h', 80])]), 'game_board_side_top.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 896, 'y', 96, 'w', 80, 'h', 112]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 112]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 112])]), 'number_eight.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1056, 'y', 112, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'number_five.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1024, 'y', 224, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'number_four.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 672, 'y', 368, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'number_one.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 752, 'y', 320, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'number_seven.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 864, 'y', 288, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'number_six.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 944, 'y', 224, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'number_three.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 864, 'y', 208, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])]), 'number_two.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 672, 'y', 288, 'w', 80, 'h', 80]), 'rotated', false, 'trimmed', false, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 80, 'h', 80]), 'sourceSize', $.makeLiteralMap(['w', 80, 'h', 80])])]);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.isNegative = function(receiver) {
  if (typeof receiver === 'number')
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  else
    return receiver.isNegative$0();
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === 'undefined') {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$.jsHasOwnProperty = function(jsObject, property) {
  return jsObject.hasOwnProperty(property);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.Enumerable_Enumerable$fromIterable = function(source) {
  $.requireArgumentNotNull(source, 'source');
  return $._SimpleEnumerable$(source);
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$._Collections_every = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
};

$.AttachedEvent$ = function(name$) {
  return new $.AttachedEvent(name$);
};

$._PendingSendPortFinder$ = function() {
  var t1 = $._MessageTraverserVisitedMap$();
  t1 = new $._PendingSendPortFinder([], t1);
  t1._PendingSendPortFinder$0();
  return t1;
};

$.Futures_wait = function(futures) {
  var t1 = {};
  if (typeof futures !== 'string' && (typeof futures !== 'object' || futures === null || futures.constructor !== Array && !futures.is$JavaScriptIndexingBehavior()))
    return $.Futures_wait$bailout(1, futures, t1);
  if ($.isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC1);
  var completer = $.Completer_Completer();
  var result = completer.get$future();
  t1.remaining_1 = futures.length;
  var values = $.ListImplementation_List(futures.length);
  for (var i = 0; i < futures.length; ++i) {
    var future = futures[i];
    future.then$1(new $.Futures_wait_anon(completer, i, t1, result, values));
    future.handleException$1(new $.Futures_wait_anon0(future, completer, result));
  }
  return result;
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  if (typeof src !== 'string' && (typeof src !== 'object' || src === null || src.constructor !== Array && !src.is$JavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      var t3 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = srcStart + count, t2 = src.length, t3 = dst.length, i = srcStart, j = dstStart; i < t1; ++i, ++j) {
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      var t4 = src[i];
      if (j < 0 || j >= t3)
        throw $.ioore(j);
      dst[j] = t4;
    }
};

$.DateImplementation$now = function() {
  var t1 = new $.DateImplementation($.Primitives_dateNow(), false);
  t1.DateImplementation$now$0();
  return t1;
};

$.CanvasUtil_ellipse = function(ctx, x, y, width, height) {
  var t1 = width / 2;
  var hB = t1 * 0.5522847498307935;
  var t2 = height / 2;
  var vB = t2 * 0.5522847498307935;
  var eX = $.add(x, width);
  var eY = $.add(y, height);
  var mX = $.add(x, t1);
  var mY = $.add(y, t2);
  ctx.beginPath$0();
  ctx.moveTo$2(x, mY);
  ctx.bezierCurveTo$6(x, $.sub(mY, vB), $.sub(mX, hB), y, mX, y);
  ctx.bezierCurveTo$6($.add(mX, hB), y, eX, $.sub(mY, vB), eX, mY);
  ctx.bezierCurveTo$6(eX, $.add(mY, vB), $.add(mX, hB), eY, mX, eY);
  ctx.bezierCurveTo$6($.sub(mX, hB), eY, x, $.add(mY, vB), x, mY);
  ctx.closePath$0();
};

$._PeerConnection00EventsImpl$ = function(_ptr) {
  return new $._PeerConnection00EventsImpl(_ptr);
};

$._AbstractWorkerEventsImpl$ = function(_ptr) {
  return new $._AbstractWorkerEventsImpl(_ptr);
};

$.indexSet = function(a, index, value) {
  if (a.constructor === Array && !a.immutable$list) {
    var key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.index$slow = function(a, index) {
  if (typeof a === 'string' || $.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.truncate(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.CanvasElement_CanvasElement = function(width, height) {
  var t1 = $ === width;
  if (t1)
    width = null;
  var t2 = $ === height;
  if (t2)
    height = null;
  if (t1)
    return $._Elements_createCanvasElement(null, null);
  if (t2)
    return $._Elements_createCanvasElement(width, null);
  return $._Elements_createCanvasElement(width, height);
};

$.Future_Future$immediate = function(value) {
  return $.FutureImpl_FutureImpl$immediate(value);
};

$.Game$ = function(field) {
  var t1 = $.EventHandle$();
  var t2 = $.EventHandle$();
  t2 = new $.Game(field, $.Array2d_Array2d(field.get$width(), field.get$height(), $.CTC34), t1, t2, $.CTC31, null, null, null, null);
  t2.Game$1(field);
  return t2;
};

$.$$throw = function(ex) {
  if (ex == null)
    ex = $.CTC0;
  var jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.GameRoot$_internal = function(width, height, mineCount, _canvas, _stage, gameElement, _clickMan) {
  var t1 = new $.GameRoot(_stage, _canvas, gameElement, _clickMan, gameElement.addTransform$0(), false, width, height, mineCount, $.GameStorage$(), null, null, null, null);
  t1.GameManager$3(width, height, mineCount);
  t1.GameRoot$_internal$7(width, height, mineCount, _canvas, _stage, gameElement, _clickMan);
  return t1;
};

$._MessagePortEventsImpl$ = function(_ptr) {
  return new $._MessagePortEventsImpl(_ptr);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  if (from === '')
    if (receiver === '')
      return to;
    else {
      var result = $.StringBuffer_StringBuffer('');
      var length$ = receiver.length;
      $.add$1(result, to);
      for (var i = 0; i < length$; ++i) {
        $.add$1(result, receiver[i]);
        $.add$1(result, to);
      }
      return $.toString(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.CTC14, true), "\\$&"), false, false), true), to);
};

$.ReadOnlyCollection$ = function(source) {
  return new $.ReadOnlyCollection($.ListImplementation_List$from(source));
};

$._Device_isFirefox = function() {
  return $.contains$2($._Device_userAgent(), 'Firefox', 0);
};

$.min = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.isNegative(b) === true || $.isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$._Elements_createCanvasElement = function(width, height) {
  var _e = $._document().$dom_createElement$1('canvas');
  if (!(width == null))
    _e.set$width(width);
  if (!(height == null))
    _e.set$height(height);
  return _e;
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedOperationException$(reason));
};

$.index = function(a, index) {
  if (typeof a == "string" || a.constructor === Array) {
    var key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.RetainedUtil__hitTest = function(element, point) {
  point = $.RetainedUtil_transformPointGlobalToLocal(element, point);
  var bounds = $.Box$(0, 0, element.get$width(), element.get$height());
  var hits = $.ListImplementation_List(null);
  if (bounds.contains$1(point) === true) {
    var length$ = element.get$visualChildCount();
    if (typeof length$ !== 'number')
      return $.RetainedUtil__hitTest$bailout(1, element, length$, point, hits);
    for (var t1 = length$ - 1, i = 0; i < length$; ++i) {
      hits = $.RetainedUtil__hitTest(element.getVisualChild$1(t1 - i), point);
      if (hits.length > 0)
        break;
    }
    hits.push(element);
    return hits;
  } else
    return [];
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  return name$;
};

$.xor = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a ^ b) >>> 0;
  return a.operator$xor$1(b);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$._window = function() {
  return typeof window != "undefined" ? window : null;
};

$.substring$1 = function(receiver, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$1(startIndex);
  return $.substring$2(receiver, startIndex, null);
};

$._ElementFactoryProvider_createElement_tag = function(tag) {
return document.createElement(tag)
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.CanvasUtil_getCanvasSize = function(canvasElement) {
  return $.Size$(canvasElement.get$width(), canvasElement.get$height());
};

$.TextureAnimationElement$ = function(width, height, _textureData) {
  return new $.TextureAnimationElement(_textureData, $.ListImplementation_List(null), $.ListImplementation_List(null), false, $.EventHandle$(), $.EventHandle$(), null, width, height, null, null, false, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
};

$.ClickManager$ = function(_stage) {
  var t1 = new $.ClickManager(_stage, null);
  t1.ClickManager$1(_stage);
  return t1;
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.NullPointerException$ = function(functionName, arguments$) {
  return new $.NullPointerException(functionName, arguments$);
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.toStringWrapper = function() {
  return $.toString(this.dartException);
};

$.TextureInput_TextureInput$fromHash = function(keyName, map, image) {
  var frame = $.TextureInput__parseRect($.index(map, 'frame'));
  var sourceColorRect = $.TextureInput__parseRect($.index(map, 'spriteSourceSize'));
  var sourceSize = $.TextureInput__parseCoordinate($.index(map, 'sourceSize'));
  return $.TextureInput$(keyName, frame, $.index(map, 'rotated'), $.index(map, 'trimmed'), sourceColorRect, sourceSize, image);
};

$._onProgress = function(args) {
  var completedBytes = $._imageLoader.get$completedBytes();
  var totalBytes = $._imageLoader.get$totalBytes();
  var t1 = $._audioLoader;
  if (!(t1 == null)) {
    completedBytes = $.add(completedBytes, t1.get$completedBytes());
    totalBytes = $.add(totalBytes, $._audioLoader.get$totalBytes());
  }
  var percent = $.div(completedBytes, totalBytes);
  $.div($.floor($.mul(percent, 1000)), 10);
  t1 = $.S($.toInt($.mul(percent, 398))) + 'px';
  $._loadingBar.get$style().set$width(t1);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  return !($.indexOf$2(receiver, other, startIndex) === -1);
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$.requireArgument = function(truth, arg, message) {
  if (truth !== true)
    if (!(message == null))
      throw $.$$throw($.DetailedIllegalArgumentException$(arg, message));
    else
      throw $.$$throw($.IllegalArgumentException$(arg));
};

$.Primitives_objectToString = function(object) {
  return 'Instance of \'' + $.S($.Primitives_objectTypeName(object)) + '\'';
};

$._currentIsolate = function() {
  return $._globalState().get$currentContext();
};

$.insertRange$3 = function(receiver, start, length$, initialValue) {
  if (!$.isJsArray(receiver))
    return receiver.insertRange$3(start, length$, initialValue);
  return $.listInsertRange(receiver, start, length$, initialValue);
};

$._completeMeasurementFutures = function() {
  var t1 = $._pendingRequests;
  if (!(t1 == null))
    for (t1 = $.iterator(t1); t1.hasNext$0() === true;) {
      var request = t1.next$0();
      try {
        var t2 = request.computeValue$0();
        request.set$value(t2);
      } catch (exception) {
        t2 = $.unwrapException(exception);
        var e = t2;
        t2 = e;
        request.set$value(t2);
        request.set$exception(true);
      }

    }
  var completedRequests = $._pendingRequests;
  var readyMeasurementFrameCallbacks = $._pendingMeasurementFrameCallbacks;
  $._pendingRequests = null;
  $._pendingMeasurementFrameCallbacks = null;
  if (!(completedRequests == null))
    for (t1 = $.iterator(completedRequests); t1.hasNext$0() === true;) {
      t2 = t1.next$0();
      var t3 = t2.get$exception() === true;
      var t4 = t2.get$completer();
      if (t3)
        t4.completeException$1(t2.get$value());
      else
        t4.complete$1(t2.get$value());
    }
  if (!(readyMeasurementFrameCallbacks == null))
    for (t1 = $.iterator(readyMeasurementFrameCallbacks); t1.hasNext$0() === true;)
      t1.next$0().call$0();
};

$._NotificationEventsImpl$ = function(_ptr) {
  return new $._NotificationEventsImpl(_ptr);
};

$.NewGameElement$ = function() {
  var t1 = new $.NewGameElement($.EventHandle$(), $.ListImplementation_List(null), false, $.EventHandle$(), $.EventHandle$(), null, 294, 92, null, null, false, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
  t1.NewGameElement$0();
  return t1;
};

$.Coordinate_difference = function(a, b) {
  return $.Vector$($.sub(a.x, b.get$x()), $.sub(a.y, b.get$y()));
};

$.AudioLoader$ = function(context, urlList) {
  var t1 = $.EventHandle$();
  var t2 = $.EventHandle$();
  return new $.AudioLoader(context, $.ResourceLoader__buildRORE(urlList), t1, t2, 'unloaded');
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.getMouseEventCoordinate = function(event$) {
  return $.Coordinate$(event$.get$offsetX(), event$.get$offsetY());
};

$.startsWith = function(receiver, other) {
  $.checkString(other);
  var length$ = other.length;
  if (length$ > receiver.length)
    return false;
  return other == receiver.substring(0, length$);
};

$.FutureAlreadyCompleteException$ = function() {
  return new $.FutureAlreadyCompleteException();
};

$.convertDartClosureToJS = function(closure, arity) {
  if (closure == null)
    return;
  var function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $.DateImplementation$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$.ObjectNotClosureException$ = function() {
  return new $.ObjectNotClosureException();
};

$.clear = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.clear$0();
  $.set$length(receiver, 0);
};

$.Primitives_objectTypeName = function(object) {
  var name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, 'Object')) {
    var decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.charCodeAt(name$, 0) === 36 ? $.substring$1(name$, 1) : name$;
};

$.remainder = function(a, b) {
  if ($.checkNumbers(a, b))
    return a % b;
  else
    return a.remainder$1(b);
};

$.IndexIterator$ = function(length$, indexer) {
  var t1 = new $.IndexIterator(indexer, length$, 0);
  t1.IndexIterator$2(length$, indexer);
  return t1;
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$._FuncNumEnumerable$ = function(_source, _func) {
  return new $._FuncNumEnumerable(_source, _func);
};

$.print = function(object) {
  $.Primitives_printString($.toString(object));
};

$.isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length === 0;
  return receiver.isEmpty$0();
};

$.StackOverflowException$ = function() {
  return new $.StackOverflowException();
};

$.forEach = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.forEach$1(f);
  else
    return $.Collections_forEach(receiver, f);
};

$.Collections_forEach = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
};

$._MeasurementScheduler__MeasurementScheduler$best = function(callback) {
  if ($._isMutationObserverSupported() === true)
    return $._MutationObserverScheduler$(callback);
  return $._PostMessageScheduler$(callback);
};

$.identical = function(a, b) {
  return a === b;
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrameImpl__createSafe($.throwNoSuchMethod('', 'get event', []));
  else
    return e;
};

$.GameBackgroundElement$ = function() {
  return new $.GameBackgroundElement($.ListImplementation_List(null), true, $.EventHandle$(), $.EventHandle$(), null, 0, 0, null, null, false, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
};

$._convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values = [];
  var copies = [];
  var t1 = new $._convertNativeToDart_AcceptStructuredClone_findSlot(copies, values);
  var t2 = new $._convertNativeToDart_AcceptStructuredClone_readSlot(copies);
  return new $._convertNativeToDart_AcceptStructuredClone_walk(new $._convertNativeToDart_AcceptStructuredClone_writeSlot(copies), mustCopy, t1, t2).call$1(object);
};

$.max = function(a, b) {
  if (typeof b === 'number') {
    if (a > b)
      return a;
    if (a < b)
      return b;
    if (typeof b === 'number') {
      if (typeof a === 'number')
        if (a === 0)
          return a + b;
      if ($.isNaN(b) === true)
        return b;
      return a;
    }
    if (b === 0 && $.isNegative(a) === true)
      return b;
    return a;
  }
  throw $.$$throw($.ArgumentError$(b));
  throw $.$$throw($.ArgumentError$(a));
};

$.ScoreElement$ = function() {
  return new $.ScoreElement(null, null, null, null, null, $.ListImplementation_List(null), false, $.EventHandle$(), $.EventHandle$(), null, 400, 96, null, null, false, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
};

$.GameTitleElement$ = function() {
  return new $.GameTitleElement($.ListImplementation_List(null), false, $.EventHandle$(), $.EventHandle$(), null, 318, 96, null, null, false, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
};

$.PCanvas$ = function(w, h, enableCache) {
  return new $.PCanvas($.ListImplementation_List(null), null, $.ListImplementation_List(null), enableCache, $.EventHandle$(), $.EventHandle$(), null, w, h, null, null, false, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
};

$.Date_Date$now = function() {
  return $.DateImplementation$now();
};

$.DualPivotQuicksort_insertionSort_ = function(a, left, right, compare) {
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $.DualPivotQuicksort_insertionSort_$bailout(1, a, left, right, compare);
  if (typeof right !== 'number')
    return $.DualPivotQuicksort_insertionSort_$bailout(1, a, left, right, compare);
  for (var i = left + 1; i <= right; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    var el = a[i];
    var j = i;
    while (true) {
      if (j > left) {
        var t1 = j - 1;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        var t2 = $.gtB(compare.call$2(a[t1], el), 0);
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        break;
      var j0 = j - 1;
      if (j0 !== (j0 | 0))
        throw $.iae(j0);
      t1 = a.length;
      if (j0 < 0 || j0 >= t1)
        throw $.ioore(j0);
      t2 = a[j0];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t1)
        throw $.ioore(j);
      a[j] = t2;
      j = j0;
    }
    if (j !== (j | 0))
      throw $.iae(j);
    if (j < 0 || j >= a.length)
      throw $.ioore(j);
    a[j] = el;
  }
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.Property$ = function(name$, defaultValue) {
  return new $.Property(defaultValue, name$);
};

$._Collections_forEach = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === 'object'))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if ($.contains(userAgent, 'Chrome') || $.contains(userAgent, 'DumpRenderTree'))
    return $.typeNameInChrome;
  else if ($.contains(userAgent, 'Firefox'))
    return $.typeNameInFirefox;
  else if ($.contains(userAgent, 'MSIE'))
    return $.typeNameInIE;
  else if ($.contains(userAgent, 'Opera'))
    return $.typeNameInOpera;
  else if ($.contains(userAgent, 'AppleWebKit'))
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.indexSet$slow = function(a, index, value) {
  if ($.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.charCodeAt = function(receiver, index) {
  if (typeof receiver === 'string') {
    if (index < 0)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    if (index >= receiver.length)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return receiver.charCodeAt(index);
  } else
    return receiver.charCodeAt$1(index);
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$.removeRange = function(receiver, start, length$) {
  if (!$.isJsArray(receiver))
    return receiver.removeRange$2(start, length$);
  $.checkGrowable(receiver, 'removeRange');
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  var receiverLength = receiver.length;
  if (start < 0 || start >= receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = start + length$;
  if (t1 > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(t1));
  var t2 = receiverLength - length$;
  $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
  $.set$length(receiver, t2);
};

$.ListImplementation_List = function(length$) {
  return $.Primitives_newList(length$);
};

$._ResourceEntry$ = function(url) {
  return new $._ResourceEntry(url, null, null, null, 0);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = '-moz-';
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = '-ms-';
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = '-o-';
    else
      $._cachedBrowserPrefix = '-webkit-';
  return $._cachedBrowserPrefix;
};

$._BodyElementEventsImpl$ = function(_ptr) {
  return new $._BodyElementEventsImpl(_ptr);
};

$.Primitives_parseInt = function(string) {
  $.checkString(string);
  var match = /^\s*[+-]?(?:0(x)[a-f0-9]+|\d+)\s*$/i.exec(string);
  if (match == null)
    throw $.$$throw($.FormatException$(string));
  var base = !($.index(match, 1) == null) ? 16 : 10;
  var result = parseInt(string, base);
  if ($.isNaN(result) === true)
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.TextureInput__parseCoordinate = function(input) {
  return $.Size$($.index(input, 'w'), $.index(input, 'h'));
};

$._Timer$ = function(milliSeconds, callback) {
  var t1 = new $._Timer(true, null);
  t1._Timer$2(milliSeconds, callback);
  return t1;
};

$.BoardElement$ = function() {
  return new $.BoardElement(null, $.ListImplementation_List(null), true, $.EventHandle$(), $.EventHandle$(), null, 0, 0, null, null, false, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
};

$.isNaN = function(receiver) {
  if (typeof receiver === 'number')
    return isNaN(receiver);
  else
    return receiver.isNaN$0();
};

$.toInt = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.toInt$0();
  if ($.isNaN(receiver) === true)
    throw $.$$throw($.FormatException$('NaN'));
  if ($.isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$('Infinity'));
  var truncated = $.truncate(receiver);
  return truncated == -0.0 ? 0 : truncated;
};

$._RangeEnumerable$ = function(_start, _count) {
  return new $._RangeEnumerable(_start, _count);
};

$.GlobalId$_internal = function(value) {
  return new $.GlobalId(value, $.Util_getHashCode([value]));
};

$._ElementRectImpl$ = function(element) {
  return new $._ElementRectImpl($._SimpleClientRect$(element.get$clientLeft(), element.get$clientTop(), element.get$clientWidth(), element.get$clientHeight()), $._SimpleClientRect$(element.get$offsetLeft(), element.get$offsetTop(), element.get$offsetWidth(), element.get$offsetHeight()), $._SimpleClientRect$(element.get$scrollLeft(), element.get$scrollTop(), element.get$scrollWidth(), element.get$scrollHeight()), element.getBoundingClientRect$0(), element.getClientRects$0());
};

$.UnsupportedOperationException$ = function(_message) {
  return new $.UnsupportedOperationException(_message);
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver))
    return $.ListIterator$(receiver);
  return receiver.iterator$0();
};

$.Field_Field = function(mineCount, cols, rows, seed) {
  if (typeof mineCount !== 'number')
    return $.Field_Field$bailout(1, mineCount, cols, rows, seed);
  var squares = $.ListImplementation_List(null);
  $.insertRange$3(squares, 0, rows * cols, false);
  var rnd = $.Random_Random(seed);
  for (var i = 0; i < mineCount; ++i) {
    var index = null;
    do {
      index = rnd.nextInt$1(squares.length);
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= squares.length)
        throw $.ioore(index);
    } while (squares[index] === true);
    squares[index] = true;
  }
  return $.Field$_internal(mineCount, cols, $.ReadOnlyCollection$(squares));
};

$.Box$ = function(left, top$, width, height) {
  return new $.Box(left, top$, width, height);
};

$._HttpRequestEventsImpl$ = function(_ptr) {
  return new $._HttpRequestEventsImpl(_ptr);
};

$._isMutationObserverSupported = function() {
  return !!( window.MutationObserver || window.WebKitMutationObserver);

};

$._MutationObserverScheduler$ = function(callback) {
  var t1 = new $._MutationObserverScheduler(null, null, false, callback);
  t1._MutationObserverScheduler$1(callback);
  return t1;
};

$._SelectIterator$ = function(_source, _func) {
  return new $._SelectIterator(_source, _func);
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$.Array2d$wrap = function(width, source) {
  if (!(width == null) && $.gtB(width, 0) && true) {
    var t1 = source.length;
    if (typeof width !== 'number')
      throw $.iae(width);
    t1 = $.tdiv(t1, width);
  } else
    t1 = 0;
  t1 = new $.Array2d(width, t1, source);
  t1.Array2d$wrap$2(width, source);
  return t1;
};

$._AudioContextFactoryProvider_createAudioContext = function() {
    var constructor = window.AudioContext || window.webkitAudioContext;
    return new constructor();

};

$.abs = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.abs$0();
  return Math.abs(receiver);
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.ClickManager_setClickable = function(element, value) {
  if (value)
    $.get$ClickManager__isClickableProperty().set$2(element, true);
  else
    $.get$ClickManager__isClickableProperty().clear$1(element);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() : $.Primitives_lazyAsJsDate(receiver).getMilliseconds();
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$._getTransparentItems = function() {
  return $.makeLiteralMap(['balloon_explode_0000.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1840, 'y', 1306, 'w', 80, 'h', 84]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 89, 'y', 89, 'w', 80, 'h', 84]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0001.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 736, 'y', 650, 'w', 188, 'h', 188]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 43, 'y', 25, 'w', 188, 'h', 188]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0002.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 512, 'y', 1088, 'w', 216, 'h', 222]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 23, 'y', 19, 'w', 216, 'h', 222]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0003.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 284, 'y', 868, 'w', 226, 'h', 216]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 17, 'y', 17, 'w', 226, 'h', 216]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0004.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 284, 'y', 650, 'w', 226, 'h', 216]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 17, 'y', 17, 'w', 226, 'h', 216]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0005.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 512, 'y', 650, 'w', 222, 'h', 218]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 16, 'y', 15, 'w', 222, 'h', 218]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0006.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 512, 'y', 870, 'w', 222, 'h', 216]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 16, 'y', 16, 'w', 222, 'h', 216]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0007.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1650, 'y', 462, 'w', 224, 'h', 216]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 15, 'y', 16, 'w', 224, 'h', 216]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0008.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1424, 'y', 462, 'w', 224, 'h', 216]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 15, 'y', 15, 'w', 224, 'h', 216]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0009.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1442, 'y', 234, 'w', 226, 'h', 216]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 13, 'y', 15, 'w', 226, 'h', 216]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0010.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1214, 'y', 234, 'w', 226, 'h', 224]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 14, 'y', 14, 'w', 226, 'h', 224]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0011.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1660, 'y', 232, 'w', 228, 'h', 222]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 12, 'y', 15, 'w', 228, 'h', 222]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0012.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 984, 'y', 234, 'w', 228, 'h', 224]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 12, 'y', 13, 'w', 228, 'h', 224]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0013.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 754, 'y', 234, 'w', 228, 'h', 226]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 12, 'y', 13, 'w', 228, 'h', 226]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0014.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 522, 'y', 234, 'w', 230, 'h', 228]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 11, 'y', 12, 'w', 230, 'h', 228]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0015.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1416, 'y', 2, 'w', 230, 'h', 230]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 11, 'y', 12, 'w', 230, 'h', 230]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0016.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1184, 'y', 2, 'w', 230, 'h', 230]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 11, 'y', 12, 'w', 230, 'h', 230]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0017.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 718, 'y', 2, 'w', 232, 'h', 230]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 11, 'y', 13, 'w', 232, 'h', 230]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0018.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 952, 'y', 2, 'w', 230, 'h', 230]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 12, 'y', 13, 'w', 230, 'h', 230]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0019.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 484, 'y', 2, 'w', 232, 'h', 230]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 11, 'y', 13, 'w', 232, 'h', 230]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0020.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 288, 'y', 234, 'w', 232, 'h', 226]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 11, 'y', 13, 'w', 232, 'h', 226]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0021.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 250, 'y', 2, 'w', 232, 'h', 230]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 11, 'y', 12, 'w', 232, 'h', 230]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0022.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1648, 'y', 2, 'w', 230, 'h', 228]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 13, 'y', 13, 'w', 230, 'h', 228]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_explode_0023.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1232, 'y', 460, 'w', 190, 'h', 214]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 23, 'y', 17, 'w', 190, 'h', 214]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0000.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1120, 'y', 982, 'w', 142, 'h', 114]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 60, 'y', 66, 'w', 142, 'h', 114]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0001.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 522, 'y', 464, 'w', 230, 'h', 184]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 16, 'y', 31, 'w', 230, 'h', 184]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0002.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 288, 'y', 462, 'w', 232, 'h', 186]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 15, 'y', 30, 'w', 232, 'h', 186]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0003.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 2, 'y', 1056, 'w', 236, 'h', 186]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 12, 'y', 30, 'w', 236, 'h', 186]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0004.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 2, 'y', 818, 'w', 236, 'h', 186]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 12, 'y', 31, 'w', 236, 'h', 186]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0005.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 2, 'y', 580, 'w', 236, 'h', 186]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 12, 'y', 31, 'w', 236, 'h', 186]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0006.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 754, 'y', 462, 'w', 238, 'h', 184]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 10, 'y', 33, 'w', 238, 'h', 184]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0007.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 994, 'y', 460, 'w', 236, 'h', 182]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 11, 'y', 35, 'w', 236, 'h', 182]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0008.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 994, 'y', 644, 'w', 236, 'h', 180]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 11, 'y', 36, 'w', 236, 'h', 180]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0009.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1424, 'y', 680, 'w', 236, 'h', 178]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 11, 'y', 37, 'w', 236, 'h', 178]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0010.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 102, 'y', 1294, 'w', 84, 'h', 106]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 83, 'y', 79, 'w', 84, 'h', 106]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0011.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1872, 'y', 1028, 'w', 88, 'h', 112]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 81, 'y', 76, 'w', 88, 'h', 112]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0012.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 478, 'y', 1306, 'w', 94, 'h', 118]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 78, 'y', 73, 'w', 94, 'h', 118]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0013.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1406, 'y', 976, 'w', 100, 'h', 124]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 74, 'y', 70, 'w', 100, 'h', 124]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0014.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1300, 'y', 980, 'w', 104, 'h', 130]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 72, 'y', 67, 'w', 104, 'h', 130]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0015.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1874, 'y', 852, 'w', 110, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 68, 'y', 64, 'w', 110, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0016.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1390, 'y', 860, 'w', 114, 'h', 140]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 66, 'y', 62, 'w', 114, 'h', 140]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0017.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 998, 'y', 982, 'w', 120, 'h', 144]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 62, 'y', 60, 'w', 120, 'h', 144]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0018.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 872, 'y', 1006, 'w', 124, 'h', 148]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 60, 'y', 58, 'w', 124, 'h', 148]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0019.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1260, 'y', 826, 'w', 128, 'h', 152]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 57, 'y', 56, 'w', 128, 'h', 152]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0020.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1128, 'y', 826, 'w', 130, 'h', 154]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 56, 'y', 55, 'w', 130, 'h', 154]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0021.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 736, 'y', 1000, 'w', 134, 'h', 158]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 53, 'y', 53, 'w', 134, 'h', 158]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0022.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1884, 'y', 326, 'w', 136, 'h', 160]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 52, 'y', 51, 'w', 136, 'h', 160]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0023.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1884, 'y', 186, 'w', 138, 'h', 162]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 51, 'y', 50, 'w', 138, 'h', 162]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0024.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 336, 'y', 1224, 'w', 140, 'h', 160]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 49, 'y', 51, 'w', 140, 'h', 160]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0025.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1874, 'y', 690, 'w', 140, 'h', 160]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 49, 'y', 51, 'w', 140, 'h', 160]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0026.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 736, 'y', 840, 'w', 142, 'h', 158]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 47, 'y', 52, 'w', 142, 'h', 158]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'balloon_pop_0027.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 736, 'y', 1160, 'w', 136, 'h', 148]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 49, 'y', 56, 'w', 136, 'h', 148]), 'sourceSize', $.makeLiteralMap(['w', 256, 'h', 256])]), 'button_new_game.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 190, 'y', 610, 'w', 294, 'h', 92]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 2, 'y', 2, 'w', 294, 'h', 92]), 'sourceSize', $.makeLiteralMap(['w', 296, 'h', 96])]), 'button_new_game_clicked.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 190, 'y', 906, 'w', 292, 'h', 92]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 4, 'y', 3, 'w', 292, 'h', 92]), 'sourceSize', $.makeLiteralMap(['w', 296, 'h', 96])]), 'dart_fly_0000.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 880, 'y', 840, 'w', 108, 'h', 164]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 869, 'y', 485, 'w', 108, 'h', 164]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0001.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 2, 'y', 290, 'w', 186, 'h', 288]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 794, 'y', 385, 'w', 186, 'h', 288]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0002.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 2, 'y', 2, 'w', 246, 'h', 286]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 736, 'y', 317, 'w', 246, 'h', 286]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0003.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1662, 'y', 680, 'w', 210, 'h', 220]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 690, 'y', 271, 'w', 210, 'h', 220]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0004.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1880, 'y', 2, 'w', 182, 'h', 166]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 653, 'y', 243, 'w', 182, 'h', 166]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0005.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 874, 'y', 1156, 'w', 160, 'h', 120]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 622, 'y', 231, 'w', 160, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0006.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1654, 'y', 902, 'w', 142, 'h', 98]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 597, 'y', 211, 'w', 142, 'h', 98]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0007.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1406, 'y', 1078, 'w', 126, 'h', 92]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 576, 'y', 189, 'w', 126, 'h', 92]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0008.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1192, 'w', 112, 'h', 86]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 558, 'y', 179, 'w', 112, 'h', 86]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0009.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 598, 'y', 1306, 'w', 98, 'h', 94]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 545, 'y', 177, 'w', 98, 'h', 94]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0010.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1136, 'y', 1126, 'w', 86, 'h', 110]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 534, 'y', 185, 'w', 86, 'h', 110]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0011.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1534, 'y', 1132, 'w', 76, 'h', 124]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 524, 'y', 199, 'w', 76, 'h', 124]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0012.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 926, 'y', 648, 'w', 66, 'h', 134]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 517, 'y', 221, 'w', 66, 'h', 134]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0013.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0014.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0015.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0016.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0017.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0018.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0019.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0020.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0021.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0022.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0023.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0024.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0025.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0026.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0027.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0028.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0029.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0030.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0031.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0032.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0033.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0034.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0035.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0036.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0037.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0038.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0039.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1496, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0040.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1358, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0041.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1220, 'y', 1338, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0042.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1514, 'y', 1274, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0043.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1514, 'y', 1210, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0044.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1376, 'y', 1236, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0045.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1376, 'y', 1172, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0046.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1312, 'y', 1112, 'w', 62, 'h', 136]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0047.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1248, 'y', 1120, 'w', 62, 'h', 136]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0048.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1110, 'y', 1214, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0049.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 998, 'y', 1128, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0050.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1654, 'y', 1066, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0051.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1654, 'y', 1002, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0052.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1236, 'y', 982, 'w', 62, 'h', 136]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0053.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1874, 'y', 964, 'w', 62, 'h', 136]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 506, 'y', 248, 'w', 62, 'h', 136]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_0054.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 284, 'y', 610, 'w', 1, 'h', 1]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 1, 'h', 1]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0000.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1880, 'y', 186, 'w', 1, 'h', 1]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 1, 'h', 1]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0001.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 188, 'y', 1306, 'w', 94, 'h', 146]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 393, 'y', 451, 'w', 94, 'h', 146]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0002.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 284, 'y', 1086, 'w', 136, 'h', 226]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 375, 'y', 382, 'w', 136, 'h', 226]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0003.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1876, 'y', 464, 'w', 164, 'h', 224]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 355, 'y', 330, 'w', 164, 'h', 224]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0004.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1232, 'y', 676, 'w', 148, 'h', 190]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 362, 'y', 296, 'w', 148, 'h', 190]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0005.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 990, 'y', 826, 'w', 136, 'h', 154]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 369, 'y', 273, 'w', 136, 'h', 154]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0006.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1532, 'y', 860, 'w', 120, 'h', 118]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 378, 'y', 261, 'w', 120, 'h', 118]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0007.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 2, 'y', 1294, 'w', 106, 'h', 98]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 388, 'y', 249, 'w', 106, 'h', 98]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0008.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 698, 'y', 1310, 'w', 74, 'h', 90]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 410, 'y', 232, 'w', 74, 'h', 90]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0009.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 868, 'y', 1318, 'w', 92, 'h', 82]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 404, 'y', 224, 'w', 92, 'h', 82]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0010.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 774, 'y', 1310, 'w', 92, 'h', 88]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 410, 'y', 223, 'w', 92, 'h', 88]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0011.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1782, 'y', 1140, 'w', 86, 'h', 102]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 420, 'y', 231, 'w', 86, 'h', 102]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0012.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1792, 'y', 1024, 'w', 78, 'h', 114]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 433, 'y', 244, 'w', 78, 'h', 114]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0013.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0014.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0015.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0016.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0017.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0018.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0019.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0020.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0021.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0022.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0023.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0024.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0025.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0026.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0027.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0028.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0029.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0030.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0031.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0032.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0033.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0034.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0035.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0036.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0037.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0038.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0039.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 996, 'y', 1280, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0040.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1660, 'y', 1130, 'w', 74, 'h', 120]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0041.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1532, 'y', 980, 'w', 74, 'h', 120]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0042.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1798, 'y', 902, 'w', 74, 'h', 120]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 264, 'w', 74, 'h', 120]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0043.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1534, 'y', 1056, 'w', 74, 'h', 118]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 444, 'y', 266, 'w', 74, 'h', 118]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0044.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1886, 'y', 1118, 'w', 72, 'h', 118]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 445, 'y', 266, 'w', 72, 'h', 118]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0045.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1146, 'y', 1278, 'w', 72, 'h', 118]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 445, 'y', 266, 'w', 72, 'h', 118]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0046.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1072, 'y', 1280, 'w', 72, 'h', 118]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 445, 'y', 266, 'w', 72, 'h', 118]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0047.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1960, 'y', 1128, 'w', 72, 'h', 116]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 445, 'y', 268, 'w', 72, 'h', 116]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0048.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1724, 'y', 1228, 'w', 70, 'h', 116]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 447, 'y', 268, 'w', 70, 'h', 116]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0049.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1652, 'y', 1210, 'w', 70, 'h', 116]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 446, 'y', 268, 'w', 70, 'h', 116]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0050.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1724, 'y', 1300, 'w', 68, 'h', 114]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 448, 'y', 270, 'w', 68, 'h', 114]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0051.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1842, 'y', 1238, 'w', 66, 'h', 110]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 449, 'y', 274, 'w', 66, 'h', 110]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0052.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 190, 'y', 1200, 'w', 66, 'h', 104]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 449, 'y', 280, 'w', 66, 'h', 104]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0053.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 1986, 'y', 1028, 'w', 60, 'h', 98]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 454, 'y', 286, 'w', 60, 'h', 98]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'dart_fly_shadow_0054.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 250, 'y', 234, 'w', 1, 'h', 1]), 'rotated', false, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 1, 'h', 1]), 'sourceSize', $.makeLiteralMap(['w', 1024, 'h', 768])]), 'logo_win.png', $.makeLiteralMap(['frame', $.makeLiteralMap(['x', 190, 'y', 290, 'w', 318, 'h', 96]), 'rotated', true, 'trimmed', true, 'spriteSourceSize', $.makeLiteralMap(['x', 0, 'y', 0, 'w', 318, 'h', 96]), 'sourceSize', $.makeLiteralMap(['w', 320, 'h', 96])])]);
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document')
    return 'HTMLDocument';
  if (name$ === 'XMLDocument')
    return 'Document';
  if (name$ === 'WorkerMessageEvent')
    return 'MessageEvent';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'MouseScrollEvent')
    return 'WheelEvent';
  if (name$ === 'OfflineResourceList')
    return 'DOMApplicationCache';
  return name$;
};

$.ExceptionImplementation$ = function(message) {
  return new $.ExceptionImplementation(message);
};

$._WorkerEventsImpl$ = function(_ptr) {
  return new $._WorkerEventsImpl(_ptr);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.AudioContext_AudioContext = function() {
  return $._AudioContextFactoryProvider_createAudioContext();
};

$._maybeScheduleMeasurementFrame = function() {
  if ($._measurementScheduler == null)
    $._measurementScheduler = $._MeasurementScheduler__MeasurementScheduler$best($._completeMeasurementFutures);
  $._measurementScheduler.maybeSchedule$0();
};

$.AffineTransform$ = function(scaleX, shearY, shearX, scaleY, translateX, translateY) {
  return new $.AffineTransform(scaleX, shearY, shearX, scaleY, translateX, translateY);
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document') {
    if (!!obj.xmlVersion)
      return 'Document';
    return 'HTMLDocument';
  }
  if (name$ === 'ApplicationCache')
    return 'DOMApplicationCache';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'HTMLDDElement')
    return 'HTMLElement';
  if (name$ === 'HTMLDTElement')
    return 'HTMLElement';
  if (name$ === 'HTMLTableDataCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLTableHeaderCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLPhraseElement')
    return 'HTMLElement';
  if (name$ === 'MSStyleCSSProperties')
    return 'CSSStyleDeclaration';
  if (name$ === 'MouseWheelEvent')
    return 'WheelEvent';
  return name$;
};

$.Primitives_newList = function(length$) {
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  var result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$._globalState = function() {
return $globalState;
};

$.substring$2 = function(receiver, startIndex, endIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$2(startIndex, endIndex);
  $.checkNum(startIndex);
  var length$ = receiver.length;
  if (endIndex == null)
    endIndex = length$;
  $.checkNum(endIndex);
  if (startIndex < 0)
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(endIndex, length$))
    throw $.$$throw($.IndexOutOfRangeException$(endIndex));
  return $.substringUnchecked(receiver, startIndex, endIndex);
};

$.require = function(truth, message) {
  if (truth !== true)
    throw $.$$throw($.ExceptionImplementation$(message));
};

$.window = function() {
return window;
};

$._globalState0 = function(val) {
$globalState = val;
};

$.removeLast = function(receiver) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'removeLast');
    if ($.get$length(receiver) === 0)
      throw $.$$throw($.IndexOutOfRangeException$(-1));
    return receiver.pop();
  }
  return receiver.removeLast$0();
};

$.HashMapImplementation$ = function() {
  var t1 = new $.HashMapImplementation(null, null, null, null, null);
  t1.HashMapImplementation$0();
  return t1;
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMinutes() : $.Primitives_lazyAsJsDate(receiver).getMinutes();
};

$._FixedSizeListIterator$ = function(array) {
  return new $._FixedSizeListIterator($.get$length(array), array, 0);
};

$.addLast = function(receiver, value) {
  if (!$.isJsArray(receiver))
    return receiver.addLast$1(value);
  $.checkGrowable(receiver, 'addLast');
  receiver.push(value);
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$._FileReaderEventsImpl$ = function(_ptr) {
  return new $._FileReaderEventsImpl(_ptr);
};

$.DetailedIllegalArgumentException$ = function(arg, message) {
  return new $.DetailedIllegalArgumentException(arg, message);
};

$.MutationObserver_MutationObserver = function(callback) {
  return $._MutationObserverFactoryProvider_createMutationObserver(callback);
};

$.HashMapImplementation__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$.Completer_Completer = function() {
  return $.CompleterImpl$();
};

$.ResourceLoader__buildRORE = function(urlList) {
  return $.map($.$$(urlList), new $.ResourceLoader__buildRORE_anon()).toReadOnlyCollection$0();
};

$.isInfinite = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.isInfinite$0();
  return receiver == Infinity || receiver == -Infinity;
};

$.CompleterImpl$ = function() {
  return new $.CompleterImpl($.FutureImpl$());
};

$.HashMapImplementation__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$.DivElement_DivElement = function() {
  return $._Elements_createDivElement();
};

$._EventListenerListImpl$ = function(_ptr, _type) {
  return new $._EventListenerListImpl(_ptr, _type);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.GameRoot_GameRoot = function(width, height, mineCount, canvasElement, textureData) {
  var rootElement = $.GameElement$(textureData);
  var stage = $.Stage$(canvasElement, rootElement);
  return $.GameRoot$_internal(width, height, mineCount, canvasElement, stage, rootElement, $.ClickManager$(stage));
};

$._DOMApplicationCacheEventsImpl$ = function(_ptr) {
  return new $._DOMApplicationCacheEventsImpl(_ptr);
};

$.TextureInput__parseRect = function(input) {
  return $.Box_Box$fromCoordSize($.Coordinate$($.index(input, 'x'), $.index(input, 'y')), $.Size$($.index(input, 'w'), $.index(input, 'h')));
};

$.supportsAudio = function() {
  return $.contains$1($.window().get$clientInformation().get$userAgent(), 'Chrome');
};

$.StringImplementation__toJsStringArray = function(strings) {
  if (typeof strings !== 'object' || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $.StringImplementation__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  var length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (var i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      var string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$._timerFactory = function(millis, callback, repeating) {
  return repeating === true ? $._Timer$repeating(millis, callback) : $._Timer$(millis, callback);
};

$._RangeIterator$ = function(_start, _count) {
  return new $._RangeIterator(_start, _count, 0);
};

$.query = function(selector) {
  return $._document().query$1(selector);
};

$.constructorNameFallback = function(object) {
  if (object == null)
    return 'Null';
  var constructor$ = object.constructor;
  if (typeof(constructor$) === 'function') {
    var name$ = constructor$.name;
    if (typeof name$ === 'string')
      var t1 = !(name$ === '') && !(name$ === 'Object') && !(name$ === 'Function.prototype');
    else
      t1 = false;
    if (t1)
      return name$;
  }
  var string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.GameElement$ = function(textureData) {
  var t1 = $.PCanvas$(0, 0, false);
  var t2 = $.GameBackgroundElement$();
  var t3 = $.BoardElement$();
  var t4 = $.NewGameElement$();
  var t5 = $.GameTitleElement$();
  var t6 = $.EventHandle$();
  var t7 = $.TextureAnimationElement$(0, 0, textureData);
  var t8 = $.TextureAnimationElement$(0, 0, textureData);
  t6 = new $.GameElement(t1, t2, t3, $.ScoreElement$(), t4, t5, t7, t8, textureData, t6, null, null, null, null, null, null, $.ListImplementation_List(null), false, $.EventHandle$(), $.EventHandle$(), null, 100, 100, null, null, false, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
  t6.GameElement$1(textureData);
  return t6;
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$('Cyclic initialization for static ' + $.S(staticName)));
};

$._LocalWindowEventsImpl$ = function(_ptr) {
  return new $._LocalWindowEventsImpl(_ptr);
};

$.filter = function(receiver, predicate) {
  if (!$.isJsArray(receiver))
    return receiver.filter$1(predicate);
  else
    return $.Collections_filter(receiver, [], predicate);
};

$.Collections_filter = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.unwrapException = function(ex) {
  if ("dartException" in ex)
    return ex.dartException;
  var message = ex.message;
  if (ex instanceof TypeError) {
    var type = ex.type;
    var name$ = ex.arguments ? ex.arguments[0] : "";
    if ($.eqB(type, 'property_not_function') || $.eqB(type, 'called_non_callable') || $.eqB(type, 'non_object_property_call') || $.eqB(type, 'non_object_property_load'))
      if (typeof name$ === 'string' && $.startsWith(name$, 'call$') === true)
        return $.ObjectNotClosureException$();
      else
        return $.NullPointerException$(null, $.CTC1);
    else if ($.eqB(type, 'undefined_method'))
      if (typeof name$ === 'string' && $.startsWith(name$, 'call$') === true)
        return $.ObjectNotClosureException$();
      else
        return $.NoSuchMethodError$('', name$, [], null);
    var ieErrorCode = ex.number & 0xffff;
    var ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.endsWith(message, 'is null') === true || $.endsWith(message, 'is undefined') === true || $.endsWith(message, 'is null or undefined') === true)
        return $.NullPointerException$(null, $.CTC1);
      else {
        if ($.contains$1(message, ' is not a function') !== true)
          var t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$('', '<unknown>', [], null);
      }
    return $.ExceptionImplementation$(typeof message === 'string' ? message : '');
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && $.contains$1(message, 'call stack') === true)
      return $.StackOverflowException$();
    return $.ArgumentError$('');
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === 'too much recursion')
      return $.StackOverflowException$();
  return ex;
};

$.Vector$ = function(x, y) {
  return new $.Vector(x, y);
};

$._Collections_filter = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else {
      $.checkNull(b);
      throw $.$$throw($.ArgumentError$(b));
    }
  return false;
};

$._ReceivePortImpl$ = function() {
  var t1 = $._ReceivePortImpl__nextFreeId;
  $._ReceivePortImpl__nextFreeId = $.add(t1, 1);
  t1 = new $._ReceivePortImpl(t1, null);
  t1._ReceivePortImpl$0();
  return t1;
};

$._NodeListWrapper$ = function(list) {
  return new $._NodeListWrapper(list);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.replaceAll = function(receiver, from, to) {
  if (!(typeof receiver === 'string'))
    return receiver.replaceAll$2(from, to);
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._Lists_indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._WhereIterator$ = function(_source, _func) {
  return new $._WhereIterator(_source, _func, null, null);
};

$._Device_isOpera = function() {
  return $.contains$2($._Device_userAgent(), 'Opera', 0);
};

$.HttpRequest_HttpRequest = function() {
  return $._HttpRequestFactoryProvider_createHttpRequest();
};

$._HttpRequestFactoryProvider_createHttpRequest = function() {
return new XMLHttpRequest();
};

$.toString = function(value) {
  if (typeof value == "object" && value !== null)
    if ($.isJsArray(value))
      return $.Collections_collectionToString(value);
    else
      return value.toString$0();
  if (value === 0 && (1 / value) < 0)
    return '-0.0';
  if (value == null)
    return 'null';
  if (typeof value == "function")
    return 'Closure';
  return String(value);
};

$._SimpleClientRect$ = function(left, top$, width, height) {
  return new $._SimpleClientRect(left, top$, width, height);
};

$.Element_Element$tag = function(tag) {
  return $._ElementFactoryProvider_createElement_tag(tag);
};

$.requireArgumentNotNull = function(argument, argName) {
  if (argument == null)
    throw $.$$throw($.NullArgumentException$(argName));
};

$.Stage$ = function(_canvas, _element) {
  var t1 = new $.Stage($.EventHandle$(), _canvas, _element, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
  t1.Stage$2(_canvas, _element);
  return t1;
};

$._FuncEnumerable$ = function(_source, _func) {
  return new $._FuncEnumerable(_source, _func);
};

$._TextTrackCueEventsImpl$ = function(_ptr) {
  return new $._TextTrackCueEventsImpl(_ptr);
};

$.endsWith = function(receiver, other) {
  $.checkString(other);
  var receiverLength = receiver.length;
  var otherLength = other.length;
  if (otherLength > receiverLength)
    return false;
  return other === $.substring$1(receiver, receiverLength - otherLength);
};

$.Random_Random = function(seed) {
  return $.CTC33;
};

$.Box_Box$fromCoordSize = function(topLeft, size) {
  return $.Box$(topLeft.x, topLeft.y, size.width, size.height);
};

$._SpeechRecognitionEventsImpl$ = function(_ptr) {
  return new $._SpeechRecognitionEventsImpl(_ptr);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCSeconds() : $.Primitives_lazyAsJsDate(receiver).getSeconds();
};

$.Util_getHashCode = function(source) {
  for (var t1 = $.iterator(source), hash = 0; t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    var next = t2 == null ? 0 : $.hashCode(t2);
    if (typeof next !== 'number')
      throw $.iae(next);
    var hash0 = 536870911 & hash + next;
    var hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
    hash = hash1;
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
};

$.IllegalArgumentException$ = function(argument) {
  return new $.IllegalArgumentException(argument);
};

$._HttpRequestUploadEventsImpl$ = function(_ptr) {
  return new $._HttpRequestUploadEventsImpl(_ptr);
};

$.Mouse_markMouseOver = function(stage, coordinate) {
  $.requireArgumentNotNull(stage, 'stage');
  var t1 = !(coordinate == null);
  $.requireArgument(coordinate == null || coordinate.get$isValid() === true, 'coordinate', null);
  var items = $.get$Mouse__stageMouseCacheProperty().get$1(stage);
  if (!(items == null)) {
    $.forEach(items, new $.Mouse_markMouseOver_anon());
    $.get$Mouse__stageMouseCacheProperty().clear$1(stage);
  }
  if (t1) {
    var hits = $.RetainedUtil_hitTest(stage, coordinate);
    $.get$Mouse__stageMouseCacheProperty().set$2(stage, hits);
    $.forEach(hits, new $.Mouse_markMouseOver_anon0());
    if ($.gtB($.get$length(hits), 0))
      $.get$Mouse_isMouseDirectlyOverProperty().set$2($.index(hits, 0), true);
    return hits;
  }
  return;
};

$.DualPivotQuicksort__doSort = function(a, left, right, compare) {
  if ($.leB($.sub(right, left), 32))
    $.DualPivotQuicksort_insertionSort_(a, left, right, compare);
  else
    $.DualPivotQuicksort__dualPivotQuicksort(a, left, right, compare);
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.NullPointerException$(null, $.CTC1));
  return object;
};

$._MeasurementRequest$ = function(computeValue, completer) {
  return new $._MeasurementRequest(computeValue, completer, null, false);
};

$.Collections__containsRef = function(c, ref) {
  for (var t1 = $.iterator(c); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.contains = function(userAgent, name$) {
  return userAgent.indexOf(name$) !== -1;
};

$._MediaElementEventsImpl$ = function(_ptr) {
  return new $._MediaElementEventsImpl(_ptr);
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.add$1(visiting, m);
  $.add$1(result, '{');
  t1.first_1 = true;
  $.forEach(m, new $.Maps__emitMap_anon(result, t1, visiting));
  $.add$1(result, '}');
  $.removeLast(visiting);
};

$._MessageTraverser_isPrimitive = function(x) {
  return x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean';
};

$._Deserializer_isPrimitive = function(x) {
  return x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean';
};

$.propertySet = function(object, property, value) {
  object[property] = value;
};

$.CanvasUtil_transform = function(ctx, tx) {
  $.requireArgumentNotNull(ctx, 'ctx');
  $.requireArgumentNotNull(tx, 'tx');
  ctx.transform$6(tx.get$scaleX(), tx.get$shearY(), tx.get$shearX(), tx.get$scaleY(), tx.get$translateX(), tx.get$translateY());
};

$._BatteryManagerEventsImpl$ = function(_ptr) {
  return new $._BatteryManagerEventsImpl(_ptr);
};

$.AffineTransform_AffineTransform$fromRotate = function(theta, x, y) {
  return $.AffineTransform$(1, 0, 0, 1, 0, 0).setToRotation$3(theta, x, y);
};

$._IDBOpenDBRequestEventsImpl$ = function(_ptr) {
  return new $._IDBOpenDBRequestEventsImpl(_ptr);
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedOperationException$(reason));
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$._serializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$.IndexOutOfRangeException$ = function(_value) {
  return new $.IndexOutOfRangeException(_value);
};

$.KeyValuePair$ = function(key, value) {
  return new $.KeyValuePair(key, value);
};

$._DocumentEventsImpl$ = function(_ptr) {
  return new $._DocumentEventsImpl(_ptr);
};

$.Mouse_isMouseDirectlyOver = function(element) {
  return $.get$Mouse_isMouseDirectlyOverProperty().get$1(element);
};

$._IDBVersionChangeRequestEventsImpl$ = function(_ptr) {
  return new $._IDBVersionChangeRequestEventsImpl(_ptr);
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TextureData$ = function(_textures) {
  return new $.TextureData(_textures);
};

$.NullArgumentException$ = function(arg) {
  return new $.NullArgumentException(arg, arg);
};

$.FutureNotCompleteException$ = function() {
  return new $.FutureNotCompleteException();
};

$.propertyTypeCastError = function(value, property) {
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), $.substring$2(property, 3, $.get$length(property))));
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$.LinkedHashMapImplementation$ = function() {
  var t1 = new $.LinkedHashMapImplementation(null, null);
  t1.LinkedHashMapImplementation$0();
  return t1;
};

$.FutureImpl$ = function() {
  return new $.FutureImpl(false, null, null, null, false, [], [], []);
};

$._DOMWindowCrossFrameImpl__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrameImpl$(w);
};

$.ElementMouseEventArgs_ElementMouseEventArgs = function(element, mouseEvent) {
  return $.ElementMouseEventArgs$_internal(element, mouseEvent.get$shiftKey());
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.CanvasUtil_drawImage = function(ctx, img, sourceBox, targetBox) {
  if (targetBox == null)
    targetBox = $.Box$(0, 0, sourceBox.get$width(), sourceBox.get$height());
  ctx.drawImage$9(img, sourceBox.get$left(), sourceBox.get$top(), sourceBox.get$width(), sourceBox.get$height(), targetBox.get$left(), targetBox.get$top(), targetBox.get$width(), targetBox.get$height());
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$._FileWriterEventsImpl$ = function(_ptr) {
  return new $._FileWriterEventsImpl(_ptr);
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$.Duration$ = function(days, hours, milliseconds, minutes, seconds) {
  var t1 = days * 86400000 + hours * 3600000 + minutes * 60000 + seconds * 1000;
  if (typeof milliseconds !== 'number')
    throw $.iae(milliseconds);
  return new $.Duration(t1 + milliseconds);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.ClickManager_addHandler = function(element, handler) {
  return $.get$ClickManager__clickEvent().addHandler$2(element, handler);
};

$.Arrays_copy$bailout = function(state, src, srcStart, dst, dstStart, count) {
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j)
      $.indexSet(dst, j, $.index(src, i));
  else
    for (var t1 = srcStart + count, i = srcStart, j = dstStart; i < t1; ++i, ++j)
      $.indexSet(dst, j, $.index(src, i));
};

$._Lists_indexOf$bailout = function(state, a, element, startIndex, endIndex) {
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; $.ltB(i, endIndex); ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Arrays_indexOf$bailout = function(state, a, element, startIndex, endIndex) {
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Field_Field$bailout = function(state, mineCount, cols, rows, seed) {
  var squares = $.ListImplementation_List(null);
  $.insertRange$3(squares, 0, rows * cols, false);
  var rnd = $.Random_Random(seed);
  for (var i = 0; $.ltB(i, mineCount); ++i) {
    var index = null;
    do {
      index = rnd.nextInt$1(squares.length);
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= squares.length)
        throw $.ioore(index);
    } while (squares[index] === true);
    squares[index] = true;
  }
  return $.Field$_internal(mineCount, cols, $.ReadOnlyCollection$(squares));
};

$.StringImplementation__toJsStringArray$bailout = function(state, strings) {
  $.checkNull(strings);
  var length$ = $.get$length(strings);
  if ($.isJsArray(strings)) {
    for (var i = 0; $.ltB(i, length$); ++i) {
      var string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      if (i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$.DualPivotQuicksort__dualPivotQuicksort$bailout = function(state, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
  switch (state) {
    case 1:
      var a = env0;
      var left = env1;
      var right = env2;
      var compare = env3;
      break;
    case 2:
      a = env0;
      left = env1;
      right = env2;
      compare = env3;
      less = env4;
      k = env5;
      index1 = env6;
      index5 = env7;
      el2 = env8;
      pivots_are_equal = env9;
      ak = env10;
      comp = env11;
      el4 = env12;
      great = env13;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var sixth = $.tdiv($.add($.sub(right, left), 1), 6);
      if (typeof sixth !== 'number')
        throw $.iae(sixth);
      var index1 = left + sixth;
      var index5 = $.sub(right, sixth);
      if (typeof right !== 'number')
        throw $.iae(right);
      var index3 = $.tdiv(left + right, 2);
      var index2 = index3 - sixth;
      var index4 = index3 + sixth;
      var el1 = $.index(a, index1);
      var el2 = $.index(a, index2);
      var el3 = $.index(a, index3);
      var el4 = $.index(a, index4);
      var el5 = $.index(a, index5);
      if ($.gtB(compare.call$2(el1, el2), 0)) {
        var t0 = el1;
        el1 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      if ($.gtB(compare.call$2(el1, el3), 0)) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      if ($.gtB(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el1, el4), 0)) {
        t0 = el1;
        el1 = el4;
        el4 = t0;
      }
      if ($.gtB(compare.call$2(el3, el4), 0)) {
        t0 = el3;
        el3 = el4;
        el4 = t0;
      }
      if ($.gtB(compare.call$2(el2, el5), 0)) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      $.indexSet(a, index1, el1);
      $.indexSet(a, index3, el3);
      $.indexSet(a, index5, el5);
      $.indexSet(a, index2, $.index(a, left));
      $.indexSet(a, index4, $.index(a, right));
      var less = left + 1;
      var great = right - 1;
      var pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
    case 2:
      if (state === 2 || state === 0 && pivots_are_equal)
        switch (state) {
          case 0:
            var k = less;
          case 2:
            L0:
              while (true)
                switch (state) {
                  case 0:
                    if (!(k <= great))
                      break L0;
                  case 2:
                    c$0: {
                      switch (state) {
                        case 0:
                          var ak = $.index(a, k);
                          var comp = compare.call$2(ak, el2);
                        case 2:
                          state = 0;
                          if ($.eqB(comp, 0))
                            break c$0;
                          if ($.ltB(comp, 0)) {
                            if (!(k === less)) {
                              $.indexSet(a, k, $.index(a, less));
                              $.indexSet(a, less, ak);
                            }
                            ++less;
                          } else
                            for (var less0 = less + 1; true;) {
                              comp = compare.call$2($.index(a, great), el2);
                              if ($.gtB(comp, 0)) {
                                --great;
                                continue;
                              } else if ($.ltB(comp, 0)) {
                                $.indexSet(a, k, $.index(a, less));
                                $.indexSet(a, less, $.index(a, great));
                                var great0 = great - 1;
                                $.indexSet(a, great, ak);
                                great = great0;
                                less = less0;
                                break;
                              } else {
                                $.indexSet(a, k, $.index(a, great));
                                great0 = great - 1;
                                $.indexSet(a, great, ak);
                                great = great0;
                                break;
                              }
                            }
                      }
                    }
                    ++k;
                }
        }
      else
        for (k = less; k <= great; ++k) {
          ak = $.index(a, k);
          if ($.ltB(compare.call$2(ak, el2), 0)) {
            if (!(k === less)) {
              $.indexSet(a, k, $.index(a, less));
              $.indexSet(a, less, ak);
            }
            ++less;
          } else if ($.gtB(compare.call$2(ak, el4), 0))
            for (less0 = less + 1; true;)
              if ($.gtB(compare.call$2($.index(a, great), el4), 0)) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
                  $.indexSet(a, k, $.index(a, less));
                  $.indexSet(a, less, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                } else {
                  $.indexSet(a, k, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                }
                break;
              }
        }
      var t1 = less - 1;
      $.indexSet(a, left, $.index(a, t1));
      $.indexSet(a, t1, el2);
      $.indexSet(a, right, $.index(a, great + 1));
      $.indexSet(a, great + 1, el4);
      $.DualPivotQuicksort__doSort(a, left, less - 2, compare);
      $.DualPivotQuicksort__doSort(a, great + 2, right, compare);
      if (pivots_are_equal)
        return;
      if (less < index1 && $.gtB(great, index5)) {
        for (; $.eqB(compare.call$2($.index(a, less), el2), 0);)
          ++less;
        for (; $.eqB(compare.call$2($.index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = $.index(a, k);
          if ($.eqB(compare.call$2(ak, el2), 0)) {
            if (!(k === less)) {
              $.indexSet(a, k, $.index(a, less));
              $.indexSet(a, less, ak);
            }
            ++less;
          } else if ($.eqB(compare.call$2(ak, el4), 0))
            for (less0 = less + 1; true;)
              if ($.eqB(compare.call$2($.index(a, great), el4), 0)) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
                  $.indexSet(a, k, $.index(a, less));
                  $.indexSet(a, less, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                } else {
                  $.indexSet(a, k, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                }
                break;
              }
        }
        $.DualPivotQuicksort__doSort(a, less, great, compare);
      } else
        $.DualPivotQuicksort__doSort(a, less, great, compare);
  }
};

$.listInsertRange$bailout = function(state, receiver, start, length$, initialValue) {
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  var receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = receiverLength + length$;
  $.set$length(receiver, t1);
  var t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (var i = start; i < t2; ++i)
      $.indexSet(receiver, i, initialValue);
  $.set$length(receiver, t1);
};

$.DualPivotQuicksort_insertionSort_$bailout = function(state, a, left, right, compare) {
  for (var i = left + 1; $.leB(i, right); ++i) {
    var el = $.index(a, i);
    var j = i;
    while (true) {
      if (!(j > left && $.gtB(compare.call$2($.index(a, j - 1), el), 0)))
        break;
      var j0 = j - 1;
      $.indexSet(a, j, $.index(a, j0));
      j = j0;
    }
    $.indexSet(a, j, el);
  }
};

$.RetainedUtil__hitTest$bailout = function(state, env0, env1, env2, env3) {
  switch (state) {
    case 1:
      var element = env0;
      length$ = env1;
      point = env2;
      hits = env3;
      break;
  }
  switch (state) {
    case 0:
      var point = $.RetainedUtil_transformPointGlobalToLocal(element, point);
      var bounds = $.Box$(0, 0, element.get$width(), element.get$height());
      var hits = $.ListImplementation_List(null);
    case 1:
      if (state === 1 || state === 0 && bounds.contains$1(point) === true)
        switch (state) {
          case 0:
            var length$ = element.get$visualChildCount();
          case 1:
            state = 0;
            for (var i = 0; $.ltB(i, length$); ++i) {
              hits = $.RetainedUtil__hitTest(element.getVisualChild$1($.sub($.sub(length$, 1), i)), point);
              if (hits.length > 0)
                break;
            }
            hits.push(element);
            return hits;
        }
      else
        return [];
  }
};

$.Futures_wait$bailout = function(state, futures, t1) {
  if ($.isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC1);
  var completer = $.Completer_Completer();
  var result = completer.get$future();
  t1.remaining_1 = $.get$length(futures);
  var values = $.ListImplementation_List($.get$length(futures));
  for (var i = 0; $.ltB(i, $.get$length(futures)); ++i) {
    var future = $.index(futures, i);
    future.then$1(new $.Futures_wait_anon(completer, i, t1, result, values));
    future.handleException$1(new $.Futures_wait_anon0(future, completer, result));
  }
  return result;
};

$._getAudioPath.call$1 = $._getAudioPath;
$._getAudioPath.$name = "_getAudioPath";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$._completeMeasurementFutures.call$0 = $._completeMeasurementFutures;
$._completeMeasurementFutures.$name = "_completeMeasurementFutures";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$._onProgress.call$1 = $._onProgress;
$._onProgress.$name = "_onProgress";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$._onLoaded.call$1 = $._onLoaded;
$._onLoaded.$name = "_onLoaded";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$._timerFactory.call$3 = $._timerFactory;
$._timerFactory.$name = "_timerFactory";
Isolate.$finishClasses($$);
$$ = {};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC1 = Isolate.makeConstantList([]);
$.CTC52 = 'childList';
$.CTC53 = 'attributes';
$.CTC54 = 'characterData';
$.CTC55 = 'subtree';
$.CTC56 = 'attributeOldValue';
$.CTC57 = 'characterDataOldValue';
$.CTC58 = Isolate.makeConstantList(['childList', 'attributes', 'characterData', 'subtree', 'attributeOldValue', 'characterDataOldValue']);
$.CTC59 = true;
$.CTC23 = new Isolate.$isolateProperties.ConstantMap(6, {'childList': true, 'attributes': true, 'characterData': true, 'subtree': true, 'attributeOldValue': true, 'characterDataOldValue': true}, Isolate.$isolateProperties.CTC58);
$.CTC60 = 'structured clone of ArrayBufferView';
$.CTC9 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ArrayBufferView');
$.CTC29 = new Isolate.$isolateProperties.ConstantMap(0, {}, Isolate.$isolateProperties.CTC1);
$.CTC61 = 'flagged';
$.CTC36 = new Isolate.$isolateProperties.SquareState('flagged');
$.CTC15 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC62 = 'revealed';
$.CTC35 = new Isolate.$isolateProperties.SquareState('revealed');
$.CTC63 = -472;
$.CTC64 = -348;
$.CTC45 = new Isolate.$isolateProperties.Vector(-472, -348);
$.CTC65 = 'mine';
$.CTC41 = new Isolate.$isolateProperties.SquareState('mine');
$.CTC66 = 'Cannot add to immutable List.';
$.CTC2 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot add to immutable List.');
$.CTC67 = '[-[\\]{}()*+?.,\\\\^$|#\\s]';
$.CTC68 = false;
$.CTC14 = new Isolate.$isolateProperties.JSSyntaxRegExp('[-[\\]{}()*+?.,\\\\^$|#\\s]', false, false);
$.CTC20 = new Isolate.$isolateProperties.EventArgs();
$.CTC69 = 'started';
$.CTC39 = new Isolate.$isolateProperties.GameState('started');
$.CTC70 = 2048;
$.CTC71 = 1536;
$.CTC27 = new Isolate.$isolateProperties.Size(2048, 1536);
$.CTC72 = 0;
$.CTC51 = new Isolate.$isolateProperties.Coordinate(0, 0);
$.CTC73 = 352;
$.CTC74 = 96;
$.CTC28 = new Isolate.$isolateProperties.Vector(352, 96);
$.CTC75 = 100;
$.CTC30 = new Isolate.$isolateProperties.Size(100, 100);
$.CTC76 = 32;
$.CTC26 = new Isolate.$isolateProperties.Coordinate(32, 32);
$.CTC77 = 'offsetX is only supported on elements';
$.CTC19 = new Isolate.$isolateProperties.UnsupportedOperationException('offsetX is only supported on elements');
$.CTC78 = 'The input sequence is empty.';
$.CTC48 = new Isolate.$isolateProperties.InvalidOperationException('The input sequence is empty.');
$.CTC79 = -88;
$.CTC43 = new Isolate.$isolateProperties.Vector(-88, -88);
$.CTC80 = 'safe';
$.CTC44 = new Isolate.$isolateProperties.SquareState('safe');
$.CTC18 = new Isolate.$isolateProperties._UndefinedValue();
$.CTC24 = new Isolate.$isolateProperties.IllegalAccessException();
$.CTC81 = 'structured clone of File';
$.CTC5 = new Isolate.$isolateProperties.NotImplementedException('structured clone of File');
$.CTC82 = 'game_board_center';
$.CTC83 = 'number_one';
$.CTC84 = 'number_two';
$.CTC85 = 'number_three';
$.CTC86 = 'number_four';
$.CTC87 = 'number_five';
$.CTC88 = 'number_six';
$.CTC89 = 'number_seven';
$.CTC90 = 'number_eight';
$.CTC46 = Isolate.makeConstantList(['game_board_center', 'number_one', 'number_two', 'number_three', 'number_four', 'number_five', 'number_six', 'number_seven', 'number_eight']);
$.CTC91 = 'structured clone of ImageData';
$.CTC7 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ImageData');
$.CTC11 = new Isolate.$isolateProperties.NoMoreElementsException();
$.CTC92 = 'reset';
$.CTC31 = new Isolate.$isolateProperties.GameState('reset');
$.CTC16 = new Isolate.$isolateProperties.EmptyQueueException();
$.CTC93 = null;
$.CTC0 = new Isolate.$isolateProperties.NullPointerException(null, Isolate.$isolateProperties.CTC1);
$.CTC94 = 'Cannot removeLast on immutable List.';
$.CTC12 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot removeLast on immutable List.');
$.CTC95 = 'The input sequence contains more than one element.';
$.CTC49 = new Isolate.$isolateProperties.InvalidOperationException('The input sequence contains more than one element.');
$.CTC96 = 'balloon_pieces_a.png';
$.CTC97 = 'balloon_pieces_b.png';
$.CTC98 = 'balloon_pieces_c.png';
$.CTC99 = 'balloon_pieces_d.png';
$.CTC47 = Isolate.makeConstantList(['balloon_pieces_a.png', 'balloon_pieces_b.png', 'balloon_pieces_c.png', 'balloon_pieces_d.png']);
$.CTC100 = 'won';
$.CTC37 = new Isolate.$isolateProperties.GameState('won');
$.CTC101 = '^#[_a-zA-Z]\\w*$';
$.CTC13 = new Isolate.$isolateProperties.JSSyntaxRegExp('^#[_a-zA-Z]\\w*$', false, false);
$.CTC102 = 'structured clone of ArrayBuffer';
$.CTC8 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ArrayBuffer');
$.CTC103 = 'Cannot sort immutable List.';
$.CTC42 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot sort immutable List.');
$.CTC104 = 'lost';
$.CTC38 = new Isolate.$isolateProperties.GameState('lost');
$.CTC105 = 'structured clone of Date';
$.CTC3 = new Isolate.$isolateProperties.NotImplementedException('structured clone of Date');
$.CTC50 = new Isolate.$isolateProperties.Object();
$.CTC106 = 'IDBKey containing Date';
$.CTC17 = new Isolate.$isolateProperties.NotImplementedException('IDBKey containing Date');
$.CTC107 = new Isolate.$isolateProperties._SimpleClientRect(0, 0, 0, 0);
$.CTC25 = new Isolate.$isolateProperties.EmptyElementRect(Isolate.$isolateProperties.CTC107, Isolate.$isolateProperties.CTC107, Isolate.$isolateProperties.CTC107, Isolate.$isolateProperties.CTC107, Isolate.$isolateProperties.CTC1);
$.CTC108 = 'Incorrect number or type of arguments';
$.CTC22 = new Isolate.$isolateProperties.ExceptionImplementation('Incorrect number or type of arguments');
$.CTC109 = 'Cannot insertRange on immutable List.';
$.CTC32 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot insertRange on immutable List.');
$.CTC110 = 'Pop0';
$.CTC111 = 'Pop1';
$.CTC112 = 'Pop2';
$.CTC113 = 'Pop3';
$.CTC114 = 'Pop4';
$.CTC115 = 'Pop5';
$.CTC116 = 'Pop6';
$.CTC117 = 'Pop7';
$.CTC118 = 'Pop8';
$.CTC119 = 'Bomb1';
$.CTC120 = 'Bomb2';
$.CTC121 = 'Bomb3';
$.CTC122 = 'Bomb4';
$.CTC123 = 'Bomb5';
$.CTC124 = 'DartThrow3';
$.CTC125 = 'Flag2';
$.CTC126 = 'Unflag2';
$.CTC127 = 'Click1';
$.CTC = Isolate.makeConstantList(['Pop0', 'Pop1', 'Pop2', 'Pop3', 'Pop4', 'Pop5', 'Pop6', 'Pop7', 'Pop8', 'Bomb1', 'Bomb2', 'Bomb3', 'Bomb4', 'Bomb5', 'DartThrow3', 'Flag2', 'Unflag2', 'Click1']);
$.CTC128 = 'structured clone of Blob';
$.CTC6 = new Isolate.$isolateProperties.NotImplementedException('structured clone of Blob');
$.CTC129 = 'Cannot removeRange on immutable List.';
$.CTC40 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot removeRange on immutable List.');
$.CTC130 = 'structured clone of RegExp';
$.CTC4 = new Isolate.$isolateProperties.NotImplementedException('structured clone of RegExp');
$.CTC33 = new Isolate.$isolateProperties._Random();
$.CTC131 = 'hidden';
$.CTC34 = new Isolate.$isolateProperties.SquareState('hidden');
$.CTC132 = 'structured clone of other type';
$.CTC10 = new Isolate.$isolateProperties.NotImplementedException('structured clone of other type');
$.CTC133 = 'Mutation operations are not supported';
$.CTC21 = new Isolate.$isolateProperties.UnsupportedOperationException('Mutation operations are not supported');
$.Property_Undefined = Isolate.$isolateProperties.CTC18;
$.Duration_HOURS_PER_DAY = 24;
$.HashMapImplementation__DELETED_KEY = Isolate.$isolateProperties.CTC15;
$.DateImplementation__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$.ResourceLoader_StateUnloaded = 'unloaded';
$.SquareElement__balloonBits = Isolate.$isolateProperties.CTC47;
$.GameElement__edgeOffset = 32;
$.SquareState_flagged = Isolate.$isolateProperties.CTC36;
$.Duration_MINUTES_PER_HOUR = 60;
$._botHelperRandom = null;
$.GlobalId__globalId = 0;
$._imageLoader = null;
$.GameElement__boardOffset = Isolate.$isolateProperties.CTC28;
$.SquareElement__size = 80;
$.ResourceLoader_StateLoaded = 'loaded';
$._ReceivePortImpl__nextFreeId = 1;
$._audioLoader = null;
$.GameState_started = Isolate.$isolateProperties.CTC39;
$.SquareState_safe = Isolate.$isolateProperties.CTC44;
$._getTypeNameOf = null;
$.GameElement__dartAnimationOffset = Isolate.$isolateProperties.CTC45;
$.GameElement__popExplodeAnimationOffset = Isolate.$isolateProperties.CTC43;
$.GameElement__popAnimationHitFrame = 12;
$.Duration_MILLISECONDS_PER_DAY = 86400000;
$.SquareState_mine = Isolate.$isolateProperties.CTC41;
$.ScoreElement__minesLeftStr = 'MINES LEFT:';
$._pendingMeasurementFrameCallbacks = null;
$.PI = 3.141592653589793;
$.ResourceLoader__defaultSize = 2000;
$.DualPivotQuicksort__INSERTION_SORT_THRESHOLD = 32;
$.Primitives_hashCodeSeed = 0;
$._audioContext = null;
$._opaqueTextureName = 'dart_opaque_01.jpg';
$.GameState_won = Isolate.$isolateProperties.CTC37;
$.SquareState_hidden = Isolate.$isolateProperties.CTC34;
$._audioNames = Isolate.$isolateProperties.CTC;
$.HashMapImplementation__INITIAL_CAPACITY = 8;
$.Duration_SECONDS_PER_MINUTE = 60;
$._pendingRequests = null;
$._loadingBar = null;
$._measurementScheduler = null;
$.GameElement__backgroundSize = Isolate.$isolateProperties.CTC27;
$._buffers = null;
$._transparentTextureName = 'dart_transparent_01.png';
$._cachedBrowserPrefix = null;
$._TimerFactory__factory = null;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.Duration_MILLISECONDS_PER_MINUTE = 60000;
$.GameState_lost = Isolate.$isolateProperties.CTC38;
$.SquareState_revealed = Isolate.$isolateProperties.CTC35;
$.GameState_reset = Isolate.$isolateProperties.CTC31;
$.SquareElement__numberMap = Isolate.$isolateProperties.CTC46;
$.GameElement__backgroundHoleSize = 1344;
$.ScoreElement__valueOffset = 15;
$._loadingBarPxWidth = 398;
$.Duration_MILLISECONDS_PER_SECOND = 1000;
$.Duration_MILLISECONDS_PER_HOUR = 3600000;
$.GameElement__backgroundEdgeOffset = 256;
$.ResourceLoader_StateLoading = 'loading';
Isolate.$lazy($, 'isMouseDirectlyOverProperty', 'Mouse_isMouseDirectlyOverProperty', 'get$Mouse_isMouseDirectlyOverProperty', function() {
  return $.Property$('IsMouseDirectlyOver', false);
});
Isolate.$lazy($, 'isMouseOverProperty', 'Mouse_isMouseOverProperty', 'get$Mouse_isMouseOverProperty', function() {
  return $.Property$('IsMouseOver', false);
});
Isolate.$lazy($, '_containerTransformProperty', 'Panel__containerTransformProperty', 'get$Panel__containerTransformProperty', function() {
  return $.Property$('panelTransform', null);
});
Isolate.$lazy($, '_mouseMoveEvent', 'ClickManager__mouseMoveEvent', 'get$ClickManager__mouseMoveEvent', function() {
  return $.AttachedEvent$('mouseMove');
});
Isolate.$lazy($, '_isClickableProperty', 'ClickManager__isClickableProperty', 'get$ClickManager__isClickableProperty', function() {
  return $.Property$('isClickable', false);
});
Isolate.$lazy($, '_stageMouseCacheProperty', 'Mouse__stageMouseCacheProperty', 'get$Mouse__stageMouseCacheProperty', function() {
  return $.Property$('_stageMouseCacheProperty', null);
});
Isolate.$lazy($, '_clickEvent', 'ClickManager__clickEvent', 'get$ClickManager__clickEvent', function() {
  return $.AttachedEvent$('clickEvent');
});
Isolate.$lazy($, '_mouseOutEvent', 'ClickManager__mouseOutEvent', 'get$ClickManager__mouseOutEvent', function() {
  return $.AttachedEvent$('mouseOut');
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, fields, methods) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], methods);
  }
  for (var method in methods) {
    $.dynamicFunction(method)[cls] = methods[method];
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 is$_FileListImpl: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$_ImageDataImpl: function() { return false; },
 is$_ArrayBufferViewImpl: function() { return false; },
 is$IDBKeyRange: function() { return false; },
 is$_FileImpl: function() { return false; },
 is$Blob: function() { return false; },
 is$File: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$_BlobImpl: function() { return false; },
 is$Element: function() { return false; },
 is$ImageData: function() { return false; },
 is$_ArrayBufferImpl: function() { return false; },
 hashCode$0: function() { return $.hashCodeForNativeObject(this); },
 is$Map: function() { return false; },
 is$List: function() { return false; },
 is$Collection: function() { return false; }
});

$.$defineNativeClass('AbstractWorker', [], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._AbstractWorkerEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLAnchorElement', ["name?"], {
 toString$0: function() {
  return this.toString();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebKitAnimation', ["duration?", "name?"], {
});

$.$defineNativeClass('HTMLAppletElement', ["height=", "name?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ArrayBuffer', [], {
 is$_ArrayBufferImpl: function() { return true; },
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', [], {
 is$_ArrayBufferViewImpl: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', ["name?", "value="], {
});

$.$defineNativeClass('AudioBuffer', ["duration?", "length?"], {
});

$.$defineNativeClass('AudioBufferSourceNode', ["buffer!"], {
 start$3: function(when, grainOffset, grainDuration) {
  if (!!this.start)
    this.start(when, grainOffset, grainDuration);
  else
    this.noteOn(when, grainOffset, grainDuration);
},
 start$1: function(when) {
  return this.start$3(when,null,null)
}
});

$.$defineNativeClass('AudioContext', ["destination?"], {
 get$on: function() {
  return $._AudioContextEventsImpl$(this);
},
 createBufferSource$0: function() {
  return this.createBufferSource();
},
 decodeAudioData$3: function(audioData, successCallback, errorCallback) {
  return this.decodeAudioData(audioData,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
}
});

$.$defineNativeClass('HTMLAudioElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('AudioNode', ["context?"], {
 connect$3: function(destination, output, input) {
  return this.connect(destination,output,input);
},
 connect$2: function(destination,output) {
  return this.connect(destination,output);
}
});

$.$defineNativeClass('AudioParam', ["name?", "value="], {
});

$.$defineNativeClass('HTMLBRElement', [], {
 clear$0: function() { return this.clear.call$0(); },
 clear$1: function(arg0) { return this.clear.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', ["size="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('BatteryManager', [], {
 get$on: function() {
  return $._BatteryManagerEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('BeforeLoadEvent', ["url?"], {
});

$.$defineNativeClass('Blob', ["size?"], {
 is$_BlobImpl: function() { return true; },
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', [], {
 get$on: function() {
  return $._BodyElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', ["name?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('CSSFontFaceRule', ["style?"], {
});

$.$defineNativeClass('WebKitCSSKeyframeRule', ["style?"], {
});

$.$defineNativeClass('WebKitCSSKeyframesRule', ["name?"], {
});

$.$defineNativeClass('WebKitCSSMatrix', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSPageRule', ["style?"], {
});

$.$defineNativeClass('CSSRuleList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('CSSStyleDeclaration', ["length?"], {
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : '';
},
 setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    // Bug #2772, IE9 requires a poke to actually apply the value.
    if (this.setAttribute) {
      this.setAttribute(propertyName, value);
    }
  
},
 get$clear: function() {
  return this.getPropertyValue$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); },
 clear$1: function(arg0) { return this.get$clear().call$1(arg0); },
 get$clip: function() {
  return this.getPropertyValue$1('clip');
},
 clip$0: function() { return this.get$clip().call$0(); },
 set$cursor: function(value) {
  this.setProperty$3('cursor', value, '');
},
 set$display: function(value) {
  this.setProperty$3('display', value, '');
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'filter');
},
 filter$1: function(arg0) { return this.get$filter().call$1(arg0); },
 set$font: function(value) {
  this.setProperty$3('font', value, '');
},
 get$height: function() {
  return this.getPropertyValue$1('height');
},
 set$height: function(value) {
  this.setProperty$3('height', value, '');
},
 get$left: function() {
  return this.getPropertyValue$1('left');
},
 get$resize: function() {
  return this.getPropertyValue$1('resize');
},
 get$size: function() {
  return this.getPropertyValue$1('size');
},
 set$size: function(value) {
  this.setProperty$3('size', value, '');
},
 set$src: function(value) {
  this.setProperty$3('src', value, '');
},
 set$textAlign: function(value) {
  this.setProperty$3('text-align', value, '');
},
 get$top: function() {
  return this.getPropertyValue$1('top');
},
 get$transform: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'transform');
},
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.get$transform().call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 get$width: function() {
  return this.getPropertyValue$1('width');
},
 set$width: function(value) {
  this.setProperty$3('width', value, '');
}
});

$.$defineNativeClass('CSSStyleRule', ["style?"], {
});

$.$defineNativeClass('WebKitCSSTransformValue', [], {
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('CSSValueList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLCanvasElement', ["height=", "width="], {
 getContext$1: function(contextId) {
  return this.getContext(contextId);
},
 get$context2d: function() {
  return this.getContext$1('2d');
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('CanvasRenderingContext2D', ["fillStyle!", "font!", "globalAlpha!", "textAlign!", "textBaseline!"], {
 beginPath$0: function() {
  return this.beginPath();
},
 bezierCurveTo$6: function(cp1x, cp1y, cp2x, cp2y, x, y) {
  return this.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);
},
 clearRect$4: function(x, y, width, height) {
  return this.clearRect(x,y,width,height);
},
 clip$0: function() {
  return this.clip();
},
 closePath$0: function() {
  return this.closePath();
},
 drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
},
 drawImage$3: function(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y);
},
 fill$0: function() {
  return this.fill();
},
 fillRect$4: function(x, y, width, height) {
  return this.fillRect(x,y,width,height);
},
 fillText$4: function(text, x, y, maxWidth) {
  return this.fillText(text,x,y,maxWidth);
},
 fillText$3: function(text,x,y) {
  return this.fillText(text,x,y);
},
 measureText$1: function(text) {
  return this.measureText(text);
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 rect$4: function(x, y, width, height) {
  return this.rect(x,y,width,height);
},
 restore$0: function() {
  return this.restore();
},
 save$0: function() {
  return this.save();
},
 scale$2: function(sx, sy) {
  return this.scale(sx,sy);
},
 transform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.transform(m11,m12,m21,m22,dx,dy);
},
 translate$2: function(tx, ty) {
  return this.translate(tx,ty);
}
});

$.$defineNativeClass('CharacterData', ["length?"], {
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', ["height?", "left?", "top?", "width?"], {
});

$.$defineNativeClass('ClientRectList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

_ConsoleImpl = (typeof console == 'undefined' ? {} : console);
_ConsoleImpl.error$1 = function(arg) {
  return this.error(arg);
};
_ConsoleImpl.get$error = function() { return new $.BoundClosure(this, 'error$1'); };
$.$defineNativeClass('HTMLContentElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ConvolverNode', ["buffer!"], {
});

$.$defineNativeClass('HTMLDListElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DOMApplicationCache', ["status?"], {
 get$on: function() {
  return $._DOMApplicationCacheEventsImpl$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); },
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 update$0: function() {
  return this.update();
}
});

$.$defineNativeClass('DOMError', ["name?"], {
});

$.$defineNativeClass('DOMException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMFileSystem', ["name?"], {
});

$.$defineNativeClass('DOMFileSystemSync', ["name?"], {
});

$.$defineNativeClass('MimeTypeArray', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('PluginArray', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Plugin', ["length?", "name?"], {
});

$.$defineNativeClass('Selection', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMSettableTokenList', ["value="], {
});

$.$defineNativeClass('DOMStringList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 contains$1: function(string) {
  return this.contains(string);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('DOMTokenList', ["length?"], {
 add$1: function(token) {
  return this.add(token);
},
 contains$1: function(token) {
  return this.contains(token);
},
 remove$1: function(token) {
  return this.remove(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLDataListElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DataTransferItemList', ["length?"], {
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DataView', [], {
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('DedicatedWorkerContext', [], {
 get$on: function() {
  return $._DedicatedWorkerContextEventsImpl$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('HTMLDetailsElement', [], {
 open$2: function(arg0, arg1) { return this.open.call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.open.call$3(arg0, arg1, arg2); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDirectoryElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDivElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DocumentFragment', [], {
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$rect: function() {
  return $._createMeasurementFuture(new $._DocumentFragmentImpl_rect_anon(), $.Completer_Completer());
},
 rect$4: function(arg0, arg1, arg2, arg3) { return this.get$rect().call$4(arg0, arg1, arg2, arg3); },
 get$hidden: function() {
  return false;
},
 get$translate: function() {
  return false;
},
 translate$2: function(arg0, arg1) { return this.get$translate().call$2(arg0, arg1); },
 get$id: function() {
  return '';
},
 get$parent: function() {
  return;
},
 get$attributes: function() {
  return $.CTC29;
},
 get$style: function() {
  return $.Element_Element$tag('div').get$style();
},
 set$hidden: function(value) {
  throw $.$$throw($.UnsupportedOperationException$('Hidden can\'t be set for document fragments.'));
},
 get$on: function() {
  return $._ElementEventsImpl$(this);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', [], {
 get$on: function() {
  return $._DocumentEventsImpl$(this);
},
 $dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.CTC13.hasMatch$1(selectors) === true)
    return this.$dom_getElementById$1($.substring$1(selectors, 1));
  return this.$dom_querySelector$1(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('DocumentType', ["name?"], {
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('Element', ["hidden=", "id?", "clientHeight?", "clientLeft?", "clientTop?", "clientWidth?", "offsetHeight?", "offsetLeft?", "offsetTop?", "offsetWidth?", "scrollHeight?", "scrollLeft?", "scrollTop?", "scrollWidth?", "style?"], {
 get$attributes: function() {
  return $._ElementAttributeMap$(this);
},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$rect: function() {
  return $._createMeasurementFuture(new $._ElementImpl_rect_anon(this), $.Completer_Completer());
},
 rect$4: function(arg0, arg1, arg2, arg3) { return this.get$rect().call$4(arg0, arg1, arg2, arg3); },
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._ElementEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 translate$2: function(arg0, arg1) { return this.translate.call$2(arg0, arg1); },
 $dom_getAttribute$1: function(name) {
  return this.getAttribute(name);
},
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 getClientRects$0: function() {
  return this.getClientRects();
},
 $dom_hasAttribute$1: function(name) {
  return this.hasAttribute(name);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $dom_removeAttribute$1: function(name) {
  return this.removeAttribute(name);
},
 $dom_setAttribute$2: function(name, value) {
  return this.setAttribute(name,value);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', ["height=", "name?", "src!", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('EntryArray', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('EntryArraySync', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Entry', ["name?"], {
 moveTo$4: function(parent, name, successCallback, errorCallback) {
  return this.moveTo(parent,name,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 moveTo$2: function(parent$,name$) {
  return this.moveTo(parent$,name$);
},
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
}
});

$.$defineNativeClass('EntrySync', ["name?"], {
 moveTo$2: function(parent, name) {
  return this.moveTo(parent,name);
},
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ErrorEvent', ["message?"], {
});

$.$defineNativeClass('EventException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Event', [], {
 get$currentTarget: function() {
  return $._convertNativeToDart_EventTarget(this.get$_currentTarget());
},
 get$_currentTarget: function() {
return this.currentTarget;
},
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.get$_target());
},
 get$_target: function() {
return this.target;
},
 preventDefault$0: function() {
  return this.preventDefault();
}
});

$.$defineNativeClass('EventSource', ["url?"], {
 get$on: function() {
  return $._EventSourceEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('EventTarget', [], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._EventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('HTMLFieldSetElement', ["name?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('FileException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('File', ["name?"], {
 is$_FileImpl: function() { return true; },
 is$File: function() { return true; },
 is$Blob: function() { return true; }
});

$.$defineNativeClass('FileList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$_FileListImpl: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('FileReader', ["error?"], {
 get$on: function() {
  return $._FileReaderEventsImpl$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); },
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriter', ["error?", "length?"], {
 get$on: function() {
  return $._FileWriterEventsImpl$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); },
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriterSync', ["length?"], {
});

$.$defineNativeClass('Float32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Float64Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', ["size="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFormElement', ["length?", "name?"], {
 reset$0: function() {
  return this.reset();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', ["height?", "name?", "src!", "width?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', [], {
 get$on: function() {
  return $._FrameSetElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Gamepad', ["id?"], {
});

$.$defineNativeClass('GamepadList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLHRElement', ["size=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAllCollection', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', [], {
 get$length: function() {
return this.length;
},
 set$length: function(value) {
this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLHeadElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHtmlElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('XMLHttpRequestException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequest', ["response?", "responseType!", "status?"], {
 get$on: function() {
  return $._HttpRequestEventsImpl$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); },
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 open$5: function(method, url, async, user, password) {
  return this.open(method,url,async,user,password);
},
 open$2: function(method,url) {
  return this.open(method,url);
},
 open$3: function(method,url,async) {
  return this.open(method,url,async);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
},
 send$0: function() {
  return this.send();
}
});

$.$defineNativeClass('XMLHttpRequestProgressEvent', ["totalSize?"], {
});

$.$defineNativeClass('XMLHttpRequestUpload', [], {
 get$on: function() {
  return $._HttpRequestUploadEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBCursor', [], {
 get$key: function() {
  return $._convertNativeToDart_IDBKey(this.get$_key());
},
 get$_key: function() {
return this.key;
}
});

$.$defineNativeClass('IDBCursorWithValue', [], {
 get$value: function() {
  return $._convertNativeToDart_IDBAny(this.get$_lib_value());
},
 get$_lib_value: function() {
return this.value;
}
});

$.$defineNativeClass('IDBDatabaseException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBDatabase', ["name?"], {
 get$on: function() {
  return $._IDBDatabaseEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBFactory', [], {
 open$2: function(name, version) {
  return this.open(name,version);
}
});

$.$defineNativeClass('IDBIndex', ["name?"], {
 get$1: function(key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  t1 = !t1;
  if (typeof key === 'object' && key !== null && key.is$IDBKeyRange() || key == null)
    return this._get_1$1(key);
  if (t1)
    return this._get_2$1(key);
  throw $.$$throw($.CTC22);
},
 _get_1$1: function(key) {
  return this.get(key);
},
 _get_2$1: function(key) {
  return this.get(key);
}
});

$.$defineNativeClass('IDBKeyRange', [], {
 is$IDBKeyRange: function() { return true; }
});

$.$defineNativeClass('IDBObjectStore', ["name?"], {
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($._convertDartToNative_SerializedScriptValue(value), key);
  return this._add_2$1($._convertDartToNative_SerializedScriptValue(value));
},
 add$1: function(value) {
  return this.add$2(value,$)
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('IDBOpenDBRequest', [], {
 get$on: function() {
  return $._IDBOpenDBRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBRequest', ["error?"], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._IDBRequestEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('IDBTransaction', ["error?"], {
 get$on: function() {
  return $._IDBTransactionEventsImpl$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); },
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBVersionChangeRequest', [], {
 get$on: function() {
  return $._IDBVersionChangeRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLIFrameElement', ["height=", "name?", "src!", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ImageData', ["height?", "width?"], {
 is$_ImageDataImpl: function() { return true; },
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', ["height=", "name?", "src!", "width=", "x?", "y?"], {
 complete$1: function(arg0) { return this.complete.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', ["height=", "name?", "size=", "src!", "value=", "width="], {
 get$on: function() {
  return $._InputElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Int32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Int8Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('JavaScriptAudioNode', [], {
 get$on: function() {
  return $._JavaScriptAudioNodeEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('KeyboardEvent', ["shiftKey?"], {
});

$.$defineNativeClass('HTMLKeygenElement', ["name?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', ["value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('History', ["length?", "state?"], {
});

$.$defineNativeClass('Location', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('LocalMediaStream', [], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('DOMWindow', ["clientInformation?", "innerHeight?", "innerWidth?", "localStorage?", "name?", "navigator?", "status?"], {
 _open2$2: function(url, name) {
return this.open(url, name);
},
 _open3$3: function(url, name, options) {
return this.open(url, name, options);
},
 open$3: function(url, name$, options) {
  if (options == null)
    return $._DOMWindowCrossFrameImpl__createSafe(this._open2$2(url, name$));
  else
    return $._DOMWindowCrossFrameImpl__createSafe(this._open3$3(url, name$, options));
},
 open$2: function(url,name$) {
  return this.open$3(url,name$,null)
},
 requestAnimationFrame$1: function(callback) {
  this._ensureRequestAnimationFrame$0();
  return this._requestAnimationFrame$1(callback);
},
 _requestAnimationFrame$1: function(callback) {
  return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
},
 _ensureRequestAnimationFrame$0: function() {
   if (this.requestAnimationFrame && this.cancelAnimationFrame) return;
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !this.requestAnimationFrame; ++i) {
     this.requestAnimationFrame = this[vendors[i] + 'RequestAnimationFrame'];
     this.cancelAnimationFrame =
         this[vendors[i]+'CancelAnimationFrame'] ||
         this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if (this.requestAnimationFrame && this.cancelAnimationFrame) return;
   this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   this.cancelAnimationFrame = function(id) { clearTimeout(id); }

},
 createObjectUrl$1: function(object) {
    return (window.URL || window.webkitURL).createObjectURL(object)
  
},
 revokeObjectUrl$1: function(objectUrl) {
    (window.URL || window.webkitURL).revokeObjectURL(objectUrl)
  
},
 get$on: function() {
  return $._LocalWindowEventsImpl$(this);
},
 get$_parent: function() {
return this.parent;
},
 get$top: function() {
  return $._convertNativeToDart_Window(this.get$_top());
},
 get$_top: function() {
return this.top;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 clearInterval$1: function(handle) {
  return this.clearInterval(handle);
},
 close$0: function() {
  return this.close();
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1 = $ === message;
  if (t1)
    message = null;
  t1 = !t1;
  var t2 = $ === messagePorts;
  if (t2)
    messagePorts = null;
  if (t1 && t2) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), targetOrigin);
    return;
  }
  if (t1)
    t1 = typeof messagePorts === 'object' && messagePorts !== null && (messagePorts.constructor === Array || messagePorts.is$List()) || messagePorts == null;
  else
    t1 = false;
  if (t1) {
    this._postMessage_2$3($._convertDartToNative_SerializedScriptValue(message), targetOrigin, messagePorts);
    return;
  }
  throw $.$$throw($.CTC22);
},
 postMessage$2: function(message,targetOrigin) {
  return this.postMessage$3(message,targetOrigin,$)
},
 _postMessage_1$2: function(message, targetOrigin) {
  return this.postMessage(message,targetOrigin);
},
 _postMessage_2$3: function(message, targetOrigin, messagePorts) {
  return this.postMessage(message,targetOrigin,messagePorts);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('HTMLMapElement', ["name?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', ["height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaController', ["duration?"], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', ["duration?", "error?", "src!"], {
 get$on: function() {
  return $._MediaElementEventsImpl$(this);
},
 load$0: function() {
  return this.load();
},
 get$load: function() { return new $.BoundClosure0(this, 'load$0'); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaKeyEvent', ["message?"], {
});

$.$defineNativeClass('MediaList', ["length?"], {
});

$.$defineNativeClass('MediaSource', ["duration?"], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStream', [], {
 get$on: function() {
  return $._MediaStreamEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('MediaStreamList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('MediaStreamTrack', [], {
 get$on: function() {
  return $._MediaStreamTrackEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrackList', ["length?"], {
 get$on: function() {
  return $._MediaStreamTrackListEventsImpl$(this);
},
 add$1: function(track) {
  return this.add(track);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 remove$1: function(track) {
  return this.remove(track);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMenuElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MessageEvent', ["ports?"], {
});

$.$defineNativeClass('MessagePort', [], {
 get$on: function() {
  return $._MessagePortEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMetaElement', ["name?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Metadata', ["size?"], {
});

$.$defineNativeClass('HTMLMeterElement', ["value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MouseEvent', ["shiftKey?", "x?", "y?"], {
 get$offsetX: function() {
  if (!!this.offsetX)
    return this.get$_offsetX();
  else {
    var target = this.get$target();
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.CTC19);
    return $.sub(this.clientX, this.get$target().getBoundingClientRect$0().get$left());
  }
},
 get$offsetY: function() {
  if (!!this.offsetY)
    return this.get$_offsetY();
  else {
    var target = this.get$target();
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.CTC19);
    return $.sub(this.clientY, this.get$target().getBoundingClientRect$0().get$top());
  }
},
 get$_offsetX: function() {
return this.offsetX
},
 get$_offsetY: function() {
return this.offsetY
}
});

$.$defineNativeClass('MutationObserver', [], {
 observe$9: function(target, options, childList, attributes, characterData, subtree, attributeOldValue, characterDataOldValue, attributeFilter) {
  var parsedOptions = {};
  if (!(options == null))
    $.forEach(options, new $._MutationObserverImpl_observe_anon(parsedOptions));
  var t1 = new $._MutationObserverImpl_observe_override(parsedOptions);
  t1.call$2('childList', childList);
  t1.call$2('attributes', attributes);
  t1.call$2('characterData', characterData);
  t1.call$2('subtree', subtree);
  t1.call$2('attributeOldValue', attributeOldValue);
  t1.call$2('characterDataOldValue', characterDataOldValue);
  if (!(attributeFilter == null))
    t1.call$2('attributeFilter', attributeFilter);
  this._call$2(target, parsedOptions);
},
 observe$3$attributes: function(target,options,attributes) {
  return this.observe$9(target,options,null,attributes,null,null,null,null,null)
},
 _call$2: function(target, options) {
  return this.observe(target,options);
}
});

$.$defineNativeClass('NamedNodeMap', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Navigator', ["userAgent?"], {
});

$.$defineNativeClass('Node', [], {
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
  {
  if (!(this.get$parent() == null))
    this.get$parent().$dom_removeChild$1(this);
}
  } else {
    return Object.prototype.remove$0.call(this);
  }

},
 get$$$dom_attributes: function() {
return this.attributes;
},
 get$parent: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
  {
return this.parentNode;
}
  } else {
    return Object.prototype.get$parent.call(this);
  }

},
 set$text: function(value) {
this.textContent = value;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeIterator', [], {
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('NodeList', ["_parent?", "length?"], {
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    this._parent.$dom_appendChild$1(t2);
  }
},
 removeLast$0: function() {
  var result = this.last$0();
  if (!(result == null))
    this._parent.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._parent.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._parent.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot removeRange on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot insertRange on immutable List.'));
},
 operator$index$1: function(index) {
return this[index];
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Notification', [], {
 get$on: function() {
  return $._NotificationEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLOListElement', [], {
 start$1: function(arg0) { return this.start.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', ["height=", "name?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptGroupElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', ["value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Oscillator', [], {
 start$1: function(when) {
  return this.start(when);
}
});

$.$defineNativeClass('HTMLOutputElement', ["name?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParagraphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', ["name?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('PeerConnection00', [], {
 get$on: function() {
  return $._PeerConnection00EventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebKitPoint', ["x?", "y?"], {
});

$.$defineNativeClass('PopStateEvent', ["state?"], {
});

$.$defineNativeClass('PositionError', ["message?"], {
});

$.$defineNativeClass('HTMLPreElement', ["width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLProgressElement', ["value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ProgressEvent', ["loaded?"], {
});

$.$defineNativeClass('HTMLQuoteElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('RTCPeerConnection', [], {
 get$on: function() {
  return $._RTCPeerConnectionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RadioNodeList', ["value="], {
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('RangeException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Range', [], {
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 getClientRects$0: function() {
  return this.getClientRects();
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Rect', ["left?", "top?"], {
});

$.$defineNativeClass('SQLError', ["message?"], {
});

$.$defineNativeClass('SQLException', ["message?"], {
});

$.$defineNativeClass('SQLResultSetRowList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphDefElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphItemElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAngle', ["value="], {
});

$.$defineNativeClass('SVGAnimateColorElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateMotionElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateTransformElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedLengthList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedNumberList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedTransformList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimationElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGCircleElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGClipPathElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGCursorElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDefsElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDescElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDocument', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGElement', [], {
 get$id: function() {
return this.id;
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGElementInstance', [], {
 get$on: function() {
  return $._SVGElementInstanceEventsImpl$(this);
}
});

$.$defineNativeClass('SVGElementInstanceList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGEllipseElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGFEBlendElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEColorMatrixElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEComponentTransferElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFECompositeElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDisplacementMapElement', ["height?", "width?", "x?", "y?"], {
 scale$2: function(arg0, arg1) { return this.scale.call$2(arg0, arg1); },
 scale$1: function(arg0) { return this.scale.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDistantLightElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDropShadowElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFloodElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncAElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncBElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncGElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncRElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEGaussianBlurElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEImageElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMergeElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMergeNodeElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMorphologyElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEOffsetElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEPointLightElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFESpecularLightingElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFESpotLightElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFETileElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFETurbulenceElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFilterElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceFormatElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceNameElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceSrcElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceUriElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGForeignObjectElement', ["height?", "width?", "x?", "y?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGlyphRefElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGHKernElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGImageElement', ["height?", "width?", "x?", "y?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGLength', ["value="], {
});

$.$defineNativeClass('SVGLengthList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGLineElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGLinearGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMarkerElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMaskElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMatrix', [], {
 scale$1: function(scaleFactor) {
  return this.scale(scaleFactor);
},
 translate$2: function(x, y) {
  return this.translate(x,y);
}
});

$.$defineNativeClass('SVGMetadataElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMissingGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGNumber', ["value="], {
});

$.$defineNativeClass('SVGNumberList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGPathElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPathSegArcAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegArcRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegLinetoAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalAbs', ["x?"], {
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalRel', ["x?"], {
});

$.$defineNativeClass('SVGPathSegLinetoRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegLinetoVerticalAbs', ["y?"], {
});

$.$defineNativeClass('SVGPathSegLinetoVerticalRel', ["y?"], {
});

$.$defineNativeClass('SVGPathSegList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGPathSegMovetoAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegMovetoRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPatternElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPoint', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPointList', [], {
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPolygonElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPolylineElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRadialGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRectElement', ["height?", "width?", "x?", "y?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRect', ["height=", "width=", "x?", "y?"], {
});

$.$defineNativeClass('SVGSVGElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGScriptElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSetElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGStopElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGStringList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGStyleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSwitchElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSymbolElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTRefElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTSpanElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextContentElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextPositioningElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTitleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTransformList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGUseElement', ["height?", "width?", "x?", "y?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGVKernElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGViewElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGViewSpec', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('Screen', ["height?", "width?"], {
});

$.$defineNativeClass('HTMLScriptElement', ["src!"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ScriptProfileNode', ["url?"], {
});

$.$defineNativeClass('HTMLSelectElement', ["length=", "name?", "size=", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLShadowElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SharedWorkerContext', ["name?"], {
 get$on: function() {
  return $._SharedWorkerContextEventsImpl$(this);
}
});

$.$defineNativeClass('SourceBuffer', [], {
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); }
});

$.$defineNativeClass('SourceBufferList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLSourceElement', ["src!"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SpeechGrammar', ["src!"], {
});

$.$defineNativeClass('SpeechGrammarList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SpeechInputResultList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SpeechRecognitionError', ["message?"], {
});

$.$defineNativeClass('SpeechRecognition', [], {
 get$on: function() {
  return $._SpeechRecognitionEventsImpl$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); },
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('SpeechRecognitionResult', ["length?"], {
});

$.$defineNativeClass('SpeechRecognitionResultList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('StorageEvent', ["key?", "url?"], {
});

$.$defineNativeClass('Storage', [], {
 containsKey$1: function(key) {
  return !(this.$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  return this.$dom_setItem$2(key, value);
},
 putIfAbsent$2: function(key, ifAbsent) {
  if (this.containsKey$1(key) !== true)
    this.operator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$dom_clear$0();
},
 forEach$1: function(f) {
  for (var i = 0; true; ++i) {
    var key = this.$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 getKeys$0: function() {
  var keys = [];
  this.forEach$1(new $._StorageImpl_getKeys_anon(keys));
  return keys;
},
 getValues$0: function() {
  var values = [];
  this.forEach$1(new $._StorageImpl_getValues_anon(values));
  return values;
},
 get$length: function() {
  return this.get$$$dom_length();
},
 isEmpty$0: function() {
  return this.$dom_key$1(0) == null;
},
 get$$$dom_length: function() {
return this.length;
},
 $dom_clear$0: function() {
  return this.clear();
},
 $dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $dom_key$1: function(index) {
  return this.key(index);
},
 $dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('HTMLStyleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('StyleSheetList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLTableCaptionElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', ["height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', ["width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', ["frame?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTextAreaElement', ["name?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('TextMetrics', ["width?"], {
});

$.$defineNativeClass('TextTrackCue', ["id?", "size=", "text!"], {
 get$on: function() {
  return $._TextTrackCueEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCueList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TextTrack', [], {
 get$on: function() {
  return $._TextTrackEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackList', ["length?"], {
 get$on: function() {
  return $._TextTrackListEventsImpl$(this);
},
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TimeRanges', ["length?"], {
 start$1: function(index) {
  return this.start(index);
}
});

$.$defineNativeClass('HTMLTitleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('TouchEvent', ["shiftKey?"], {
});

$.$defineNativeClass('Touch', [], {
 get$_target: function() {
return this.target;
}
});

$.$defineNativeClass('TouchList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', ["src!"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('TreeWalker', [], {
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('HTMLUListElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Uint16Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint8Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint8ClampedArray', [], {
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('HTMLUnknownElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLVideoElement', ["height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebGLActiveInfo', ["name?", "size?"], {
});

$.$defineNativeClass('WebGLRenderingContext', [], {
 clear$1: function(mask) {
  return this.clear(mask);
}
});

$.$defineNativeClass('WebKitAnimationList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC42);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC40);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC32);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('WebKitCSSFilterValue', [], {
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('WebKitNamedFlow', ["name?"], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebSocket', ["url?"], {
 get$on: function() {
  return $._WebSocketEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$2: function(code, reason) {
  return this.close(code,reason);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WorkerContext', ["navigator?"], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._WorkerContextEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 clearInterval$1: function(handle) {
  return this.clearInterval(handle);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('Worker', [], {
 get$on: function() {
  return $._WorkerEventsImpl$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('WorkerLocation', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', ["userAgent?"], {
});

$.$defineNativeClass('XPathException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XSLTProcessor', [], {
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('Worker', [], {
 get$id: function() {
return this.id;
},
 postMessage$1: function(msg) {
return this.postMessage(msg);
}
});

$.$defineNativeClass('DOMWindow', [], {
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 clearInterval$1: function(handle) {
  return this.clearInterval(handle);
}
});

// 365 dynamic classes.
// 419 classes
// 35 !leaf
(function(){
  var v0/*class(_Uint8ArrayImpl)*/ = 'Uint8Array|Uint8ClampedArray|Uint8ClampedArray';
  var v1/*class(_SVGTextPositioningElementImpl)*/ = 'SVGTextPositioningElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement';
  var v2/*class(_SVGTextContentElementImpl)*/ = [v1/*class(_SVGTextPositioningElementImpl)*/,v1/*class(_SVGTextPositioningElementImpl)*/,'SVGTextContentElement|SVGTextPathElement|SVGTextPathElement'].join('|');
  var v3/*class(_SVGGradientElementImpl)*/ = 'SVGGradientElement|SVGRadialGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGLinearGradientElement';
  var v4/*class(_SVGComponentTransferFunctionElementImpl)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement';
  var v5/*class(_SVGAnimationElementImpl)*/ = 'SVGAnimationElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement';
  var v6/*class(_SVGElementImpl)*/ = [v2/*class(_SVGTextContentElementImpl)*/,v3/*class(_SVGGradientElementImpl)*/,v4/*class(_SVGComponentTransferFunctionElementImpl)*/,v5/*class(_SVGAnimationElementImpl)*/,v2/*class(_SVGTextContentElementImpl)*/,v3/*class(_SVGGradientElementImpl)*/,v4/*class(_SVGComponentTransferFunctionElementImpl)*/,v5/*class(_SVGAnimationElementImpl)*/,'SVGElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement'].join('|');
  var v7/*class(_MediaElementImpl)*/ = 'HTMLMediaElement|HTMLVideoElement|HTMLAudioElement|HTMLVideoElement|HTMLAudioElement';
  var v8/*class(_ElementImpl)*/ = [v6/*class(_SVGElementImpl)*/,v7/*class(_MediaElementImpl)*/,v6/*class(_SVGElementImpl)*/,v7/*class(_MediaElementImpl)*/,'Element|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement'].join('|');
  var v9/*class(_DocumentImpl)*/ = 'HTMLDocument|SVGDocument|SVGDocument';
  var v10/*class(_DocumentFragmentImpl)*/ = 'DocumentFragment|ShadowRoot|ShadowRoot';
  var v11/*class(_CharacterDataImpl)*/ = 'CharacterData|Text|CDATASection|CDATASection|Comment|Text|CDATASection|CDATASection|Comment';
  var v12/*class(_MouseEventImpl)*/ = 'MouseEvent|WheelEvent|WheelEvent';
  var v13/*class(_ProgressEventImpl)*/ = 'ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent';
  var v14/*class(_WorkerContextImpl)*/ = 'WorkerContext|SharedWorkerContext|DedicatedWorkerContext|SharedWorkerContext|DedicatedWorkerContext';
  var v15/*class(_NodeImpl)*/ = [v8/*class(_ElementImpl)*/,v9/*class(_DocumentImpl)*/,v10/*class(_DocumentFragmentImpl)*/,v11/*class(_CharacterDataImpl)*/,v8/*class(_ElementImpl)*/,v9/*class(_DocumentImpl)*/,v10/*class(_DocumentFragmentImpl)*/,v11/*class(_CharacterDataImpl)*/,'Node|ProcessingInstruction|Notation|EntityReference|Entity|DocumentType|Attr|ProcessingInstruction|Notation|EntityReference|Entity|DocumentType|Attr'].join('|');
  var v16/*class(_MediaStreamImpl)*/ = 'MediaStream|LocalMediaStream|LocalMediaStream';
  var v17/*class(_IDBRequestImpl)*/ = 'IDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest';
  var v18/*class(_AbstractWorkerImpl)*/ = 'AbstractWorker|Worker|SharedWorker|Worker|SharedWorker';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['SVGTextPositioningElement', v1/*class(_SVGTextPositioningElementImpl)*/],
    ['HTMLMediaElement', v7/*class(_MediaElementImpl)*/],
    ['MediaStream', v16/*class(_MediaStreamImpl)*/],
    ['MouseEvent', v12/*class(_MouseEventImpl)*/],
    ['AbstractWorker', v18/*class(_AbstractWorkerImpl)*/],
    ['Uint8Array', v0/*class(_Uint8ArrayImpl)*/],
    ['ArrayBufferView', [v0/*class(_Uint8ArrayImpl)*/,v0/*class(_Uint8ArrayImpl)*/,'ArrayBufferView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView'].join('|')],
    ['SVGTextContentElement', v2/*class(_SVGTextContentElementImpl)*/],
    ['SVGGradientElement', v3/*class(_SVGGradientElementImpl)*/],
    ['SVGComponentTransferFunctionElement', v4/*class(_SVGComponentTransferFunctionElementImpl)*/],
    ['SVGAnimationElement', v5/*class(_SVGAnimationElementImpl)*/],
    ['SVGElement', v6/*class(_SVGElementImpl)*/],
    ['Element', v8/*class(_ElementImpl)*/],
    ['HTMLDocument', v9/*class(_DocumentImpl)*/],
    ['DocumentFragment', v10/*class(_DocumentFragmentImpl)*/],
    ['CharacterData', v11/*class(_CharacterDataImpl)*/],
    ['Node', v15/*class(_NodeImpl)*/],
    ['NodeList', 'NodeList|RadioNodeList|RadioNodeList'],
    ['AudioNode', 'AudioNode|WaveShaperNode|RealtimeAnalyserNode|JavaScriptAudioNode|DynamicsCompressorNode|DelayNode|ConvolverNode|BiquadFilterNode|AudioSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|AudioPannerNode|AudioGainNode|AudioDestinationNode|AudioChannelSplitter|AudioChannelMerger|WaveShaperNode|RealtimeAnalyserNode|JavaScriptAudioNode|DynamicsCompressorNode|DelayNode|ConvolverNode|BiquadFilterNode|AudioSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|AudioPannerNode|AudioGainNode|AudioDestinationNode|AudioChannelSplitter|AudioChannelMerger'],
    ['AudioParam', 'AudioParam|AudioGain|AudioGain'],
    ['Blob', 'Blob|File|File'],
    ['ProgressEvent', v13/*class(_ProgressEventImpl)*/],
    ['CSSValueList', 'CSSValueList|WebKitCSSFilterValue|WebKitCSSTransformValue|WebKitCSSFilterValue|WebKitCSSTransformValue'],
    ['WorkerContext', v14/*class(_WorkerContextImpl)*/],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList|DOMSettableTokenList'],
    ['Entry', 'Entry|FileEntry|DirectoryEntry|FileEntry|DirectoryEntry'],
    ['EntrySync', 'EntrySync|FileEntrySync|DirectoryEntrySync|FileEntrySync|DirectoryEntrySync'],
    ['Event', [v12/*class(_MouseEventImpl)*/,v12/*class(_MouseEventImpl)*/,v13/*class(_ProgressEventImpl)*/,v12/*class(_MouseEventImpl)*/,v12/*class(_MouseEventImpl)*/,v13/*class(_ProgressEventImpl)*/,'Event|WebGLContextEvent|UIEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent|WebGLContextEvent|UIEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent'].join('|')],
    ['IDBRequest', v17/*class(_IDBRequestImpl)*/],
    ['EventTarget', [v14/*class(_WorkerContextImpl)*/,v15/*class(_NodeImpl)*/,v16/*class(_MediaStreamImpl)*/,v17/*class(_IDBRequestImpl)*/,v18/*class(_AbstractWorkerImpl)*/,v14/*class(_WorkerContextImpl)*/,v15/*class(_NodeImpl)*/,v16/*class(_MediaStreamImpl)*/,v17/*class(_IDBRequestImpl)*/,v18/*class(_AbstractWorkerImpl)*/,'EventTarget|WebSocket|WebKitNamedFlow|TextTrack|TextTrackCue|SpeechRecognition|SVGElementInstance|RTCPeerConnection|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext|WebSocket|WebKitNamedFlow|TextTrack|TextTrackCue|SpeechRecognition|SVGElementInstance|RTCPeerConnection|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext'].join('|')],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection|HTMLOptionsCollection'],
    ['IDBCursor', 'IDBCursor|IDBCursorWithValue|IDBCursorWithValue']];
$.dynamicSetMetadata(table);
})();

var $globalThis = $;
var $globalState;
var $globals;
var $isWorker = false;
var $supportsWorkers = false;
var $thisScriptUrl;
function $static_init(){};

function $initGlobals(context) {
  context.isolateStatics = new Isolate();
}
function $setGlobals(context) {
  $ = context.isolateStatics;
  $globalThis = $;
}
$.main.call$0 = $.main

//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  var getter = new Function("{ return $." + fieldName + ";}");
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=game.dart.js.map