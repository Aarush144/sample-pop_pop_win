// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ListIterator = {"": ["i", "list"],
 "super": "Object",
 get$hasNext: function() {
  return this.i < this.list.length;
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  var value = this.list[this.i];
  this.i = this.i + 1;
  return value;
}
};

$$.JSInvocationMirror = {"": ["memberName>", "_internalName", "_kind", "_liblib0$_arguments", "_namedArgumentNames", "_namedIndices"],
 "super": "Object",
 get$isGetter: function() {
  return $.eq(this._kind, 1);
},
 get$isSetter: function() {
  return $.eq(this._kind, 2);
},
 get$isAccessor: function() {
  return !$.eqB(this._kind, 0);
},
 get$positionalArguments: function() {
  var list, t1, t3, t4, argumentCount, index, t2;
  if (this.get$isGetter() === true)
    return;
  list = [];
  t1 = this._liblib0$_arguments;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.get$positionalArguments$bailout(1, t1, list);
  t3 = t1.length;
  t4 = this._namedArgumentNames;
  t4 = $.getInterceptor(t4).get$length(t4);
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  argumentCount = t3 - t4;
  for (index = 0; index < argumentCount; ++index) {
    t2 = $.getInterceptor(list);
    if (index >= t1.length)
      throw $.ioore(index);
    t2.add$1(list, t1[index]);
  }
  return list;
},
 get$positionalArguments$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      list = env1;
      t1 = env0;
      break;
    case 2:
      argumentCount = env2;
      list = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$isGetter() === true)
        return;
      list = [];
      t1 = this._liblib0$_arguments;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor(t1).get$length(t1);
      t4 = this._namedArgumentNames;
      argumentCount = $.sub(t3, $.getInterceptor(t4).get$length(t4));
    case 2:
      var list, t1, t3, t4, argumentCount, index;
      state0 = 0;
      for (index = 0; $.ltB(index, argumentCount); ++index)
        $.getInterceptor(list).add$1(list, $.index(t1, index));
      return list;
  }
},
 get$namedArguments: function() {
  var map, t2, namedArgumentCount, t4, t6, namedArgumentsStartIndex, t1, i, t3, t5;
  if (this.get$isAccessor() === true)
    return;
  map = $.makeLiteralMap([]);
  if (typeof map !== 'object' || map === null || (map.constructor !== Array || !!map.immutable$list) && !map.is$JavaScriptIndexingBehavior())
    return this.get$namedArguments$bailout(1, map);
  t2 = this._namedArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.get$namedArguments$bailout(2, t2, map);
  namedArgumentCount = t2.length;
  t4 = this._liblib0$_arguments;
  if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
    return this.get$namedArguments$bailout(4, t2, t4, map, namedArgumentCount);
  t6 = t4.length;
  namedArgumentsStartIndex = t6 - namedArgumentCount;
  for (t1 = map.length, i = 0; i < namedArgumentCount; ++i) {
    t3 = t2[i];
    t5 = namedArgumentsStartIndex + i;
    if (t5 < 0 || t5 >= t6)
      throw $.ioore(t5);
    t5 = t4[t5];
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1)
      throw $.ioore(t3);
    map[t3] = t5;
  }
  return map;
},
 get$namedArguments$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      map = env0;
      break;
    case 2:
      map = env1;
      t2 = env0;
      break;
    case 3:
      namedArgumentCount = env2;
      map = env1;
      t2 = env0;
      break;
    case 4:
      namedArgumentCount = env3;
      map = env2;
      t5 = env1;
      t2 = env0;
      break;
    case 5:
      namedArgumentCount = env4;
      map = env3;
      namedArgumentsStartIndex = env2;
      t5 = env1;
      t2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$isAccessor() === true)
        return;
      map = $.makeLiteralMap([]);
    case 1:
      state0 = 0;
      t2 = this._namedArgumentNames;
    case 2:
      state0 = 0;
      namedArgumentCount = $.getInterceptor(t2).get$length(t2);
    case 3:
      state0 = 0;
      t5 = this._liblib0$_arguments;
    case 4:
      state0 = 0;
      namedArgumentsStartIndex = $.sub($.getInterceptor(t5).get$length(t5), namedArgumentCount);
    case 5:
      var map, t2, namedArgumentCount, t5, namedArgumentsStartIndex, i;
      state0 = 0;
      for (i = 0; $.ltB(i, namedArgumentCount); ++i)
        $.indexSet(map, $.index(t2, i), $.index(t5, $.add(namedArgumentsStartIndex, i)));
      return map;
  }
}
};

$$.StackTrace = {"": ["stack"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.stack;
  return !(t1 == null) ? t1 : "";
}
};

$$.Closure = {
 "super": "Object",
 toString$0: function() {
  return "Closure";
},
 is$Function: true
};

$$.Creates = {"": ["types"],
 "super": "Object"
};

$$.Returns = {"": ["types"],
 "super": "Object"
};

$$.CastErrorImplementation = {"": ["actualType", "expectedType"],
 "super": "Object",
 toString$0: function() {
  return "CastError: Casting value of type " + $.S(this.actualType) + " to" + " incompatible type " + $.S(this.expectedType);
}
};

$$.ConstantMap = {"": ["length>", "_jsObject", "_liblib0$_keys"],
 "super": "Object",
 containsKey$1: function(key) {
  if (typeof key !== 'string')
    return this.containsKey$1$bailout(1, key);
  if (key === "__proto__")
    return false;
  return this._jsObject.hasOwnProperty(key);
},
 containsKey$1$bailout: function(state0, key) {
  if ($.eqB(key, "__proto__"))
    return false;
  return this._jsObject.hasOwnProperty(key);
},
 operator$index$1: function(key) {
  if (this.containsKey$1(key) !== true)
    return;
  return this._jsObject[key];
},
 forEach$1: function(f) {
  var t1 = this._liblib0$_keys;
  $.getInterceptor(t1).forEach$1(t1, new $.ConstantMap_forEach_anon(f, this));
},
 get$keys: function() {
  return this._liblib0$_keys;
},
 get$values: function() {
  var result, t1;
  result = [];
  t1 = this._liblib0$_keys;
  $.getInterceptor(t1).forEach$1(t1, new $.ConstantMap_values_anon(this, result));
  return result;
},
 get$isEmpty: function() {
  return $.eq(this.length, 0);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _throwUnmodifiable$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot modify unmodifiable Map"));
},
 oprator$indexSet$2: function(key, val) {
  return this._throwUnmodifiable$0();
},
 putIfAbsent$2: function(key, ifAbsent) {
  return this._throwUnmodifiable$0();
},
 remove$1: function(key) {
  return this._throwUnmodifiable$0();
},
 clear$0: function() {
  return this._throwUnmodifiable$0();
},
 is$Map: function() { return true; }
};

$$.MetaInfo = {"": ["_tag>", "_tags", "_liblib0$_set>"],
 "super": "Object",
 _liblib0$_set$2: function(arg0, arg1) { return this._liblib0$_set.call$2(arg0, arg1); }
};

$$.JSSyntaxRegExp = {"": ["_liblib0$_pattern", "_multiLine", "_ignoreCase"],
 "super": "Object",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = m.index;
  t1 = $.index(m, 0);
  t1 = $.getInterceptor(t1).get$length(t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 get$pattern: function() {
  return this._liblib0$_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$._MatchImplementation = {"": ["pattern>", "str", "start", "end", "_groups"],
 "super": "Object",
 start$1: function(arg0) { return this.start.call$1(arg0); },
 operator$index$1: function(index) {
  return $.index(this._groups, index);
}
};

$$._AllMatchesIterable = {"": ["_re", "_str"],
 "super": "Object",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"": ["_re", "_str", "_liblib0$_next=", "_done"],
 "super": "Object",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  var next = this._liblib0$_next;
  this._liblib0$_next = null;
  return next;
},
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._liblib0$_next == null))
    return true;
  this._liblib0$_next = this._re.firstMatch$1(this._str);
  if (this._liblib0$_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.StringMatch = {"": ["start", "str", "pattern>"],
 "super": "Object",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
},
 start$1: function(arg0) { return this.start.call$1(arg0); }
};

$$._DateImpl = {"": ["millisecondsSinceEpoch>", "isUtc"],
 "super": "Object",
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Date))
    return false;
  return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$lt$1: function(other) {
  return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$le$1: function(other) {
  return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$gt$1: function(other) {
  return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$ge$1: function(other) {
  return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 compareTo$1: function(other) {
  var t1 = this.millisecondsSinceEpoch;
  return $.getInterceptor(t1).compareTo$1(t1, other.get$millisecondsSinceEpoch());
},
 get$hashCode: function() {
  return this.millisecondsSinceEpoch;
},
 toString$0: function() {
  var t1, t2, t3, y, m, d, h, min, sec, ms;
  t1 = new $._DateImpl_toString_fourDigits();
  t2 = new $._DateImpl_toString_threeDigits();
  t3 = new $._DateImpl_toString_twoDigits();
  y = t1.call$1(this.get$year());
  m = t3.call$1(this.get$month());
  d = t3.call$1(this.get$day());
  h = t3.call$1(this.get$hour());
  min = t3.call$1(this.get$minute());
  sec = t3.call$1(this.get$second());
  ms = t2.call$1(this.get$millisecond());
  if (this.isUtc === true)
    return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
  else
    return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
},
 add$1: function(duration) {
  var ms, t2;
  ms = this.millisecondsSinceEpoch;
  if (typeof ms !== 'number')
    return this.add$1$bailout1(1, duration, ms);
  t2 = duration.get$inMilliseconds();
  if (typeof t2 !== 'number')
    return this.add$1$bailout1(2, ms, t2);
  return $.Date_Date$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
},
 add$1$bailout1: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      ms = env1;
      duration = env0;
      break;
    case 2:
      t2 = env1;
      ms = env0;
      break;
  }
  switch (state0) {
    case 0:
      ms = this.millisecondsSinceEpoch;
    case 1:
      state0 = 0;
      t2 = duration.get$inMilliseconds();
    case 2:
      var ms, duration, t2;
      state0 = 0;
      return $.Date_Date$fromMillisecondsSinceEpoch($.add(ms, t2), this.isUtc);
  }
},
 difference$1: function(other) {
  return $.Duration$(0, 0, $.sub(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch()), 0, 0);
},
 get$year: function() {
  return $.Primitives_getYear(this);
},
 get$month: function() {
  return $.Primitives_getMonth(this);
},
 get$day: function() {
  return $.Primitives_getDay(this);
},
 get$hour: function() {
  return $.Primitives_getHours(this);
},
 get$minute: function() {
  return $.Primitives_getMinutes(this);
},
 get$second: function() {
  return $.Primitives_getSeconds(this);
},
 get$millisecond: function() {
  return $.Primitives_getMilliseconds(this);
},
 _DateImpl$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
  var t1 = this.millisecondsSinceEpoch;
  if ($.gtB($.getInterceptor(t1).abs$0(t1), 8640000000000000))
    throw $.$$throw($.ArgumentError$(t1));
  t1 = this.isUtc;
  if (t1 == null)
    throw $.$$throw($.ArgumentError$(t1));
},
 _DateImpl$now$0: function() {
  $.Primitives_lazyAsJsDate(this);
},
 is$Date: true
};

$$.Duration = {"": ["inMilliseconds>"],
 "super": "Object",
 get$inHours: function() {
  return $.tdiv(this.inMilliseconds, 3600000);
},
 get$inMinutes: function() {
  return $.tdiv(this.inMilliseconds, 60000);
},
 get$inSeconds: function() {
  return $.tdiv(this.inMilliseconds, 1000);
},
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Duration))
    return false;
  return $.eq(this.inMilliseconds, other.inMilliseconds);
},
 get$hashCode: function() {
  var t1 = this.inMilliseconds;
  return $.getInterceptor(t1).get$hashCode(t1);
},
 compareTo$1: function(other) {
  var t1 = this.inMilliseconds;
  return $.getInterceptor(t1).compareTo$1(t1, other.get$inMilliseconds());
},
 toString$0: function() {
  var t1, t2, t3, t4, twoDigitMinutes, t5, twoDigitSeconds, threeDigitMs;
  t1 = new $.Duration_toString_threeDigits();
  t2 = new $.Duration_toString_twoDigits();
  t3 = this.inMilliseconds;
  if ($.ltB(t3, 0))
    return "-" + $.S($.Duration$(0, 0, $.neg(t3), 0, 0));
  t4 = this.get$inMinutes();
  twoDigitMinutes = t2.call$1($.getInterceptor(t4).remainder$1(t4, 60));
  t5 = this.get$inSeconds();
  twoDigitSeconds = t2.call$1($.getInterceptor(t5).remainder$1(t5, 60));
  threeDigitMs = t1.call$1($.getInterceptor(t3).remainder$1(t3, 1000));
  return $.S(this.get$inHours()) + ":" + $.S(twoDigitMinutes) + ":" + $.S(twoDigitSeconds) + "." + $.S(threeDigitMs);
},
 is$Duration: true
};

$$.NullThrownError = {
 "super": "Object",
 toString$0: function() {
  return "Throw of null.";
}
};

$$.ArgumentError = {"": ["message>"],
 "super": "Object",
 toString$0: function() {
  if (!(this.get$message() == null))
    return "Illegal argument(s): " + $.S(this.get$message());
  return "Illegal argument(s)";
}
};

$$.RangeError = {"": ["message"],
 "super": "ArgumentError",
 toString$0: function() {
  return "RangeError: " + $.S(this.message);
}
};

$$.NoSuchMethodError = {"": ["_receiver", "_memberName", "_arguments", "_namedArguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_1 = $.StringBuffer_StringBuffer("");
  t1.i_2 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_2, t2.length); t1.i_2 = $.add(t1.i_2, 1)) {
    if ($.gtB(t1.i_2, 0)) {
      t3 = t1.sb_1;
      $.getInterceptor(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_1;
    t4 = $.getInterceptor(t3);
    t5 = t1.i_2;
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= t2.length)
      throw $.ioore(t5);
    t4.add$1(t3, $.Error_safeToString(t2[t5]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.getInterceptor(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  t3 = t1.sb_1;
  actualParameters = $.getInterceptor(t3).toString$0(t3);
  t1.sb_1 = $.StringBuffer_StringBuffer("");
  for (i = 0; i < t2.length; ++i) {
    if (i > 0) {
      t3 = t1.sb_1;
      $.getInterceptor(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_1;
    t4 = $.getInterceptor(t3);
    if (i >= t2.length)
      throw $.ioore(i);
    t4.add$1(t3, t2[i]);
  }
  t1 = t1.sb_1;
  formalParameters = $.getInterceptor(t1).toString$0(t1);
  t1 = this._memberName;
  return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_1 = $.StringBuffer_StringBuffer("");
      t1.i_2 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_2, $.getInterceptor(t2).get$length(t2)); t1.i_2 = $.add(t1.i_2, 1)) {
          if ($.gtB(t1.i_2, 0)) {
            t3 = t1.sb_1;
            $.getInterceptor(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_1;
          $.getInterceptor(t3).add$1(t3, $.Error_safeToString($.index(t2, t1.i_2)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.getInterceptor(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, t3, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_1) + "]";
      else {
        t3 = t1.sb_1;
        actualParameters = $.getInterceptor(t3).toString$0(t3);
        t1.sb_1 = $.StringBuffer_StringBuffer("");
        for (i = 0; $.ltB(i, $.getInterceptor(t2).get$length(t2)); ++i) {
          if (i > 0) {
            t3 = t1.sb_1;
            $.getInterceptor(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_1;
          $.getInterceptor(t3).add$1(t3, $.index(t2, i));
        }
        t1 = t1.sb_1;
        formalParameters = $.getInterceptor(t1).toString$0(t1);
        t1 = this._memberName;
        return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
      }
  }
}
};

$$.UnsupportedError = {"": ["message>"],
 "super": "Object",
 toString$0: function() {
  return "Unsupported operation: " + $.S(this.get$message());
}
};

$$.UnimplementedError = {"": ["message>"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
}
};

$$.StateError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return "Bad state: " + this.message;
}
};

$$.StackOverflowError = {
 "super": "Object",
 toString$0: function() {
  return "Stack Overflow";
}
};

$$._ExceptionImplementation = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  if (t1 == null)
    return "Exception";
  return "Exception: " + $.S(t1);
},
 is$Exception: true
};

$$.FormatException = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return "FormatException: " + $.S(this.message);
},
 is$Exception: true
};

$$.IllegalJSRegExpException = {"": ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
},
 is$Exception: true
};

$$.RuntimeError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return "RuntimeError: " + this.message;
},
 is$Exception: true
};

$$.Function = {
 "super": "Object",
 is$Function: true
};

$$.FutureNotCompleteException = {
 "super": "Object",
 toString$0: function() {
  return "Exception: future has not been completed";
},
 is$Exception: true
};

$$.FutureAlreadyCompleteException = {
 "super": "Object",
 toString$0: function() {
  return "Exception: future already completed";
},
 is$Exception: true
};

$$.FutureUnhandledException = {"": ["source", "stackTrace>"],
 "super": "Object",
 toString$0: function() {
  var t1, t2, t3;
  t1 = this.source;
  t1 = $.getInterceptor(t1).toString$0(t1);
  t2 = "FutureUnhandledException: exception while executing Future\n  " + $.S($.getInterceptor(t1).replaceAll$2(t1, "\n", "\n  ")) + "\n" + "original stack trace:\n  ";
  t3 = this.stackTrace;
  t3 = $.getInterceptor(t3).toString$0(t3);
  return t2 + $.S($.getInterceptor(t3).replaceAll$2(t3, "\n", "\n  "));
},
 is$Exception: true
};

$$._FutureImpl = {"": ["_isComplete", "_value", "_exception", "_stackTrace", "_exceptionHandled", "_throwOnException", "_successListeners", "_exceptionHandlers", "_completionListeners"],
 "super": "Object",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw($.FutureUnhandledException$(t1, this.get$stackTrace()));
  return this._value;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 then$1: function(onSuccess) {
  var t1;
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true) {
    this._throwOnException = true;
    t1 = this._successListeners;
    $.getInterceptor(t1).add$1(t1, onSuccess);
  } else if (this._exceptionHandled !== true)
    throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
},
 handleException$1: function(onException) {
  var t1;
  if (this._exceptionHandled === true)
    return;
  if (this._isComplete) {
    t1 = this._exception;
    if (!(t1 == null))
      this._exceptionHandled = onException.call$1(t1);
  } else {
    t1 = this._exceptionHandlers;
    $.getInterceptor(t1).add$1(t1, onException);
  }
},
 _complete$0: function(exception) {
  var t1, handler, listener, listener0;
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (t1 = this._exceptionHandlers, t1 = $.getInterceptor(t1).iterator$0(t1); t1.get$hasNext() === true;) {
        handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = this._successListeners, t1 = $.getInterceptor(t1).iterator$0(t1); t1.get$hasNext() === true;) {
        listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (this._exceptionHandled !== true && this._throwOnException)
      throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
  } finally {
    for (t1 = this._completionListeners, t1 = $.getInterceptor(t1).iterator$0(t1); t1.get$hasNext() === true;) {
      listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 _setValue$1: function(value) {
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.ArgumentError$(null));
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
}
};

$$._CompleterImpl = {"": ["_futureImpl"],
 "super": "Object",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception,null)
}
};

$$.List = {
 "super": "Object",
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._HashMapImpl = {"": ["_keys", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  var t1, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  t1 = $.getInterceptor(key).get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  hash = (t1 & this._keys.length - 1) >>> 0;
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CTC9)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForAdding$1$bailout: function(state0, key, t1) {
  var hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  hash = $.and(t1, this._keys.length - 1);
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CTC9)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1: function(key) {
  var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  hash = $.and($.getInterceptor(key).get$hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, t1, existingKey, numberOfProbes0;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, capacity, numberOfFreeOrDeleted, t1;
  newNumberOfEntries = this._numberOfEntries + 1;
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  capacity = this._keys.length;
  numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity, oldKeys, oldValues, t1, t2, i, key, value, newIndex, t3;
  capacity = this._keys.length;
  this._loadLimit = $.tdiv(newCapacity * 3, 4);
  oldKeys = this._keys;
  oldValues = this._values;
  this._keys = $.List_List(newCapacity);
  this._values = $.List_List(newCapacity);
  for (t1 = oldKeys.length, t2 = oldValues.length, i = 0; i < capacity; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CTC9)
      continue;
    if (i >= t2)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    t3 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = key;
    t3 = this._values;
    if (newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  var t1, length$, t2, t3, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = t1.length;
  for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 oprator$indexSet$2: function(key, value) {
  var index, t1;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CTC9)
    this._numberOfEntries = this._numberOfEntries + 1;
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index, t1;
  index = this._probeForLookup$1(key);
  if (typeof index !== 'number')
    return this.operator$index$1$bailout0(1, index);
  if (index < 0)
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 operator$index$1$bailout0: function(state0, index) {
  var t1;
  if ($.ltB(index, 0))
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 putIfAbsent$2: function(key, ifAbsent) {
  var index, t1, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  }
  value = ifAbsent.call$0();
  this.oprator$indexSet$2(key, value);
  return value;
},
 remove$1: function(key) {
  var index, t1, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = this._numberOfEntries - 1;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC9;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 get$isEmpty: function() {
  return this._numberOfEntries === 0;
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$, i, t1, key;
  length$ = this._keys.length;
  for (i = 0; i < length$; ++i) {
    t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    key = t1[i];
    if (!(key == null) && !(key === $.CTC9)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 get$keys: function() {
  var t1, list;
  t1 = {};
  list = $.List_List(this.get$length());
  t1.i_1 = 0;
  $.getInterceptor(this).forEach$1(this, new $._HashMapImpl_keys_anon(list, t1));
  return list;
},
 get$values: function() {
  var t1, list;
  t1 = {};
  list = $.List_List(this.get$length());
  t1.i_10 = 0;
  $.getInterceptor(this).forEach$1(this, new $._HashMapImpl_values_anon(list, t1));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  this._keys = $.List_List(8);
  this._values = $.List_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {
 "super": "Object"
};

$$._KeyValuePair = {"": ["key>", "value="],
 "super": "Object"
};

$$._LinkedHashMapImpl = {"": ["_list", "_map"],
 "super": "Object",
 oprator$indexSet$2: function(key, value) {
  var t1;
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    t1 = this._list;
    $.getInterceptor(t1).addLast$1(t1, $._KeyValuePair$(key, value));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = $.index(this._map, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 putIfAbsent$2: function(key, ifAbsent) {
  var value = this.operator$index$1(key);
  if (this.operator$index$1(key) == null && this._map.containsKey$1(key) !== true) {
    value = ifAbsent.call$0();
    this.oprator$indexSet$2(key, value);
  }
  return value;
},
 get$keys: function() {
  var t1, list, t2;
  t1 = {};
  list = $.List_List(this.get$length());
  t1.index_10 = 0;
  t2 = this._list;
  $.getInterceptor(t2).forEach$1(t2, new $._LinkedHashMapImpl_keys_anon(list, t1));
  return list;
},
 get$values: function() {
  var t1, list, t2;
  t1 = {};
  list = $.List_List(this.get$length());
  t1.index_1 = 0;
  t2 = this._list;
  $.getInterceptor(t2).forEach$1(t2, new $._LinkedHashMapImpl_values_anon(list, t1));
  return list;
},
 forEach$1: function(f) {
  var t1 = this._list;
  $.getInterceptor(t1).forEach$1(t1, new $._LinkedHashMapImpl_forEach_anon(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  var t1 = this._map;
  return $.getInterceptor(t1).get$length(t1);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 clear$0: function() {
  var t1 = this._map;
  $.getInterceptor(t1).clear$0(t1);
  t1 = this._list;
  $.getInterceptor(t1).clear$0(t1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  this._map = $.HashMap_HashMap();
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.Object = {
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
},
 noSuchMethod$1: function(invocation) {
  throw $.$$throw($.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
},
 floor$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("floor", "floor$0",0, [], []));
 },
 decodeAudioData$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("decodeAudioData", "decodeAudioData$3",0, [$0, $1, $2], []));
 },
 _postMessage_2$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_postMessage_2", "_postMessage_2$1",0, [$0], []));
 },
 load$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("load", "load$0",0, [], []));
 },
 allMatches$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("allMatches", "allMatches$1",0, [$0], []));
 },
 $$dom_addEventListener$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_addEventListener", "$$dom_addEventListener$3",0, [$0, $1, $2], []));
 },
 setTimeout$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("setTimeout", "setTimeout$2",0, [$0, $1], []));
 },
 _gameStateChanged$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_gameStateChanged", "_gameStateChanged$1",0, [$0], []));
 },
 canReveal$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("canReveal", "canReveal$2",0, [$0, $1], []));
 },
 insertRange$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("insertRange", "insertRange$3",0, [$0, $1, $2], []));
 },
 _set$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_set", "_set$2",0, [$0, $1], []));
 },
 compareTo$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("compareTo", "compareTo$1",0, [$0], []));
 },
 _probeForAdding$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_probeForAdding", "_probeForAdding$1",0, [$0], []));
 },
 _deserializeMap$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeMap", "_deserializeMap$1",0, [$0], []));
 },
 _liblib9$_deserializeMap$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeMap", "_liblib9$_deserializeMap$1",0, [$0], []));
 },
 _setWon$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_setWon", "_setWon$0",0, [], []));
 },
 concat$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("concat", "concat$1",0, [$0], []));
 },
 getSquareState$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("getSquareState", "getSquareState$2",0, [$0, $1], []));
 },
 every$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("every", "every$1",0, [$0], []));
 },
 every$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("every", "every$2",0, [$0, $1], []));
 },
 _add_1$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_add_1", "_add_1$2",0, [$0, $1], []));
 },
 beginPath$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("beginPath", "beginPath$0",0, [], []));
 },
 remove$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("remove", "remove$0",0, [], []));
 },
 remove$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("remove", "remove$1",0, [$0], []));
 },
 startsWith$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("startsWith", "startsWith$1",0, [$0], []));
 },
 restore$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("restore", "restore$0",0, [], []));
 },
 getRange$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("getRange", "getRange$2",0, [$0, $1], []));
 },
 getRange$4: function($0, $1, $2, $3) {
  return this.noSuchMethod$1($.createInvocationMirror("getRange", "getRange$4",0, [$0, $1, $2, $3], []));
 },
 callSync$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("callSync", "callSync$1",0, [$0], []));
 },
 _toList$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_toList", "_toList$0",0, [], []));
 },
 _onProgress$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_onProgress", "_onProgress$2",0, [$0, $1], []));
 },
 _requestAnimationFrame$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_requestAnimationFrame", "_requestAnimationFrame$1",0, [$0], []));
 },
 _ensureStarted$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_ensureStarted", "_ensureStarted$0",0, [], []));
 },
 _get_1$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_get_1", "_get_1$1",0, [$0], []));
 },
 createBufferSource$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("createBufferSource", "createBufferSource$0",0, [], []));
 },
 contains$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("contains", "contains$1",0, [$0], []));
 },
 contains$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("contains", "contains$2",0, [$0, $1], []));
 },
 _invalidateParent$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_invalidateParent", "_invalidateParent$0",0, [], []));
 },
 _updateCanvasSize$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_updateCanvasSize", "_updateCanvasSize$0",0, [], []));
 },
 _doClick$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_doClick", "_doClick$2",0, [$0, $1], []));
 },
 setToTranslation$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("setToTranslation", "setToTranslation$2",0, [$0, $1], []));
 },
 unregister$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("unregister", "unregister$1",0, [$0], []));
 },
 handleException$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("handleException", "handleException$1",0, [$0], []));
 },
 _requestFrame$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_requestFrame", "_requestFrame$0",0, [], []));
 },
 add$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("add", "add$1",0, [$0], []));
 },
 _indexer$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_indexer", "_indexer$1",0, [$0], []));
 },
 matchesBlobUrl$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("matchesBlobUrl", "matchesBlobUrl$1",0, [$0], []));
 },
 setResource$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("setResource", "setResource$1",0, [$0], []));
 },
 _complete$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_complete", "_complete$0",0, [], []));
 },
 reveal$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("reveal", "reveal$2",0, [$0, $1], []));
 },
 _getByBlobUrl$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_getByBlobUrl", "_getByBlobUrl$1",0, [$0], []));
 },
 get$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("get", "get$1",0, [$0], []));
 },
 get$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("get", "get$2",0, [$0, $1], []));
 },
 clearRect$4: function($0, $1, $2, $3) {
  return this.noSuchMethod$1($.createInvocationMirror("clearRect", "clearRect$4",0, [$0, $1, $2, $3], []));
 },
 addAll$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("addAll", "addAll$1",0, [$0], []));
 },
 stringifyValue$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("stringifyValue", "stringifyValue$1",0, [$0], []));
 },
 queryAll$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("queryAll", "queryAll$1",0, [$0], []));
 },
 register$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("register", "register$2",0, [$0, $1], []));
 },
 complete$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("complete", "complete$1",0, [$0], []));
 },
 remainder$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("remainder", "remainder$1",0, [$0], []));
 },
 getBoundingClientRect$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("getBoundingClientRect", "getBoundingClientRect$0",0, [], []));
 },
 _throwUnmodifiable$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_throwUnmodifiable", "_throwUnmodifiable$0",0, [], []));
 },
 map$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("map", "map$1",0, [$0], []));
 },
 map$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("map", "map$3",0, [$0, $1, $2], []));
 },
 _getIntValue$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_getIntValue", "_getIntValue$1",0, [$0], []));
 },
 _getIntValue$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_getIntValue", "_getIntValue$2",0, [$0, $1], []));
 },
 toReadOnlyCollection$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("toReadOnlyCollection", "toReadOnlyCollection$0",0, [], []));
 },
 _doMouseUp$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_doMouseUp", "_doMouseUp$2",0, [$0, $1], []));
 },
 difference$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("difference", "difference$1",0, [$0], []));
 },
 toSendPort$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("toSendPort", "toSendPort$0",0, [], []));
 },
 abs$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("abs", "abs$0",0, [], []));
 },
 enterScope$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("enterScope", "enterScope$0",0, [], []));
 },
 $$dom_dispatchEvent$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_dispatchEvent", "$$dom_dispatchEvent$1",0, [$0], []));
 },
 pushAnalytics$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("pushAnalytics", "pushAnalytics$1",0, [$0], []));
 },
 _getAdjacentCount$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("_getAdjacentCount", "_getAdjacentCount$3",0, [$0, $1, $2], []));
 },
 closePath$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("closePath", "closePath$0",0, [], []));
 },
 _getPropertyValue$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_getPropertyValue", "_getPropertyValue$1",0, [$0], []));
 },
 fireEvent$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("fireEvent", "fireEvent$1",0, [$0], []));
 },
 fireEvent$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("fireEvent", "fireEvent$2",0, [$0, $1], []));
 },
 requestAnimationFrame$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("requestAnimationFrame", "requestAnimationFrame$1",0, [$0], []));
 },
 setFlag$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("setFlag", "setFlag$3",0, [$0, $1, $2], []));
 },
 single$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("single", "single$1",0, [$0], []));
 },
 putIfAbsent$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("putIfAbsent", "putIfAbsent$2",0, [$0, $1], []));
 },
 postMessage$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("postMessage", "postMessage$1",0, [$0], []));
 },
 then$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("then", "then$1",0, [$0], []));
 },
 indexOf$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("indexOf", "indexOf$2",0, [$0, $1], []));
 },
 indexOf$4: function($0, $1, $2, $3) {
  return this.noSuchMethod$1($.createInvocationMirror("indexOf", "indexOf$4",0, [$0, $1, $2, $3], []));
 },
 setGameManager$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("setGameManager", "setGameManager$1",0, [$0], []));
 },
 _setIntValue$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_setIntValue", "_setIntValue$2",0, [$0, $1], []));
 },
 _link$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_link", "_link$2",0, [$0, $1], []));
 },
 _drawCorner$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_drawCorner", "_drawCorner$1",0, [$0], []));
 },
 nextInt$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("nextInt", "nextInt$1",0, [$0], []));
 },
 runIteration$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("runIteration", "runIteration$0",0, [], []));
 },
 _fireEvent$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_fireEvent", "_fireEvent$2",0, [$0, $1], []));
 },
 maybeCloseWorker$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("maybeCloseWorker", "maybeCloseWorker$0",0, [], []));
 },
 scale$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("scale", "scale$2",0, [$0, $1], []));
 },
 scale$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("scale", "scale$1",0, [$0], []));
 },
 _getValueOrUndefined$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("_getValueOrUndefined", "_getValueOrUndefined$3",0, [$0, $1, $2], []));
 },
 send$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("send", "send$0",0, [], []));
 },
 setInterval$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("setInterval", "setInterval$2",0, [$0, $1], []));
 },
 setToScale$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("setToScale", "setToScale$2",0, [$0, $1], []));
 },
 moveTo$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("moveTo", "moveTo$2",0, [$0, $1], []));
 },
 call$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$0",0, [], []));
 },
 call$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$1",0, [$0], []));
 },
 call$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$2",0, [$0, $1], []));
 },
 call$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$3",0, [$0, $1, $2], []));
 },
 call$4: function($0, $1, $2, $3) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$4",0, [$0, $1, $2, $3], []));
 },
 call$6: function($0, $1, $2, $3, $4, $5) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$6",0, [$0, $1, $2, $3, $4, $5], []));
 },
 call$9: function($0, $1, $2, $3, $4, $5, $6, $7, $8) {
  return this.noSuchMethod$1($.createInvocationMirror("call", "call$9",0, [$0, $1, $2, $3, $4, $5, $6, $7, $8], []));
 },
 $$dom_removeChild$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_removeChild", "$$dom_removeChild$1",0, [$0], []));
 },
 _forEach$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_forEach", "_forEach$1",0, [$0], []));
 },
 toInt$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("toInt", "toInt$0",0, [], []));
 },
 _startPopAnimation$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_startPopAnimation", "_startPopAnimation$1",0, [$0], []));
 },
 _startPopAnimation$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_startPopAnimation", "_startPopAnimation$2",0, [$0, $1], []));
 },
 toJson$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("toJson", "toJson$0",0, [], []));
 },
 replaceWith$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("replaceWith", "replaceWith$1",0, [$0], []));
 },
 registerPort$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("registerPort", "registerPort$2",0, [$0, $1], []));
 },
 _setGlobals$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_setGlobals", "_setGlobals$0",0, [], []));
 },
 _isClipped$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_isClipped", "_isClipped$2",0, [$0, $1], []));
 },
 drawTextureKeyAt$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("drawTextureKeyAt", "drawTextureKeyAt$2",0, [$0, $1], []));
 },
 drawTextureKeyAt$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("drawTextureKeyAt", "drawTextureKeyAt$3",0, [$0, $1, $2], []));
 },
 save$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("save", "save$0",0, [], []));
 },
 _doReveal$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_doReveal", "_doReveal$2",0, [$0, $1], []));
 },
 _probeForLookup$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_probeForLookup", "_probeForLookup$1",0, [$0], []));
 },
 _getByUrl$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_getByUrl", "_getByUrl$1",0, [$0], []));
 },
 replaceAll$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("replaceAll", "replaceAll$2",0, [$0, $1], []));
 },
 open$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("open", "open$2",0, [$0, $1], []));
 },
 open$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("open", "open$3",0, [$0, $1, $2], []));
 },
 toStringAsFixed$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("toStringAsFixed", "toStringAsFixed$1",0, [$0], []));
 },
 translate$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("translate", "translate$2",0, [$0, $1], []));
 },
 assign$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("assign", "assign$1",0, [$0], []));
 },
 start$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("start", "start$1",0, [$0], []));
 },
 firstMatch$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("firstMatch", "firstMatch$1",0, [$0], []));
 },
 selectNumbers$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("selectNumbers", "selectNumbers$1",0, [$0], []));
 },
 _nativeDetectEnvironment$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_nativeDetectEnvironment", "_nativeDetectEnvironment$0",0, [], []));
 },
 drawCore$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("drawCore", "drawCore$1",0, [$0], []));
 },
 _loadResourceSucceed$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_loadResourceSucceed", "_loadResourceSucceed$2",0, [$0, $1], []));
 },
 setTopLeft$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("setTopLeft", "setTopLeft$2",0, [$0, $1], []));
 },
 clip$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("clip", "clip$0",0, [], []));
 },
 _onLoadEnd$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_onLoadEnd", "_onLoadEnd$2",0, [$0, $1], []));
 },
 _getHiddenTexture$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_getHiddenTexture", "_getHiddenTexture$0",0, [], []));
 },
 transform$6: function($0, $1, $2, $3, $4, $5) {
  return this.noSuchMethod$1($.createInvocationMirror("transform", "transform$6",0, [$0, $1, $2, $3, $4, $5], []));
 },
 truncate$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("truncate", "truncate$0",0, [], []));
 },
 _func$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_func", "_func$1",0, [$0], []));
 },
 _setState$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_setState", "_setState$1",0, [$0], []));
 },
 sort$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("sort", "sort$1",0, [$0], []));
 },
 lookup$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("lookup", "lookup$1",0, [$0], []));
 },
 _onAudioLoadError$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("_onAudioLoadError", "_onAudioLoadError$3",0, [$0, $1, $2], []));
 },
 fillRect$4: function($0, $1, $2, $3) {
  return this.noSuchMethod$1($.createInvocationMirror("fillRect", "fillRect$4",0, [$0, $1, $2, $3], []));
 },
 update$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("update", "update$0",0, [], []));
 },
 next$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("next", "next$0",0, [], []));
 },
 getCoordinate$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("getCoordinate", "getCoordinate$1",0, [$0], []));
 },
 completeException$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("completeException", "completeException$1",0, [$0], []));
 },
 completeException$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("completeException", "completeException$2",0, [$0, $1], []));
 },
 childInvalidated$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("childInvalidated", "childInvalidated$1",0, [$0], []));
 },
 $$dom_removeEventListener$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_removeEventListener", "$$dom_removeEventListener$3",0, [$0, $1, $2], []));
 },
 iterator$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("iterator", "iterator$0",0, [], []));
 },
 transformCoordinate$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("transformCoordinate", "transformCoordinate$1",0, [$0], []));
 },
 _playAudioCore$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_playAudioCore", "_playAudioCore$1",0, [$0], []));
 },
 _canChord$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_canChord", "_canChord$2",0, [$0, $1], []));
 },
 cleanup$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("cleanup", "cleanup$0",0, [], []));
 },
 split$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("split", "split$1",0, [$0], []));
 },
 _click$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("_click", "_click$3",0, [$0, $1, $2], []));
 },
 replace$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("replace", "replace$1",0, [$0], []));
 },
 _stageDraw$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_stageDraw", "_stageDraw$1",0, [$0], []));
 },
 addHandler$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("addHandler", "addHandler$2",0, [$0, $1], []));
 },
 hasMatch$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("hasMatch", "hasMatch$1",0, [$0], []));
 },
 _getTextSize$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_getTextSize", "_getTextSize$1",0, [$0], []));
 },
 _addHandler$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_addHandler", "_addHandler$2",0, [$0, $1], []));
 },
 $$dom_createEvent$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_createEvent", "$$dom_createEvent$1",0, [$0], []));
 },
 getChildTransform$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("getChildTransform", "getChildTransform$1",0, [$0], []));
 },
 getAdjacentIndices$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("getAdjacentIndices", "getAdjacentIndices$2",0, [$0, $1], []));
 },
 run$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("run", "run$0",0, [], []));
 },
 fill$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("fill", "fill$0",0, [], []));
 },
 addTransform$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("addTransform", "addTransform$0",0, [], []));
 },
 getBlobUrl$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("getBlobUrl", "getBlobUrl$1",0, [$0], []));
 },
 substring$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("substring", "substring$1",0, [$0], []));
 },
 substring$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("substring", "substring$2",0, [$0, $1], []));
 },
 _dispatch$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_dispatch", "_dispatch$1",0, [$0], []));
 },
 _liblib9$_dispatch$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_dispatch", "_liblib9$_dispatch$1",0, [$0], []));
 },
 _onError$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_onError", "_onError$2",0, [$0, $1], []));
 },
 query$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("query", "query$1",0, [$0], []));
 },
 toList$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("toList", "toList$0",0, [], []));
 },
 firstOrDefault$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("firstOrDefault", "firstOrDefault$1",0, [$0], []));
 },
 charCodeAt$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("charCodeAt", "charCodeAt$1",0, [$0], []));
 },
 clearInterval$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("clearInterval", "clearInterval$1",0, [$0], []));
 },
 revokeBlobUrl$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("revokeBlobUrl", "revokeBlobUrl$0",0, [], []));
 },
 $$dom_replaceChild$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_replaceChild", "$$dom_replaceChild$2",0, [$0, $1], []));
 },
 clear$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("clear", "clear$0",0, [], []));
 },
 clear$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("clear", "clear$1",0, [$0], []));
 },
 close$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("close", "close$0",0, [], []));
 },
 addLast$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("addLast", "addLast$1",0, [$0], []));
 },
 _getFrameDetails$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_getFrameDetails", "_getFrameDetails$0",0, [], []));
 },
 getAdjacentCount$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("getAdjacentCount", "getAdjacentCount$2",0, [$0, $1], []));
 },
 _updateSize$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_updateSize", "_updateSize$2",0, [$0, $1], []));
 },
 createInverse$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("createInverse", "createInverse$0",0, [], []));
 },
 _doChord$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_doChord", "_doChord$2",0, [$0, $1], []));
 },
 _postMessage_1$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_postMessage_1", "_postMessage_1$2",0, [$0, $1], []));
 },
 preventDefault$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("preventDefault", "preventDefault$0",0, [], []));
 },
 sum$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("sum", "sum$0",0, [], []));
 },
 updateProgress$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("updateProgress", "updateProgress$2",0, [$0, $1], []));
 },
 _drawTarget$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_drawTarget", "_drawTarget$1",0, [$0], []));
 },
 forEach$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("forEach", "forEach$1",0, [$0], []));
 },
 forEach$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("forEach", "forEach$2",0, [$0, $1], []));
 },
 _deserializeHelper$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeHelper", "_deserializeHelper$1",0, [$0], []));
 },
 _liblib9$_deserializeHelper$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeHelper", "_liblib9$_deserializeHelper$1",0, [$0], []));
 },
 _doMouseDown$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_doMouseDown", "_doMouseDown$2",0, [$0, $1], []));
 },
 _isSet$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_isSet", "_isSet$1",0, [$0], []));
 },
 _ensureRequestAnimationFrame$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_ensureRequestAnimationFrame", "_ensureRequestAnimationFrame$0",0, [], []));
 },
 getTransform$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("getTransform", "getTransform$0",0, [], []));
 },
 some$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("some", "some$1",0, [$0], []));
 },
 some$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("some", "some$2",0, [$0, $1], []));
 },
 _deserializeList$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeList", "_deserializeList$1",0, [$0], []));
 },
 _liblib9$_deserializeList$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeList", "_liblib9$_deserializeList$1",0, [$0], []));
 },
 endsWith$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("endsWith", "endsWith$1",0, [$0], []));
 },
 $$dom_initCustomEvent$4: function($0, $1, $2, $3) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_initCustomEvent", "$$dom_initCustomEvent$4",0, [$0, $1, $2, $3], []));
 },
 _saveBuffer$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_saveBuffer", "_saveBuffer$2",0, [$0, $1], []));
 },
 _asNonSentinelEntry$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_asNonSentinelEntry", "_asNonSentinelEntry$0",0, [], []));
 },
 removeFirst$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("removeFirst", "removeFirst$0",0, [], []));
 },
 bezierCurveTo$6: function($0, $1, $2, $3, $4, $5) {
  return this.noSuchMethod$1($.createInvocationMirror("bezierCurveTo", "bezierCurveTo$6",0, [$0, $1, $2, $3, $4, $5], []));
 },
 set$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("set", "set$2",0, [$0, $1], []));
 },
 set$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("set", "set$3",0, [$0, $1, $2], []));
 },
 drawImage$9: function($0, $1, $2, $3, $4, $5, $6, $7, $8) {
  return this.noSuchMethod$1($.createInvocationMirror("drawImage", "drawImage$9",0, [$0, $1, $2, $3, $4, $5, $6, $7, $8], []));
 },
 drawImage$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("drawImage", "drawImage$3",0, [$0, $1, $2], []));
 },
 _grow$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_grow", "_grow$1",0, [$0], []));
 },
 _serializeList$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_serializeList", "_serializeList$1",0, [$0], []));
 },
 _liblib9$_serializeList$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_serializeList", "_liblib9$_serializeList$1",0, [$0], []));
 },
 filter$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("filter", "filter$1",0, [$0], []));
 },
 filter$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("filter", "filter$3",0, [$0, $1, $2], []));
 },
 _clearTimeout$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_clearTimeout", "_clearTimeout$0",0, [], []));
 },
 _fireChange$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_fireChange", "_fireChange$1",0, [$0], []));
 },
 _toggleFlag$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_toggleFlag", "_toggleFlag$2",0, [$0, $1], []));
 },
 _nativeInitWorkerMessageHandler$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_nativeInitWorkerMessageHandler", "_nativeInitWorkerMessageHandler$0",0, [], []));
 },
 _add_2$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_add_2", "_add_2$1",0, [$0], []));
 },
 _advance$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_advance", "_advance$0",0, [], []));
 },
 _loadResourceFailed$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_loadResourceFailed", "_loadResourceFailed$1",0, [$0], []));
 },
 containsKey$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("containsKey", "containsKey$1",0, [$0], []));
 },
 registerParent$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("registerParent", "registerParent$1",0, [$0], []));
 },
 _ensureCapacity$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_ensureCapacity", "_ensureCapacity$0",0, [], []));
 },
 removeRange$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("removeRange", "removeRange$2",0, [$0, $1], []));
 },
 _drawCached$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_drawCached", "_drawCached$1",0, [$0], []));
 },
 exitScope$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("exitScope", "exitScope$0",0, [], []));
 },
 _runHelper$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_runHelper", "_runHelper$0",0, [], []));
 },
 _callback$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_callback", "_callback$1",0, [$0], []));
 },
 _liblib9$_callback$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_callback", "_liblib9$_callback$2",0, [$0, $1], []));
 },
 measureText$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("measureText", "measureText$1",0, [$0], []));
 },
 getResource$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("getResource", "getResource$1",0, [$0], []));
 },
 $$dom_createElement$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_createElement", "$$dom_createElement$1",0, [$0], []));
 },
 fillText$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("fillText", "fillText$3",0, [$0, $1, $2], []));
 },
 _startDartAnimation$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_startDartAnimation", "_startDartAnimation$1",0, [$0], []));
 },
 ceil$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("ceil", "ceil$0",0, [], []));
 },
 _setLost$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_setLost", "_setLost$0",0, [], []));
 },
 process$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("process", "process$0",0, [], []));
 },
 clearTimeout$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("clearTimeout", "clearTimeout$1",0, [$0], []));
 },
 _remove$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_remove", "_remove$1",0, [$0], []));
 },
 _deserializeRef$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeRef", "_deserializeRef$1",0, [$0], []));
 },
 _liblib9$_deserializeRef$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_deserializeRef", "_liblib9$_deserializeRef$1",0, [$0], []));
 },
 _doLoad$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_doLoad", "_doLoad$1",0, [$0], []));
 },
 _httpLoad$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_httpLoad", "_httpLoad$1",0, [$0], []));
 },
 reset$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("reset", "reset$0",0, [], []));
 },
 rect$4: function($0, $1, $2, $3) {
  return this.noSuchMethod$1($.createInvocationMirror("rect", "rect$4",0, [$0, $1, $2, $3], []));
 },
 lookupPort$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("lookupPort", "lookupPort$1",0, [$0], []));
 },
 connect$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("connect", "connect$3",0, [$0, $1, $2], []));
 },
 eval$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("eval", "eval$1",0, [$0], []));
 },
 enqueue$3: function($0, $1, $2) {
  return this.noSuchMethod$1($.createInvocationMirror("enqueue", "enqueue$3",0, [$0, $1, $2], []));
 },
 _drawInternal$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_drawInternal", "_drawInternal$1",0, [$0], []));
 },
 wireSquareMouseEvent$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("wireSquareMouseEvent", "wireSquareMouseEvent$1",0, [$0], []));
 },
 _get_2$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_get_2", "_get_2$1",0, [$0], []));
 },
 _getIndex$2: function($0, $1) {
  return this.noSuchMethod$1($.createInvocationMirror("_getIndex", "_getIndex$2",0, [$0, $1], []));
 },
 _checkReplyTo$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_checkReplyTo", "_checkReplyTo$1",0, [$0], []));
 },
 removeLast$0: function() {
  return this.noSuchMethod$1($.createInvocationMirror("removeLast", "removeLast$0",0, [], []));
 },
 _drawNormal$1: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_drawNormal", "_drawNormal$1",0, [$0], []));
 },
 get$keyCode: function() {
  return this.noSuchMethod$1($.createInvocationMirror("keyCode", "keyCode$0",1, [], []));
 },
 get$_liblib6$_id: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_id", "_liblib6$_id$0",1, [], []));
 },
 get$_liblib9$_id: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_id", "_liblib9$_id$0",1, [], []));
 },
 get$_mouseDirectlyOver: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_mouseDirectlyOver", "_mouseDirectlyOver$0",1, [], []));
 },
 get$load: function() {
  return this.noSuchMethod$1($.createInvocationMirror("load", "load$0",1, [], []));
 },
 get$_backingMap: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_backingMap", "_backingMap$0",1, [], []));
 },
 get$_m01: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_m01", "_m01$0",1, [], []));
 },
 get$mouseOut: function() {
  return this.noSuchMethod$1($.createInvocationMirror("mouseOut", "mouseOut$0",1, [], []));
 },
 get$isNaN: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isNaN", "isNaN$0",1, [], []));
 },
 get$elements: function() {
  return this.noSuchMethod$1($.createInvocationMirror("elements", "elements$0",1, [], []));
 },
 get$history: function() {
  return this.noSuchMethod$1($.createInvocationMirror("history", "history$0",1, [], []));
 },
 get$memberName: function() {
  return this.noSuchMethod$1($.createInvocationMirror("memberName", "memberName$0",1, [], []));
 },
 get$hash: function() {
  return this.noSuchMethod$1($.createInvocationMirror("hash", "hash$0",1, [], []));
 },
 get$_gameStateChanged: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_gameStateChanged", "_gameStateChanged$0",1, [], []));
 },
 get$inMilliseconds: function() {
  return this.noSuchMethod$1($.createInvocationMirror("inMilliseconds", "inMilliseconds$0",1, [], []));
 },
 get$namedArguments: function() {
  return this.noSuchMethod$1($.createInvocationMirror("namedArguments", "namedArguments$0",1, [], []));
 },
 get$_liblib0$_set: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_set", "_liblib0$_set$0",1, [], []));
 },
 get$bombCount: function() {
  return this.noSuchMethod$1($.createInvocationMirror("bombCount", "bombCount$0",1, [], []));
 },
 get$userAgent: function() {
  return this.noSuchMethod$1($.createInvocationMirror("userAgent", "userAgent$0",1, [], []));
 },
 get$completedBytes: function() {
  return this.noSuchMethod$1($.createInvocationMirror("completedBytes", "completedBytes$0",1, [], []));
 },
 get$_squareClicked: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_squareClicked", "_squareClicked$0",1, [], []));
 },
 get$translateY: function() {
  return this.noSuchMethod$1($.createInvocationMirror("translateY", "translateY$0",1, [], []));
 },
 get$_clickedEvent: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_clickedEvent", "_clickedEvent$0",1, [], []));
 },
 get$image: function() {
  return this.noSuchMethod$1($.createInvocationMirror("image", "image$0",1, [], []));
 },
 get$_liblib3$_game: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_game", "_liblib3$_game$0",1, [], []));
 },
 get$isWorker: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isWorker", "isWorker$0",1, [], []));
 },
 get$_board: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_board", "_board$0",1, [], []));
 },
 get$mouseMove: function() {
  return this.noSuchMethod$1($.createInvocationMirror("mouseMove", "mouseMove$0",1, [], []));
 },
 get$left: function() {
  return this.noSuchMethod$1($.createInvocationMirror("left", "left$0",1, [], []));
 },
 get$scaleY: function() {
  return this.noSuchMethod$1($.createInvocationMirror("scaleY", "scaleY$0",1, [], []));
 },
 get$_onFrame: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_onFrame", "_onFrame$0",1, [], []));
 },
 get$hasNext: function() {
  return this.noSuchMethod$1($.createInvocationMirror("hasNext", "hasNext$0",1, [], []));
 },
 get$mainManager: function() {
  return this.noSuchMethod$1($.createInvocationMirror("mainManager", "mainManager$0",1, [], []));
 },
 get$future: function() {
  return this.noSuchMethod$1($.createInvocationMirror("future", "future$0",1, [], []));
 },
 get$_mouseUp: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_mouseUp", "_mouseUp$0",1, [], []));
 },
 get$id: function() {
  return this.noSuchMethod$1($.createInvocationMirror("id", "id$0",1, [], []));
 },
 get$parent: function() {
  return this.noSuchMethod$1($.createInvocationMirror("parent", "parent$0",1, [], []));
 },
 get$abort: function() {
  return this.noSuchMethod$1($.createInvocationMirror("abort", "abort$0",1, [], []));
 },
 get$_audioContext: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_audioContext", "_audioContext$0",1, [], []));
 },
 get$topLeft: function() {
  return this.noSuchMethod$1($.createInvocationMirror("topLeft", "topLeft$0",1, [], []));
 },
 get$item2: function() {
  return this.noSuchMethod$1($.createInvocationMirror("item2", "item2$0",1, [], []));
 },
 get$status: function() {
  return this.noSuchMethod$1($.createInvocationMirror("status", "status$0",1, [], []));
 },
 get$rootElement: function() {
  return this.noSuchMethod$1($.createInvocationMirror("rootElement", "rootElement$0",1, [], []));
 },
 get$offsetY: function() {
  return this.noSuchMethod$1($.createInvocationMirror("offsetY", "offsetY$0",1, [], []));
 },
 get$_m10: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_m10", "_m10$0",1, [], []));
 },
 get$context: function() {
  return this.noSuchMethod$1($.createInvocationMirror("context", "context$0",1, [], []));
 },
 get$_mouseDown: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_mouseDown", "_mouseDown$0",1, [], []));
 },
 get$positionalArguments: function() {
  return this.noSuchMethod$1($.createInvocationMirror("positionalArguments", "positionalArguments$0",1, [], []));
 },
 get$isGetter: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isGetter", "isGetter$0",1, [], []));
 },
 get$keyDown: function() {
  return this.noSuchMethod$1($.createInvocationMirror("keyDown", "keyDown$0",1, [], []));
 },
 get$_filtered: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_filtered", "_filtered$0",1, [], []));
 },
 get$_next: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_next", "_next$0",1, [], []));
 },
 get$pattern: function() {
  return this.noSuchMethod$1($.createInvocationMirror("pattern", "pattern$0",1, [], []));
 },
 get$_elementsNeedUpdate: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_elementsNeedUpdate", "_elementsNeedUpdate$0",1, [], []));
 },
 get$fromCommandLine: function() {
  return this.noSuchMethod$1($.createInvocationMirror("fromCommandLine", "fromCommandLine$0",1, [], []));
 },
 get$loaded: function() {
  return this.noSuchMethod$1($.createInvocationMirror("loaded", "loaded$0",1, [], []));
 },
 get$_top: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_top", "_top$0",1, [], []));
 },
 get$isValid: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isValid", "isValid$0",1, [], []));
 },
 get$children: function() {
  return this.noSuchMethod$1($.createInvocationMirror("children", "children$0",1, [], []));
 },
 get$on: function() {
  return this.noSuchMethod$1($.createInvocationMirror("on", "on$0",1, [], []));
 },
 get$ignoreCase: function() {
  return this.noSuchMethod$1($.createInvocationMirror("ignoreCase", "ignoreCase$0",1, [], []));
 },
 get$_mouseMove: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_mouseMove", "_mouseMove$0",1, [], []));
 },
 get$element: function() {
  return this.noSuchMethod$1($.createInvocationMirror("element", "element$0",1, [], []));
 },
 get$top: function() {
  return this.noSuchMethod$1($.createInvocationMirror("top", "top$0",1, [], []));
 },
 get$_canvas: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_canvas", "_canvas$0",1, [], []));
 },
 get$_mouseOut: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_mouseOut", "_mouseOut$0",1, [], []));
 },
 get$width: function() {
  return this.noSuchMethod$1($.createInvocationMirror("width", "width$0",1, [], []));
 },
 get$_mouseOutHandler: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_mouseOutHandler", "_mouseOutHandler$0",1, [], []));
 },
 get$multiLine: function() {
  return this.noSuchMethod$1($.createInvocationMirror("multiLine", "multiLine$0",1, [], []));
 },
 get$mouseUp: function() {
  return this.noSuchMethod$1($.createInvocationMirror("mouseUp", "mouseUp$0",1, [], []));
 },
 get$size: function() {
  return this.noSuchMethod$1($.createInvocationMirror("size", "size$0",1, [], []));
 },
 get$topEventLoop: function() {
  return this.noSuchMethod$1($.createInvocationMirror("topEventLoop", "topEventLoop$0",1, [], []));
 },
 get$body: function() {
  return this.noSuchMethod$1($.createInvocationMirror("body", "body$0",1, [], []));
 },
 get$_target: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_target", "_target$0",1, [], []));
 },
 get$error: function() {
  return this.noSuchMethod$1($.createInvocationMirror("error", "error$0",1, [], []));
 },
 get$currentTarget: function() {
  return this.noSuchMethod$1($.createInvocationMirror("currentTarget", "currentTarget$0",1, [], []));
 },
 get$clicked: function() {
  return this.noSuchMethod$1($.createInvocationMirror("clicked", "clicked$0",1, [], []));
 },
 get$_scopeIndices: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_scopeIndices", "_scopeIndices$0",1, [], []));
 },
 get$_m02: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_m02", "_m02$0",1, [], []));
 },
 get$style: function() {
  return this.noSuchMethod$1($.createInvocationMirror("style", "style$0",1, [], []));
 },
 get$innerWidth: function() {
  return this.noSuchMethod$1($.createInvocationMirror("innerWidth", "innerWidth$0",1, [], []));
 },
 get$isolates: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isolates", "isolates$0",1, [], []));
 },
 get$resource: function() {
  return this.noSuchMethod$1($.createInvocationMirror("resource", "resource$0",1, [], []));
 },
 get$_onLoad: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_onLoad", "_onLoad$0",1, [], []));
 },
 get$_listenerName: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_listenerName", "_listenerName$0",1, [], []));
 },
 get$nextIsolateId: function() {
  return this.noSuchMethod$1($.createInvocationMirror("nextIsolateId", "nextIsolateId$0",1, [], []));
 },
 get$shearY: function() {
  return this.noSuchMethod$1($.createInvocationMirror("shearY", "shearY$0",1, [], []));
 },
 get$millisecondsSinceEpoch: function() {
  return this.noSuchMethod$1($.createInvocationMirror("millisecondsSinceEpoch", "millisecondsSinceEpoch$0",1, [], []));
 },
 get$_receivePort: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_receivePort", "_receivePort$0",1, [], []));
 },
 get$_liblib9$_receivePort: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_receivePort", "_liblib9$_receivePort$0",1, [], []));
 },
 get$_liblib$_state: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_state", "_liblib$_state$0",1, [], []));
 },
 get$destination: function() {
  return this.noSuchMethod$1($.createInvocationMirror("destination", "destination$0",1, [], []));
 },
 get$currentContext: function() {
  return this.noSuchMethod$1($.createInvocationMirror("currentContext", "currentContext$0",1, [], []));
 },
 get$_squareMouseDown: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_squareMouseDown", "_squareMouseDown$0",1, [], []));
 },
 get$state: function() {
  return this.noSuchMethod$1($.createInvocationMirror("state", "state$0",1, [], []));
 },
 get$_stageInvalidated: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_stageInvalidated", "_stageInvalidated$0",1, [], []));
 },
 get$needSerialization: function() {
  return this.noSuchMethod$1($.createInvocationMirror("needSerialization", "needSerialization$0",1, [], []));
 },
 get$updated: function() {
  return this.noSuchMethod$1($.createInvocationMirror("updated", "updated$0",1, [], []));
 },
 get$offsetX: function() {
  return this.noSuchMethod$1($.createInvocationMirror("offsetX", "offsetX$0",1, [], []));
 },
 get$isInfinite: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isInfinite", "isInfinite$0",1, [], []));
 },
 get$duration: function() {
  return this.noSuchMethod$1($.createInvocationMirror("duration", "duration$0",1, [], []));
 },
 get$_m12: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_m12", "_m12$0",1, [], []));
 },
 get$$$dom_body: function() {
  return this.noSuchMethod$1($.createInvocationMirror("$dom_body", "$$dom_body$0",1, [], []));
 },
 get$_tag: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_tag", "_tag$0",1, [], []));
 },
 get$nodes: function() {
  return this.noSuchMethod$1($.createInvocationMirror("nodes", "nodes$0",1, [], []));
 },
 get$_location: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_location", "_location$0",1, [], []));
 },
 get$_mouseDownTimeoutHandle: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_mouseDownTimeoutHandle", "_mouseDownTimeoutHandle$0",1, [], []));
 },
 get$loadEnd: function() {
  return this.noSuchMethod$1($.createInvocationMirror("loadEnd", "loadEnd$0",1, [], []));
 },
 get$stackTrace: function() {
  return this.noSuchMethod$1($.createInvocationMirror("stackTrace", "stackTrace$0",1, [], []));
 },
 get$_mouseMoveHandler: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_mouseMoveHandler", "_mouseMoveHandler$0",1, [], []));
 },
 get$_workerId: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_workerId", "_workerId$0",1, [], []));
 },
 get$_liblib3$_textureData: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_textureData", "_liblib3$_textureData$0",1, [], []));
 },
 get$key: function() {
  return this.noSuchMethod$1($.createInvocationMirror("key", "key$0",1, [], []));
 },
 get$y: function() {
  return this.noSuchMethod$1($.createInvocationMirror("y", "y$0",1, [], []));
 },
 get$popState: function() {
  return this.noSuchMethod$1($.createInvocationMirror("popState", "popState$0",1, [], []));
 },
 get$name: function() {
  return this.noSuchMethod$1($.createInvocationMirror("name", "name$0",1, [], []));
 },
 get$localStorage: function() {
  return this.noSuchMethod$1($.createInvocationMirror("localStorage", "localStorage$0",1, [], []));
 },
 get$shearX: function() {
  return this.noSuchMethod$1($.createInvocationMirror("shearX", "shearX$0",1, [], []));
 },
 get$_Lists: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_Lists", "_Lists$0",1, [], []));
 },
 get$_scale: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_scale", "_scale$0",1, [], []));
 },
 get$rotated: function() {
  return this.noSuchMethod$1($.createInvocationMirror("rotated", "rotated$0",1, [], []));
 },
 get$_squareState: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_squareState", "_squareState$0",1, [], []));
 },
 get$rootContext: function() {
  return this.noSuchMethod$1($.createInvocationMirror("rootContext", "rootContext$0",1, [], []));
 },
 get$completed: function() {
  return this.noSuchMethod$1($.createInvocationMirror("completed", "completed$0",1, [], []));
 },
 get$progress: function() {
  return this.noSuchMethod$1($.createInvocationMirror("progress", "progress$0",1, [], []));
 },
 get$sb: function() {
  return this.noSuchMethod$1($.createInvocationMirror("sb", "sb$0",1, [], []));
 },
 get$last: function() {
  return this.noSuchMethod$1($.createInvocationMirror("last", "last$0",1, [], []));
 },
 get$height: function() {
  return this.noSuchMethod$1($.createInvocationMirror("height", "height$0",1, [], []));
 },
 get$_squareMouseUp: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_squareMouseUp", "_squareMouseUp$0",1, [], []));
 },
 get$length: function() {
  return this.noSuchMethod$1($.createInvocationMirror("length", "length$0",1, [], []));
 },
 get$click: function() {
  return this.noSuchMethod$1($.createInvocationMirror("click", "click$0",1, [], []));
 },
 get$game: function() {
  return this.noSuchMethod$1($.createInvocationMirror("game", "game$0",1, [], []));
 },
 get$_element: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_element", "_element$0",1, [], []));
 },
 get$toElement: function() {
  return this.noSuchMethod$1($.createInvocationMirror("toElement", "toElement$0",1, [], []));
 },
 get$_adjacentCount: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_adjacentCount", "_adjacentCount$0",1, [], []));
 },
 get$href: function() {
  return this.noSuchMethod$1($.createInvocationMirror("href", "href$0",1, [], []));
 },
 get$_m11: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_m11", "_m11$0",1, [], []));
 },
 get$totalBytes: function() {
  return this.noSuchMethod$1($.createInvocationMirror("totalBytes", "totalBytes$0",1, [], []));
 },
 get$value: function() {
  return this.noSuchMethod$1($.createInvocationMirror("value", "value$0",1, [], []));
 },
 get$touchMove: function() {
  return this.noSuchMethod$1($.createInvocationMirror("touchMove", "touchMove$0",1, [], []));
 },
 get$item1: function() {
  return this.noSuchMethod$1($.createInvocationMirror("item1", "item1$0",1, [], []));
 },
 get$currentManagerId: function() {
  return this.noSuchMethod$1($.createInvocationMirror("currentManagerId", "currentManagerId$0",1, [], []));
 },
 get$bombsLeft: function() {
  return this.noSuchMethod$1($.createInvocationMirror("bombsLeft", "bombsLeft$0",1, [], []));
 },
 get$totalSize: function() {
  return this.noSuchMethod$1($.createInvocationMirror("totalSize", "totalSize$0",1, [], []));
 },
 get$_currentTarget: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_currentTarget", "_currentTarget$0",1, [], []));
 },
 get$response: function() {
  return this.noSuchMethod$1($.createInvocationMirror("response", "response$0",1, [], []));
 },
 get$sourceColorRect: function() {
  return this.noSuchMethod$1($.createInvocationMirror("sourceColorRect", "sourceColorRect$0",1, [], []));
 },
 get$sendPort: function() {
  return this.noSuchMethod$1($.createInvocationMirror("sendPort", "sendPort$0",1, [], []));
 },
 get$_portId: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_portId", "_portId$0",1, [], []));
 },
 get$_futurePort: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_futurePort", "_futurePort$0",1, [], []));
 },
 get$url: function() {
  return this.noSuchMethod$1($.createInvocationMirror("url", "url$0",1, [], []));
 },
 get$isNegative: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isNegative", "isNegative$0",1, [], []));
 },
 get$_squareMouseMove: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_squareMouseMove", "_squareMouseMove$0",1, [], []));
 },
 get$translateX: function() {
  return this.noSuchMethod$1($.createInvocationMirror("translateX", "translateX$0",1, [], []));
 },
 get$_registry: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_registry", "_registry$0",1, [], []));
 },
 get$innerHeight: function() {
  return this.noSuchMethod$1($.createInvocationMirror("innerHeight", "innerHeight$0",1, [], []));
 },
 get$attributes: function() {
  return this.noSuchMethod$1($.createInvocationMirror("attributes", "attributes$0",1, [], []));
 },
 get$frame: function() {
  return this.noSuchMethod$1($.createInvocationMirror("frame", "frame$0",1, [], []));
 },
 get$stateChanged: function() {
  return this.noSuchMethod$1($.createInvocationMirror("stateChanged", "stateChanged$0",1, [], []));
 },
 get$_liblib$_parent: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_parent", "_liblib$_parent$0",1, [], []));
 },
 get$_liblib3$_parent: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_parent", "_liblib3$_parent$0",1, [], []));
 },
 get$_Collections: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_Collections", "_Collections$0",1, [], []));
 },
 get$shiftKey: function() {
  return this.noSuchMethod$1($.createInvocationMirror("shiftKey", "shiftKey$0",1, [], []));
 },
 get$documentElement: function() {
  return this.noSuchMethod$1($.createInvocationMirror("documentElement", "documentElement$0",1, [], []));
 },
 get$detail: function() {
  return this.noSuchMethod$1($.createInvocationMirror("detail", "detail$0",1, [], []));
 },
 get$isComplete: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isComplete", "isComplete$0",1, [], []));
 },
 get$managers: function() {
  return this.noSuchMethod$1($.createInvocationMirror("managers", "managers$0",1, [], []));
 },
 get$mouseDown: function() {
  return this.noSuchMethod$1($.createInvocationMirror("mouseDown", "mouseDown$0",1, [], []));
 },
 get$done: function() {
  return this.noSuchMethod$1($.createInvocationMirror("done", "done$0",1, [], []));
 },
 get$isEmpty: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isEmpty", "isEmpty$0",1, [], []));
 },
 get$_port: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_port", "_port$0",1, [], []));
 },
 get$scaleX: function() {
  return this.noSuchMethod$1($.createInvocationMirror("scaleX", "scaleX$0",1, [], []));
 },
 get$field: function() {
  return this.noSuchMethod$1($.createInvocationMirror("field", "field$0",1, [], []));
 },
 get$_playAudio: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_playAudio", "_playAudio$0",1, [], []));
 },
 get$context2d: function() {
  return this.noSuchMethod$1($.createInvocationMirror("context2d", "context2d$0",1, [], []));
 },
 get$location: function() {
  return this.noSuchMethod$1($.createInvocationMirror("location", "location$0",1, [], []));
 },
 get$bestTimeMilliseconds: function() {
  return this.noSuchMethod$1($.createInvocationMirror("bestTimeMilliseconds", "bestTimeMilliseconds$0",1, [], []));
 },
 get$_liblib9$_callback: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_callback", "_liblib9$_callback$0",1, [], []));
 },
 get$resize: function() {
  return this.noSuchMethod$1($.createInvocationMirror("resize", "resize$0",1, [], []));
 },
 get$ports: function() {
  return this.noSuchMethod$1($.createInvocationMirror("ports", "ports$0",1, [], []));
 },
 get$_isolateId: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_isolateId", "_isolateId$0",1, [], []));
 },
 get$_liblib9$_isolateId: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_isolateId", "_liblib9$_isolateId$0",1, [], []));
 },
 get$x: function() {
  return this.noSuchMethod$1($.createInvocationMirror("x", "x$0",1, [], []));
 },
 get$gameEnded: function() {
  return this.noSuchMethod$1($.createInvocationMirror("gameEnded", "gameEnded$0",1, [], []));
 },
 get$navigator: function() {
  return this.noSuchMethod$1($.createInvocationMirror("navigator", "navigator$0",1, [], []));
 },
 get$_gameElement: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_gameElement", "_gameElement$0",1, [], []));
 },
 get$isSetter: function() {
  return this.noSuchMethod$1($.createInvocationMirror("isSetter", "isSetter$0",1, [], []));
 },
 get$_scaledBoardOffset: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_scaledBoardOffset", "_scaledBoardOffset$0",1, [], []));
 },
 get$_serialized: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_serialized", "_serialized$0",1, [], []));
 },
 get$_m00: function() {
  return this.noSuchMethod$1($.createInvocationMirror("_m00", "_m00$0",1, [], []));
 },
 set$_previous: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_previous=", "_previous=$1",2, [$0], []));
 },
 set$font: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("font=", "font=$1",2, [$0], []));
 },
 set$display: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("display=", "display=$1",2, [$0], []));
 },
 set$responseType: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("responseType=", "responseType=$1",2, [$0], []));
 },
 set$currentContext: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("currentContext=", "currentContext=$1",2, [$0], []));
 },
 set$innerHTML: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("innerHTML=", "innerHTML=$1",2, [$0], []));
 },
 set$value: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("value=", "value=$1",2, [$0], []));
 },
 set$src: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("src=", "src=$1",2, [$0], []));
 },
 set$type: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("type=", "type=$1",2, [$0], []));
 },
 set$width: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("width=", "width=$1",2, [$0], []));
 },
 set$cursor: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("cursor=", "cursor=$1",2, [$0], []));
 },
 set$buffer: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("buffer=", "buffer=$1",2, [$0], []));
 },
 set$size: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("size=", "size=$1",2, [$0], []));
 },
 set$rootContext: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("rootContext=", "rootContext=$1",2, [$0], []));
 },
 set$height: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("height=", "height=$1",2, [$0], []));
 },
 set$_next: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("_next=", "_next=$1",2, [$0], []));
 },
 set$globalAlpha: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("globalAlpha=", "globalAlpha=$1",2, [$0], []));
 },
 set$length: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("length=", "length=$1",2, [$0], []));
 },
 set$textBaseline: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("textBaseline=", "textBaseline=$1",2, [$0], []));
 },
 set$fillStyle: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("fillStyle=", "fillStyle=$1",2, [$0], []));
 },
 set$game: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("game=", "game=$1",2, [$0], []));
 },
 set$nextIsolateId: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("nextIsolateId=", "nextIsolateId=$1",2, [$0], []));
 },
 set$textAlign: function($0) {
  return this.noSuchMethod$1($.createInvocationMirror("textAlign=", "textAlign=$1",2, [$0], []));
 }
};

$$.DoubleLinkedQueueEntry = {"": ["_previous<", "_next=", "_element>"],
 "super": "Object",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"": ["_previous", "_next", "_element"],
 "super": "DoubleLinkedQueueEntry",
 remove$0: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"": ["_sentinel"],
 "super": "Object",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor(collection).iterator$0(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    this._sentinel.prepend$1(t2);
  }
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 removeFirst$0: function() {
  return this._sentinel._next.remove$0();
},
 get$last: function() {
  return this._sentinel._previous.get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  $.getInterceptor(this).forEach$1(this, new $.DoubleLinkedQueue_length_anon(t1));
  return t1.counter_1;
},
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 every$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) !== true)
      return false;
  }
  return true;
},
 some$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      return true;
  }
  return false;
},
 map$1: function(f) {
  var other, entry, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    $.getInterceptor(other).addLast$1(other, f.call$1(entry.get$_element()));
  }
  return other;
},
 filter$1: function(f) {
  var other, entry, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      $.getInterceptor(other).addLast$1(other, entry.get$_element());
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"": ["_sentinel", "_currentEntry"],
 "super": "Object",
 get$hasNext: function() {
  return !(this._currentEntry.get$_next() === this._sentinel);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$.SequenceIterator = {"": ["_sequence", "_position"],
 "super": "Object",
 get$hasNext: function() {
  var t1, t2;
  t1 = this._position;
  t2 = this._sequence;
  return $.lt(t1, $.getInterceptor(t2).get$length(t2));
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() === true) {
    t1 = this._sequence;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.next$0$bailout0(1, t1);
    t3 = this._position;
    this._position = t3 + 1;
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  }
  throw $.$$throw($.StateError$("No more elements"));
},
 next$0$bailout0: function(state0, env0) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      var t1, t3;
      if (state0 === 1 || state0 === 0 && this.get$hasNext() === true)
        switch (state0) {
          case 0:
            t1 = this._sequence;
          case 1:
            state0 = 0;
            t3 = this._position;
            this._position = t3 + 1;
            return $.index(t1, t3);
        }
      throw $.$$throw($.StateError$("No more elements"));
  }
}
};

$$._HashSetImpl = {"": ["_backingMap>"],
 "super": "Object",
 clear$0: function() {
  var t1 = this._backingMap;
  $.getInterceptor(t1).clear$0(t1);
},
 add$1: function(value) {
  this._backingMap.oprator$indexSet$2(value, value);
},
 contains$1: function(value) {
  return this._backingMap.containsKey$1(value);
},
 remove$1: function(value) {
  if (this._backingMap.containsKey$1(value) !== true)
    return false;
  this._backingMap.remove$1(value);
  return true;
},
 addAll$1: function(collection) {
  $.getInterceptor(collection).forEach$1(collection, new $._HashSetImpl_addAll_anon(this));
},
 forEach$1: function(f) {
  var t1 = this._backingMap;
  $.getInterceptor(t1).forEach$1(t1, new $._HashSetImpl_forEach_anon(f));
},
 map$1: function(f) {
  var result, t1;
  result = $.Set_Set();
  t1 = this._backingMap;
  $.getInterceptor(t1).forEach$1(t1, new $._HashSetImpl_map_anon(f, result));
  return result;
},
 filter$1: function(f) {
  var result, t1;
  result = $.Set_Set();
  t1 = this._backingMap;
  $.getInterceptor(t1).forEach$1(t1, new $._HashSetImpl_filter_anon(f, result));
  return result;
},
 every$1: function(f) {
  var keys = this._backingMap.get$keys();
  return $.getInterceptor(keys).every$1(keys, f);
},
 some$1: function(f) {
  var keys = this._backingMap.get$keys();
  return $.getInterceptor(keys).some$1(keys, f);
},
 get$isEmpty: function() {
  var t1 = this._backingMap;
  return $.getInterceptor(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this._backingMap;
  return $.getInterceptor(t1).get$length(t1);
},
 iterator$0: function() {
  return $._HashSetIterator$(this);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 _HashSetImpl$0: function() {
  this._backingMap = $._HashMapImpl$();
},
 is$Collection: function() { return true; }
};

$$._HashSetIterator = {"": ["_liblib5$_entries", "_nextValidIndex"],
 "super": "Object",
 get$hasNext: function() {
  var t1, t2, t3;
  t1 = this._nextValidIndex;
  t2 = this._liblib5$_entries;
  t3 = t2.length;
  if (t1 >= t3)
    return false;
  if (t1 < 0)
    throw $.ioore(t1);
  if (t2[t1] === $.CTC9)
    this._advance$0();
  return this._nextValidIndex < t3;
},
 next$0: function() {
  var t1, t2, res;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._liblib5$_entries;
  t2 = this._nextValidIndex;
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  res = t1[t2];
  this._advance$0();
  return res;
},
 _advance$0: function() {
  var t1, length$, t2, entry;
  t1 = this._liblib5$_entries;
  length$ = t1.length;
  do {
    t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if (t2 >= length$)
      break;
    t2 = this._nextValidIndex;
    if (t2 < 0 || t2 >= length$)
      throw $.ioore(t2);
    entry = t1[t2];
  } while (entry == null || entry === $.CTC9);
},
 _HashSetIterator$1: function(set_) {
  this._advance$0();
}
};

$$.String = {
 "super": "Object",
 is$String: true
};

$$._StringBufferImpl = {"": ["_buffer", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return $.eq(this._length, 0);
},
 add$1: function(obj) {
  var str, t1, t3;
  str = $.getInterceptor(obj).toString$0(obj);
  if (str == null || $.getInterceptor(str).get$isEmpty(str) === true)
    return this;
  t1 = this._buffer;
  $.getInterceptor(t1).add$1(t1, str);
  t1 = this._length;
  if (typeof t1 !== 'number')
    return this.add$1$bailout(1, str, t1);
  t3 = $.getInterceptor(str).get$length(str);
  if (typeof t3 !== 'number')
    return this.add$1$bailout(2, t3, t1);
  this._length = t1 + t3;
  return this;
},
 add$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      str = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      str = $.getInterceptor(obj).toString$0(obj);
      if (str == null || $.getInterceptor(str).get$isEmpty(str) === true)
        return this;
      t1 = this._buffer;
      $.getInterceptor(t1).add$1(t1, str);
      t1 = this._length;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor(str).get$length(str);
    case 2:
      var str, t1, t3;
      state0 = 0;
      this._length = $.add(t1, t3);
      return this;
  }
},
 addAll$1: function(objects) {
  var t1, t2;
  for (t1 = $.getInterceptor(objects).iterator$0(objects); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.getInterceptor(this).add$1(this, t2);
  }
  return this;
},
 clear$0: function() {
  this._buffer = $.List_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  var t1, result;
  t1 = this._buffer;
  if ($.eqB($.getInterceptor(t1).get$length(t1), 0))
    return "";
  t1 = this._buffer;
  if ($.eqB($.getInterceptor(t1).get$length(t1), 1))
    return $.index(this._buffer, 0);
  result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), "");
  t1 = this._buffer;
  $.getInterceptor(t1).clear$0(t1);
  t1 = this._buffer;
  $.getInterceptor(t1).add$1(t1, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  $.getInterceptor(this).clear$0(this);
  $.getInterceptor(this).add$1(this, content$);
}
};

$$.ObjectInterceptor = {
 "super": "Object",
 toString$0: function(receiver) { return receiver.toString$0(); },
 add$1: function(receiver, a0) { return receiver.add$1(a0); },
 map$1: function(receiver, a0) { return receiver.map$1(a0); },
 iterator$0: function(receiver) { return receiver.iterator$0(); },
 charCodeAt$1: function(receiver, a0) { return receiver.charCodeAt$1(a0); },
 replaceAll$2: function(receiver, a0, a1) { return receiver.replaceAll$2(a0, a1); },
 removeLast$0: function(receiver) { return receiver.removeLast$0(); },
 addLast$1: function(receiver, a0) { return receiver.addLast$1(a0); },
 indexOf$2: function(receiver, a0, a1) { return receiver.indexOf$2(a0, a1); },
 insertRange$3: function(receiver, a0, a1, a2) { return receiver.insertRange$3(a0, a1, a2); },
 clear$0: function(receiver) { return receiver.clear$0(); },
 substring$1: function(receiver, a0) { return receiver.substring$1(a0); },
 contains$2: function(receiver, a0, a1) { return receiver.contains$2(a0, a1); },
 toInt$0: function(receiver) { return receiver.toInt$0(); },
 ceil$0: function(receiver) { return receiver.ceil$0(); },
 operator$eq$1: function(receiver, a0) { return receiver.operator$eq$1(a0); },
 substring$2: function(receiver, a0, a1) { return receiver.substring$2(a0, a1); },
 split$1: function(receiver, a0) { return receiver.split$1(a0); },
 remainder$1: function(receiver, a0) { return receiver.remainder$1(a0); },
 get$isEmpty: function(receiver) { return receiver.get$isEmpty(); },
 set$length: function(receiver) { return receiver.set$length(); },
 removeRange$2: function(receiver, a0, a1) { return receiver.removeRange$2(a0, a1); },
 get$isNegative: function(receiver) { return receiver.get$isNegative(); },
 filter$1: function(receiver, a0) { return receiver.filter$1(a0); },
 get$isNaN: function(receiver) { return receiver.get$isNaN(); },
 get$length: function(receiver) { return receiver.get$length(); },
 forEach$1: function(receiver, a0) { return receiver.forEach$1(a0); },
 getRange$2: function(receiver, a0, a1) { return receiver.getRange$2(a0, a1); },
 sort$1: function(receiver, a0) { return receiver.sort$1(a0); },
 get$hashCode: function(receiver) { return receiver.get$hashCode(); },
 contains$1: function(receiver, a0) { return receiver.contains$1(a0); },
 toStringAsFixed$1: function(receiver, a0) { return receiver.toStringAsFixed$1(a0); },
 get$isInfinite: function(receiver) { return receiver.get$isInfinite(); },
 some$1: function(receiver, a0) { return receiver.some$1(a0); },
 get$last: function(receiver) { return receiver.get$last(); },
 startsWith$1: function(receiver, a0) { return receiver.startsWith$1(a0); },
 floor$0: function(receiver) { return receiver.floor$0(); },
 allMatches$1: function(receiver, a0) { return receiver.allMatches$1(a0); },
 every$1: function(receiver, a0) { return receiver.every$1(a0); },
 truncate$0: function(receiver) { return receiver.truncate$0(); },
 endsWith$1: function(receiver, a0) { return receiver.endsWith$1(a0); },
 concat$1: function(receiver, a0) { return receiver.concat$1(a0); },
 compareTo$1: function(receiver, a0) { return receiver.compareTo$1(a0); },
 abs$0: function(receiver) { return receiver.abs$0(); },
 addAll$1: function(receiver, a0) { return receiver.addAll$1(a0); }
};

$$.JSFunction = {
 "super": "Object",
 toString$0: function(receiver) {
  return "Closure";
},
 is$Function: true
};

$$.JSBool = {
 "super": "Object",
 toString$0: function(receiver) {
  return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver ? 519018 : 218159;
},
 is$bool: true
};

$$.JSNull = {
 "super": "Object",
 toString$0: function(receiver) {
  return "null";
},
 get$hashCode: function(receiver) {
  return 0;
}
};

$$.JSArray = {
 "super": "Object",
 add$1: function(receiver, value) {
  $.checkGrowable(receiver, "add");
  receiver.push(value);
},
 removeLast$0: function(receiver) {
  $.checkGrowable(receiver, "removeLast");
  if (receiver.length === 0)
    throw $.$$throw($.RangeError$value(-1));
  return receiver.pop();
},
 filter$1: function(receiver, f) {
  return $.Collections_filter(receiver, [], f);
},
 addAll$1: function(receiver, collection) {
  var t1, t2;
  for (t1 = $.getInterceptor(collection).iterator$0(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.getInterceptor(receiver).add$1(receiver, t2);
  }
},
 addLast$1: function(receiver, value) {
  $.checkGrowable(receiver, "addLast");
  receiver.push(value);
},
 clear$0: function(receiver) {
  this.set$length(receiver, 0);
},
 forEach$1: function(receiver, f) {
  return $.Collections_forEach(receiver, f);
},
 map$1: function(receiver, f) {
  return $.Collections_map(receiver, [], f);
},
 getRange$2: function(receiver, start, length$) {
  var t1, end;
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if (end > receiver.length)
    throw $.$$throw($.RangeError$value(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
},
 insertRange$3: function(receiver, start, length$, initialValue) {
  return $.listInsertRange(receiver, start, length$, initialValue);
},
 get$last: function(receiver) {
  var t1, t2;
  t1 = receiver.length;
  t2 = t1 - 1;
  if (t2 < 0)
    throw $.ioore(t2);
  return receiver[t2];
},
 removeRange$2: function(receiver, start, length$) {
  var receiverLength, t1, t2;
  $.checkGrowable(receiver, "removeRange");
  if ($.eqB(length$, 0))
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  receiverLength = receiver.length;
  if (start < 0 || start >= receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = start + length$;
  if (t1 > receiverLength)
    throw $.$$throw($.RangeError$value(t1));
  t2 = receiverLength - length$;
  $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
  $.getInterceptor(receiver).set$length(receiver, t2);
},
 some$1: function(receiver, f) {
  return $.Collections_some(receiver, f);
},
 every$1: function(receiver, f) {
  return $.Collections_every(receiver, f);
},
 sort$1: function(receiver, compare) {
  $.checkMutable(receiver, "sort");
  $.coreSort(receiver, compare);
},
 indexOf$2: function(receiver, element, start) {
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  return $.Arrays_indexOf(receiver, element, start, receiver.length);
},
 contains$1: function(receiver, other) {
  var i;
  for (i = 0; i < receiver.length; ++i)
    if ($.eqB(other, receiver[i]))
      return true;
  return false;
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return $.Collections_collectionToString(receiver);
},
 iterator$0: function(receiver) {
  return $.ListIterator$(receiver);
},
 get$hashCode: function(receiver) {
  return $.Primitives_objectHashCode(receiver);
},
 get$length: function(receiver) {
  return receiver.length;
},
 set$length: function(receiver, newLength) {
  if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
    throw $.$$throw($.ArgumentError$(newLength));
  if (newLength < 0)
    throw $.$$throw($.RangeError$value(newLength));
  $.checkGrowable(receiver, "set length");
  receiver.length = newLength;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JSNumber = {
 "super": "Object",
 compareTo$1: function(receiver, b) {
  var bIsNegative;
  if (!(typeof b === 'number'))
    throw $.$$throw($.ArgumentError$(b));
  if (receiver < b)
    return -1;
  else if (receiver > b)
    return 1;
  else if (receiver === b) {
    if (receiver === 0) {
      bIsNegative = $.getInterceptor(b).get$isNegative(b);
      if ($.eqB(this.get$isNegative(receiver), bIsNegative))
        return 0;
      if (this.get$isNegative(receiver) === true)
        return -1;
      return 1;
    }
    return 0;
  } else if (this.get$isNaN(receiver) === true) {
    if ($.getInterceptor(b).get$isNaN(b) === true)
      return 0;
    return 1;
  } else
    return -1;
},
 get$isNegative: function(receiver) {
  return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
},
 get$isNaN: function(receiver) {
  return isNaN(receiver);
},
 remainder$1: function(receiver, b) {
  $.checkNull(b);
  if (!(typeof b === 'number'))
    throw $.$$throw($.ArgumentError$(b));
  return receiver % b;
},
 abs$0: function(receiver) {
  return Math.abs(receiver);
},
 toInt$0: function(receiver) {
  var truncated;
  if (this.get$isNaN(receiver) === true)
    throw $.$$throw($.FormatException$("NaN"));
  if (this.get$isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$("Infinity"));
  truncated = this.truncate$0(receiver);
  return truncated == -0.0 ? 0 : truncated;
},
 ceil$0: function(receiver) {
  return Math.ceil(receiver);
},
 floor$0: function(receiver) {
  return Math.floor(receiver);
},
 get$isInfinite: function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
},
 truncate$0: function(receiver) {
  return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
},
 toStringAsFixed$1: function(receiver, fractionDigits) {
  var result;
  $.checkNum(fractionDigits);
  result = receiver.toFixed(fractionDigits);
  if (receiver === 0 && this.get$isNegative(receiver) === true)
    return "-" + result;
  return result;
},
 toString$0: function(receiver) {
  if (receiver === 0 && (1 / receiver) < 0)
    return "-0.0";
  else
    return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver & 536870911;
}
};

$$.JSInt = {
 "super": "JSNumber"
};

$$.JSDouble = {
 "super": "JSNumber"
};

$$.JSString = {
 "super": "Object",
 charCodeAt$1: function(receiver, index) {
  if (!(typeof index === 'number'))
    throw $.$$throw($.ArgumentError$(index));
  if (index < 0)
    throw $.$$throw($.RangeError$value(index));
  if (index >= receiver.length)
    throw $.$$throw($.RangeError$value(index));
  return receiver.charCodeAt(index);
},
 allMatches$1: function(receiver, str) {
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
},
 concat$1: function(receiver, other) {
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  return receiver + other;
},
 endsWith$1: function(receiver, other) {
  var otherLength, t1;
  $.checkString(other);
  otherLength = $.getInterceptor(other).get$length(other);
  t1 = receiver.length;
  if ($.gtB(otherLength, t1))
    return false;
  if (typeof otherLength !== 'number')
    throw $.iae(otherLength);
  return $.eq(other, this.substring$1(receiver, t1 - otherLength));
},
 replaceAll$2: function(receiver, from, to) {
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
},
 split$1: function(receiver, pattern) {
  $.checkNull(pattern);
  return $.stringSplitUnchecked(receiver, pattern);
},
 startsWith$1: function(receiver, other) {
  var otherLength;
  $.checkString(other);
  otherLength = $.getInterceptor(other).get$length(other);
  if ($.gtB(otherLength, receiver.length))
    return false;
  return other == receiver.substring(0, otherLength);
},
 substring$2: function(receiver, startIndex, endIndex) {
  $.checkNum(startIndex);
  if (endIndex == null)
    endIndex = receiver.length;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, receiver.length))
    throw $.$$throw($.RangeError$value(endIndex));
  return receiver.substring(startIndex, endIndex);
},
 substring$1: function($,startIndex) {
  return this.substring$2($,startIndex,null)
},
 indexOf$2: function(receiver, other, start) {
  $.checkNull(other);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  if (start < 0)
    return -1;
  return receiver.indexOf(other, start);
},
 contains$2: function(receiver, other, startIndex) {
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
},
 contains$1: function($,other) {
  return this.contains$2($,other,0)
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 compareTo$1: function(receiver, other) {
  var t1;
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  if (receiver === other)
    t1 = 0;
  else
    t1 = receiver < other ? -1 : 1;
  return t1;
},
 toString$0: function(receiver) {
  return receiver;
},
 get$hashCode: function(receiver) {
  var hash, i, hash0, hash1;
  for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = hash1 ^ (hash1 >> 6);
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = hash0 ^ (hash0 >> 11);
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
},
 get$length: function(receiver) {
  return receiver.length;
},
 is$String: true
};

$$._Audio = {"": ["_audioLoader", "_buffers"],
 "super": "Object",
 get$completedBytes: function() {
  var t1 = this._audioLoader;
  if (t1 == null)
    return 0;
  else
    return t1.get$completedBytes();
},
 get$totalBytes: function() {
  var t1 = this._audioLoader;
  if (t1 == null)
    return 0;
  else
    return t1.get$totalBytes();
},
 get$done: function() {
  var t1 = this._audioLoader;
  if (t1 == null)
    return true;
  else
    return $.eq(t1.get$state(), "loaded");
},
 get$_audioContext: function() {
  var t1 = this._audioLoader;
  if (!(t1 == null))
    return t1.get$context();
  else
    return;
},
 _onLoad$1: function(args) {
  var t1, t2, t4, t3, t5;
  t1 = $.getInterceptor($.CTC).iterator$0($.CTC);
  t2 = this._buffers;
  if (typeof t2 !== 'object' || t2 === null || (t2.constructor !== Array || !!t2.immutable$list) && !t2.is$JavaScriptIndexingBehavior())
    return this._onLoad$1$bailout(1, t2, t1);
  t4 = this._audioLoader;
  for (; t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    t5 = t4.getResource$1($._Audio__getAudioPath(t3));
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    t2[t3] = t5;
  }
},
 _onLoad$1$bailout: function(state0, t2, t1) {
  var t4, t3;
  t4 = this._audioLoader;
  for (; t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    $.indexSet(t2, t3, t4.getResource$1($._Audio__getAudioPath(t3)));
  }
},
 get$_onLoad: function() { return new $.BoundClosure(this, '_onLoad$1'); },
 _playAudio$1: function(name$) {
  switch (name$) {
    case "Pop":
      name$ = "Pop" + $.S($.rnd().nextInt$1(8));
      break;
    case "Bomb":
      name$ = "Bomb" + $.S($.rnd().nextInt$1(4));
      break;
  }
  this._playAudioCore$1(name$);
},
 get$_playAudio: function() { return new $.BoundClosure(this, '_playAudio$1'); },
 _playAudioCore$1: function(name$) {
  var source;
  if (!(this.get$_audioContext() == null)) {
    source = this.get$_audioContext().createBufferSource$0();
    source.set$buffer($.index(this._buffers, name$));
    source.connect$3(this.get$_audioContext().get$destination(), 0, 0);
    source.start$1(0);
  }
},
 _Audio$_internal$1: function(_audioLoader) {
  var t1, t2;
  t1 = this._audioLoader;
  t2 = t1.get$progress();
  $.getInterceptor(t2).add$1(t2, $._onProgress);
  t2 = t1.get$loaded();
  $.getInterceptor(t2).add$1(t2, $._onLoaded);
  t2 = t1.get$loaded();
  $.getInterceptor(t2).add$1(t2, this.get$_onLoad());
  t2 = $.GameAudio_audioEvent();
  $.getInterceptor(t2).add$1(t2, this.get$_playAudio());
  t1.load$0();
}
};

$$.AbstractWorkerEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.AudioContextEvents = {"": ["_ptr"],
 "super": "Events",
 get$complete: function() {
  return this.operator$index$1("complete");
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$.BatteryManagerEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.BodyElementEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() { return this.get$load().call$0(); },
 get$popState: function() {
  return this.operator$index$1("popstate");
},
 get$resize: function() {
  return this.operator$index$1("resize");
}
};

$$.DOMApplicationCacheEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$progress: function() {
  return this.operator$index$1("progress");
}
};

$$.DedicatedWorkerContextEvents = {"": ["_ptr"],
 "super": "WorkerContextEvents"
};

$$.DocumentEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$click: function() {
  return this.operator$index$1("click");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$keyDown: function() {
  return this.operator$index$1("keydown");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() { return this.get$load().call$0(); },
 get$mouseDown: function() {
  return this.operator$index$1("mousedown");
},
 get$mouseMove: function() {
  return this.operator$index$1("mousemove");
},
 get$mouseOut: function() {
  return this.operator$index$1("mouseout");
},
 get$mouseUp: function() {
  return this.operator$index$1("mouseup");
},
 get$reset: function() {
  return this.operator$index$1("reset");
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$touchMove: function() {
  return this.operator$index$1("touchmove");
}
};

$$._ChildrenElementList = {"": ["_liblib$_element>", "_childElements"],
 "super": "Object",
 _toList$0: function() {
  var t1, t3, output, len, i, t2;
  t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  t3 = t1.length;
  output = $.List_List(t3);
  len = t1.length;
  i = 0;
  for (; i < len; ++i) {
    t2 = t1[i];
    if (i >= t3)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      output = env2;
      len = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._childElements;
    case 1:
      state0 = 0;
      output = $.List_List($.getInterceptor(t1).get$length(t1));
      len = $.getInterceptor(t1).get$length(t1);
    case 2:
      var t1, output, len, i, t2;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i) {
        t2 = $.index(t1, i);
        if (i >= output.length)
          throw $.ioore(i);
        output[i] = t2;
      }
      return output;
  }
},
 contains$1: function(element) {
  var t1 = this._childElements;
  return $.getInterceptor(t1).contains$1(t1, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = this._childElements, t1 = $.getInterceptor(t1).iterator$0(t1); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output, t1, t2;
  output = [];
  t1 = new $._ChildrenElementList_filter_anon(f, output);
  for (t2 = this._childElements, t2 = $.getInterceptor(t2).iterator$0(t2); t2.get$hasNext() === true;)
    t1.call$1(t2.next$0());
  return $._FrozenElementList$_wrap(output);
},
 every$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
},
 some$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
},
 map$1: function(f) {
  var out, t1, t2;
  out = [];
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.getInterceptor(out).add$1(out, f.call$1(t2));
  }
  return out;
},
 get$isEmpty: function() {
  return this._liblib$_element.get$$$dom_firstElementChild() == null;
},
 get$length: function() {
  var t1 = this._childElements;
  return $.getInterceptor(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 oprator$indexSet$2: function(index, value) {
  this._liblib$_element.$$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$(""));
},
 add$1: function(value) {
  this._liblib$_element.$$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  this._liblib$_element.$$dom_appendChild$1(value);
  return value;
},
 iterator$0: function() {
  var t1 = this._toList$0();
  return $.getInterceptor(t1).iterator$0(t1);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor(collection).iterator$0(collection), t2 = this._liblib$_element; t1.get$hasNext() === true;)
    t2.$$dom_appendChild$1(t1.next$0());
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("TODO(jacobr): should we impl?"));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnimplementedError$(null));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnimplementedError$(null));
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($._Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 clear$0: function() {
  this._liblib$_element.set$text("");
},
 removeLast$0: function() {
  var result = $.getInterceptor(this).get$last(this);
  if (!(result == null))
    this._liblib$_element.$$dom_removeChild$1(result);
  return result;
},
 get$last: function() {
  return this._liblib$_element.get$$$dom_lastElementChild();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"": ["_nodeList"],
 "super": "Object",
 contains$1: function(element) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 map$1: function(f) {
  var out, t1, t2;
  out = [];
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.getInterceptor(out).add$1(out, f.call$1(t2));
  }
  return out;
},
 filter$1: function(f) {
  var out, t1, t2;
  out = [];
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      $.getInterceptor(out).add$1(out, t2);
  }
  return out;
},
 every$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
},
 some$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
},
 get$isEmpty: function() {
  var t1 = this._nodeList;
  return $.getInterceptor(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this._nodeList;
  return $.getInterceptor(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 set$length: function(newLength) {
  var t1 = this._nodeList;
  $.getInterceptor(t1).set$length(t1, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$(""));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$(""));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$(""));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$(""));
},
 getRange$2: function(start, rangeLength) {
  var t1 = this._nodeList;
  return $._FrozenElementList$_wrap($.getInterceptor(t1).getRange$2(t1, start, rangeLength));
},
 indexOf$2: function(element, start) {
  var t1 = this._nodeList;
  return $.getInterceptor(t1).indexOf$2(t1, element, start);
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 get$last: function() {
  var t1 = this._nodeList;
  return $.getInterceptor(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"": ["_liblib$_list", "_index"],
 "super": "Object",
 next$0: function() {
  var t1, t2;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._liblib$_list;
  t2 = this._index;
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 get$hasNext: function() {
  var t1, t2;
  t1 = this._index;
  t2 = this._liblib$_list;
  return $.lt(t1, $.getInterceptor(t2).get$length(t2));
}
};

$$._ElementAttributeMap = {"": ["_liblib$_element>"],
 "super": "Object",
 containsKey$1: function(key) {
  return this._liblib$_element.$$dom_hasAttribute$1(key);
},
 operator$index$1: function(key) {
  return this._liblib$_element.$$dom_getAttribute$1(key);
},
 oprator$indexSet$2: function(key, value) {
  this._liblib$_element.$$dom_setAttribute$2(key, $.S(value));
},
 putIfAbsent$2: function(key, ifAbsent) {
  if (this._liblib$_element.$$dom_hasAttribute$1(key) !== true)
    this.oprator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 remove$1: function(key) {
  var t1, value;
  t1 = this._liblib$_element;
  value = t1.$$dom_getAttribute$1(key);
  t1.$$dom_removeAttribute$1(key);
  return value;
},
 clear$0: function() {
  var attributes, i;
  attributes = this._liblib$_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.clear$0$bailout(1, attributes);
  i = attributes.length - 1;
  for (; i >= 0; --i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    this.remove$1(attributes[i].get$name());
  }
},
 clear$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      attributes = env0;
      break;
    case 2:
      attributes = env1;
      i = env0;
      break;
  }
  switch (state0) {
    case 0:
      attributes = this._liblib$_element.get$$$dom_attributes();
    case 1:
      state0 = 0;
      i = $.sub($.getInterceptor(attributes).get$length(attributes), 1);
    case 2:
      var attributes, i;
      state0 = 0;
      for (; $.geB(i, 0); i = $.sub(i, 1))
        this.remove$1($.index(attributes, i).get$name());
  }
},
 forEach$1: function(f) {
  var attributes, len, i, item;
  attributes = this._liblib$_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.forEach$1$bailout(1, f, attributes);
  len = attributes.length;
  i = 0;
  for (; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    item = attributes[i];
    f.call$2(item.get$name(), item.get$value());
  }
},
 forEach$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      attributes = env1;
      f = env0;
      break;
    case 2:
      attributes = env2;
      len = env1;
      f = env0;
      break;
  }
  switch (state0) {
    case 0:
      attributes = this._liblib$_element.get$$$dom_attributes();
    case 1:
      state0 = 0;
      len = $.getInterceptor(attributes).get$length(attributes);
    case 2:
      var attributes, f, len, i, item;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i) {
        item = $.index(attributes, i);
        f.call$2(item.get$name(), item.get$value());
      }
  }
},
 get$keys: function() {
  var attributes, t2, keys, len, i, t1;
  attributes = this._liblib$_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$keys$bailout(1, attributes);
  t2 = attributes.length;
  keys = $.List_List(t2);
  len = attributes.length;
  i = 0;
  for (; i < len; ++i) {
    t1 = attributes[i].get$name();
    if (i >= t2)
      throw $.ioore(i);
    keys[i] = t1;
  }
  return keys;
},
 get$keys$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      attributes = env0;
      break;
    case 2:
      keys = env2;
      len = env1;
      attributes = env0;
      break;
  }
  switch (state0) {
    case 0:
      attributes = this._liblib$_element.get$$$dom_attributes();
    case 1:
      state0 = 0;
      keys = $.List_List($.getInterceptor(attributes).get$length(attributes));
      len = $.getInterceptor(attributes).get$length(attributes);
    case 2:
      var attributes, keys, len, i, t1;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i) {
        t1 = $.index(attributes, i).get$name();
        if (i >= keys.length)
          throw $.ioore(i);
        keys[i] = t1;
      }
      return keys;
  }
},
 get$values: function() {
  var attributes, t2, values, len, i, t1;
  attributes = this._liblib$_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$values$bailout(1, attributes);
  t2 = attributes.length;
  values = $.List_List(t2);
  len = attributes.length;
  i = 0;
  for (; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    t1 = attributes[i].get$value();
    if (i >= t2)
      throw $.ioore(i);
    values[i] = t1;
  }
  return values;
},
 get$values$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      attributes = env0;
      break;
    case 2:
      values = env2;
      len = env1;
      attributes = env0;
      break;
  }
  switch (state0) {
    case 0:
      attributes = this._liblib$_element.get$$$dom_attributes();
    case 1:
      state0 = 0;
      values = $.List_List($.getInterceptor(attributes).get$length(attributes));
      len = $.getInterceptor(attributes).get$length(attributes);
    case 2:
      var attributes, values, len, i, t1;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i) {
        t1 = $.index(attributes, i).get$value();
        if (i >= values.length)
          throw $.ioore(i);
        values[i] = t1;
      }
      return values;
  }
},
 get$length: function() {
  var t1 = this._liblib$_element.get$$$dom_attributes();
  return $.getInterceptor(t1).get$length(t1);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 is$Map: function() { return true; }
};

$$.ElementEvents = {"": ["_ptr"],
 "super": "Events",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$click: function() {
  return this.operator$index$1("click");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$keyDown: function() {
  return this.operator$index$1("keydown");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() { return this.get$load().call$0(); },
 get$mouseDown: function() {
  return this.operator$index$1("mousedown");
},
 get$mouseMove: function() {
  return this.operator$index$1("mousemove");
},
 get$mouseOut: function() {
  return this.operator$index$1("mouseout");
},
 get$mouseUp: function() {
  return this.operator$index$1("mouseup");
},
 get$reset: function() {
  return this.operator$index$1("reset");
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$touchMove: function() {
  return this.operator$index$1("touchmove");
}
};

$$.EventSourceEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$open: function() {
  return this.operator$index$1("open");
},
 open$2: function(arg0, arg1) { return this.get$open().call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$.Events = {"": ["_ptr"],
 "super": "Object",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"": ["_ptr", "_type"],
 "super": "Object",
 add$2: function(listener, useCapture) {
  this._ptr.$$dom_addEventListener$3(this._type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener,false)
},
 remove$2: function(listener, useCapture) {
  this._ptr.$$dom_removeEventListener$3(this._type, listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener,false)
}
};

$$.FileReaderEvents = {"": ["_ptr"],
 "super": "Events",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() { return this.get$load().call$0(); },
 get$loadEnd: function() {
  return this.operator$index$1("loadend");
},
 get$progress: function() {
  return this.operator$index$1("progress");
}
};

$$.FileWriterEvents = {"": ["_ptr"],
 "super": "Events",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$progress: function() {
  return this.operator$index$1("progress");
}
};

$$.FrameSetElementEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() { return this.get$load().call$0(); },
 get$popState: function() {
  return this.operator$index$1("popstate");
},
 get$resize: function() {
  return this.operator$index$1("resize");
}
};

$$.HttpRequestEvents = {"": ["_ptr"],
 "super": "Events",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() { return this.get$load().call$0(); },
 get$loadEnd: function() {
  return this.operator$index$1("loadend");
},
 get$progress: function() {
  return this.operator$index$1("progress");
}
};

$$.HttpRequestUploadEvents = {"": ["_ptr"],
 "super": "Events",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() { return this.get$load().call$0(); },
 get$loadEnd: function() {
  return this.operator$index$1("loadend");
},
 get$progress: function() {
  return this.operator$index$1("progress");
}
};

$$.IDBDatabaseEvents = {"": ["_ptr"],
 "super": "Events",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.IDBOpenDBRequestEvents = {"": ["_ptr"],
 "super": "IDBRequestEvents"
};

$$.IDBRequestEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.IDBTransactionEvents = {"": ["_ptr"],
 "super": "Events",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$complete: function() {
  return this.operator$index$1("complete");
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); },
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.IDBVersionChangeRequestEvents = {"": ["_ptr"],
 "super": "IDBRequestEvents"
};

$$.InputElementEvents = {"": ["_ptr"],
 "super": "ElementEvents"
};

$$.LocalWindowEvents = {"": ["_ptr"],
 "super": "Events",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$click: function() {
  return this.operator$index$1("click");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$keyDown: function() {
  return this.operator$index$1("keydown");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() { return this.get$load().call$0(); },
 get$mouseDown: function() {
  return this.operator$index$1("mousedown");
},
 get$mouseMove: function() {
  return this.operator$index$1("mousemove");
},
 get$mouseOut: function() {
  return this.operator$index$1("mouseout");
},
 get$mouseUp: function() {
  return this.operator$index$1("mouseup");
},
 get$popState: function() {
  return this.operator$index$1("popstate");
},
 get$progress: function() {
  return this.operator$index$1("progress");
},
 get$reset: function() {
  return this.operator$index$1("reset");
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$resize: function() {
  return this.operator$index$1("resize");
},
 get$touchMove: function() {
  return this.operator$index$1("touchmove");
}
};

$$.MediaElementEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$progress: function() {
  return this.operator$index$1("progress");
}
};

$$.MediaStreamEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MediaStreamTrackEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MediaStreamTrackListEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MessagePortEvents = {"": ["_ptr"],
 "super": "Events"
};

$$._ChildNodeListLazy = {"": ["_this"],
 "super": "Object",
 get$last: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor(collection).iterator$0(collection), t2 = this._this; t1.get$hasNext() === true;)
    t2.$$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = this.get$last();
  if (!(result == null))
    this._this.$$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.set$text("");
},
 oprator$indexSet$2: function(index, value) {
  this._this.$$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  var t1 = this._this.get$$$dom_childNodes();
  return $.getInterceptor(t1).iterator$0(t1);
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 get$length: function() {
  var t1 = this._this.get$$$dom_childNodes();
  return $.getInterceptor(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this._this.get$$$dom_childNodes(), index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.NotificationEvents = {"": ["_ptr"],
 "super": "Events",
 get$click: function() {
  return this.operator$index$1("click");
},
 get$close: function() {
  return this.operator$index$1("close");
},
 close$0: function() { return this.get$close().call$0(); },
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.PeerConnection00Events = {"": ["_ptr"],
 "super": "Events",
 get$open: function() {
  return this.operator$index$1("open");
},
 open$2: function(arg0, arg1) { return this.get$open().call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$.RTCDataChannelEvents = {"": ["_ptr"],
 "super": "Events",
 get$close: function() {
  return this.operator$index$1("close");
},
 close$0: function() { return this.get$close().call$0(); },
 get$error: function() {
  return this.operator$index$1("error");
},
 get$open: function() {
  return this.operator$index$1("open");
},
 open$2: function(arg0, arg1) { return this.get$open().call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$.RTCPeerConnectionEvents = {"": ["_ptr"],
 "super": "Events",
 get$open: function() {
  return this.operator$index$1("open");
},
 open$2: function(arg0, arg1) { return this.get$open().call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$.ScriptProcessorNodeEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.SharedWorkerContextEvents = {"": ["_ptr"],
 "super": "WorkerContextEvents",
 get$connect: function() {
  return this.operator$index$1("connect");
},
 connect$3: function(arg0, arg1, arg2) { return this.get$connect().call$3(arg0, arg1, arg2); }
};

$$.SpeechRecognitionEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1("error");
},
 get$start: function() {
  return this.operator$index$1("start");
},
 start$1: function(arg0) { return this.get$start().call$1(arg0); }
};

$$.TextTrackEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackCueEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackListEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.WebSocketEvents = {"": ["_ptr"],
 "super": "Events",
 get$close: function() {
  return this.operator$index$1("close");
},
 close$0: function() { return this.get$close().call$0(); },
 get$error: function() {
  return this.operator$index$1("error");
},
 get$open: function() {
  return this.operator$index$1("open");
},
 open$2: function(arg0, arg1) { return this.get$open().call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$.WorkerEvents = {"": ["_ptr"],
 "super": "AbstractWorkerEvents"
};

$$.WorkerContextEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1("error");
}
};

$$.FilteredElementList = {"": ["_node", "_childNodes"],
 "super": "Object",
 get$_filtered: function() {
  var t1 = this._childNodes;
  return $.List_List$from($.getInterceptor(t1).filter$1(t1, new $.FilteredElementList__filtered_anon()));
},
 forEach$1: function(f) {
  var t1 = this.get$_filtered();
  $.getInterceptor(t1).forEach$1(t1, f);
},
 oprator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.getInterceptor(this).get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.ArgumentError$("Invalid list length"));
  $.getInterceptor(this).removeRange$2(this, $.sub(newLength, 1), $.sub(len, newLength));
},
 add$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor(t1).add$1(t1, value);
},
 get$add: function() { return new $.BoundClosure(this, 'add$1'); },
 addAll$1: function(collection) {
  $.getInterceptor(collection).forEach$1(collection, this.get$add());
},
 addLast$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor(t1).add$1(t1, value);
},
 contains$1: function(element) {
  var t1, t2;
  if (typeof element === 'object' && element !== null && element.is$Element()) {
    t1 = this._childNodes;
    t2 = $.getInterceptor(t1).contains$1(t1, element) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("TODO(jacobr): should we impl?"));
},
 removeRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  t1 = $.getInterceptor(t1).getRange$2(t1, start, rangeLength);
  $.getInterceptor(t1).forEach$1(t1, new $.FilteredElementList_removeRange_anon());
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnimplementedError$(null));
},
 clear$0: function() {
  var t1 = this._childNodes;
  $.getInterceptor(t1).clear$0(t1);
},
 removeLast$0: function() {
  var result = $.getInterceptor(this).get$last(this);
  if (!(result == null))
    result.remove$0();
  return result;
},
 map$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).map$1(t1, f);
},
 filter$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).filter$1(t1, f);
},
 every$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).every$1(t1, f);
},
 some$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).some$1(t1, f);
},
 get$isEmpty: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).get$isEmpty(t1);
},
 get$length: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).iterator$0(t1);
},
 getRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).getRange$2(t1, start, rangeLength);
},
 indexOf$2: function(element, start) {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).indexOf$2(t1, element, start);
},
 get$last: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._JsSerializer = {"": ["_nextFreeRefId", "_visited"],
 "super": "_Serializer",
 visitSendPortSync$1: function(x) {
  if (!!x.is$_JsSendPortSync)
    return ["sendport", "nativejs", x._id];
  if (!!x.is$_LocalSendPortSync)
    return this.visitLocalSendPortSync$1(x);
  if (!!x.is$_RemoteSendPortSync)
    return this.visitRemoteSendPortSync$1(x);
  throw $.$$throw("Unknown port type " + $.S(x));
},
 visitLocalSendPortSync$1: function(x) {
  return ["sendport", "dart", $.ReceivePortSync__isolateId(), x._receivePort._portId];
},
 visitRemoteSendPortSync$1: function(x) {
  return ["sendport", "dart", x.get$_receivePort().get$_isolateId(), x.get$_receivePort().get$_portId()];
}
};

$$._JsDeserializer = {"": ["_deserialized"],
 "super": "_Deserializer",
 deserializeSendPort$1: function(x) {
  var tag = $.index(x, 1);
  switch (tag) {
    case "nativejs":
      return $._JsSendPortSync$($.index(x, 2));
    case "dart":
      return $.ReceivePortSync__lookup($.index(x, 2), $.index(x, 3));
    default:
      throw $.$$throw("Illegal SendPortSync type: " + $.S(tag));
  }
}
};

$$._JsSendPortSync = {"": ["_id>"],
 "super": "Object",
 callSync$1: function(message) {
  var serialized, result;
  serialized = $._JsSerializer$().traverse$1(message);
  result = ReceivePortSync.dispatchCall(this._id, serialized);
  return $._JsDeserializer$().deserialize$1(result);
},
 is$_JsSendPortSync: true,
 is$SendPortSync: true
};

$$._RemoteSendPortSync = {"": ["_isolateId>", "_portId>"],
 "super": "Object",
 callSync$1: function(message) {
  var serialized, result;
  serialized = $._JsSerializer$().traverse$1(message);
  result = $._RemoteSendPortSync__call(this._isolateId, this._portId, serialized);
  return $._JsDeserializer$().deserialize$1(result);
},
 is$_RemoteSendPortSync: true,
 is$SendPortSync: true
};

$$._LocalSendPortSync = {"": ["_receivePort>"],
 "super": "Object",
 callSync$1: function(message) {
  var t1, copy, result;
  t1 = $._JsSerializer$().traverse$1(message);
  copy = $._JsDeserializer$().deserialize$1(t1);
  result = this._receivePort._callback$1(copy);
  t1 = $._JsSerializer$().traverse$1(result);
  return $._JsDeserializer$().deserialize$1(t1);
},
 is$_LocalSendPortSync: true,
 is$SendPortSync: true
};

$$.ReceivePortSync = {"": ["_portId>", "_callback>", "_listener"],
 "super": "Object",
 _callback$1: function(arg0) { return this._callback.call$1(arg0); },
 _callback$2: function(arg0, arg1) { return this._callback.call$2(arg0, arg1); },
 get$_listenerName: function() {
  return $.ReceivePortSync__getListenerName($.ReceivePortSync__isolateId(), this._portId);
},
 receive$1: function(callback) {
  var t1;
  this._callback = callback;
  if (this._listener == null) {
    this._listener = new $.ReceivePortSync_receive_anon(this);
    t1 = $.index($.window().get$on(), this.get$_listenerName());
    $.getInterceptor(t1).add$1(t1, this._listener);
  }
},
 close$0: function() {
  $.ReceivePortSync__portMap.remove$1(this._portId);
  if (!(this._listener == null))
    $.index($.window().get$on(), this.get$_listenerName()).remove$1(this._listener);
},
 toSendPort$0: function() {
  return $._LocalSendPortSync$_internal(this);
},
 ReceivePortSync$0: function() {
  if ($.ReceivePortSync__portIdCount == null) {
    $.ReceivePortSync__portIdCount = 0;
    $.ReceivePortSync__portMap = $.Map_Map();
  }
  var t1 = $.ReceivePortSync__portIdCount;
  $.ReceivePortSync__portIdCount = $.add(t1, 1);
  this._portId = t1;
  $.indexSet($.ReceivePortSync__portMap, this._portId, this);
}
};

$$._MessageTraverserVisitedMap = {
 "super": "Object",
 operator$index$1: function(object) {
  return;
},
 oprator$indexSet$2: function(object, info) {
},
 reset$0: function() {
},
 cleanup$0: function() {
}
};

$$._MessageTraverser = {
 "super": "Object",
 traverse$1: function(x) {
  var t1, result;
  t1 = x;
  if (t1 == null || typeof t1 === 'string' || typeof t1 === 'number' || typeof t1 === 'boolean')
    return this.visitPrimitive$1(x);
  this._visited.reset$0();
  result = null;
  try {
    result = this._dispatch$1(x);
  } finally {
    this._visited.cleanup$0();
  }
  return result;
},
 _dispatch$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return this.visitPrimitive$1(x);
  if (typeof x === 'object' && x !== null && (x.constructor === Array || x.is$List()))
    return this.visitList$1(x);
  if (typeof x === 'object' && x !== null && x.is$Map())
    return this.visitMap$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPort)
    return this.visitSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPortSync)
    return this.visitSendPortSync$1(x);
  return this.visitObject$1(x);
},
 visitObject$1: function(x) {
  throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
}
};

$$._Serializer = {
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copyId, id;
  copyId = this._visited.operator$index$1(list);
  if (!(copyId == null))
    return ["ref", copyId];
  id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  this._visited.oprator$indexSet$2(list, id);
  return ["list", id, this._serializeList$1(list)];
},
 visitMap$1: function(map) {
  var copyId, id;
  copyId = this._visited.operator$index$1(map);
  if (!(copyId == null))
    return ["ref", copyId];
  id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  this._visited.oprator$indexSet$2(map, id);
  return ["map", id, this._serializeList$1(map.get$keys()), this._serializeList$1(map.get$values())];
},
 _serializeList$1: function(list) {
  var len, result, i;
  if (typeof list !== 'string' && (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return this._serializeList$1$bailout(1, list);
  len = list.length;
  result = $.List_List(len);
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    result[i] = this._dispatch$1(list[i]);
  }
  return result;
},
 _serializeList$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      list = env0;
      break;
    case 2:
      len = env1;
      list = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      len = $.getInterceptor(list).get$length(list);
    case 2:
      var list, len, result, i, t1;
      state0 = 0;
      result = $.List_List(len);
      for (i = 0; $.ltB(i, len); ++i) {
        t1 = this._dispatch$1($.index(list, i));
        if (i >= result.length)
          throw $.ioore(i);
        result[i] = t1;
      }
      return result;
  }
}
};

$$._Deserializer = {
 "super": "Object",
 deserialize$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  this._deserialized = $.HashMap_HashMap();
  return this._deserializeHelper$1(x);
},
 _deserializeHelper$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  switch ($.index(x, 0)) {
    case "ref":
      return this._deserializeRef$1(x);
    case "list":
      return this._deserializeList$1(x);
    case "map":
      return this._deserializeMap$1(x);
    case "sendport":
      return this.deserializeSendPort$1(x);
    default:
      return this.deserializeObject$1(x);
  }
},
 _deserializeRef$1: function(x) {
  var id = $.index(x, 1);
  return $.index(this._deserialized, id);
},
 _deserializeList$1: function(x) {
  var id, dartList, len, i, t1;
  id = $.index(x, 1);
  dartList = $.index(x, 2);
  if (typeof dartList !== 'object' || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
    return this._deserializeList$1$bailout(1, dartList, id);
  $.indexSet(this._deserialized, id, dartList);
  len = dartList.length;
  for (i = 0; i < len; ++i) {
    if (i >= dartList.length)
      throw $.ioore(i);
    t1 = this._deserializeHelper$1(dartList[i]);
    if (i >= dartList.length)
      throw $.ioore(i);
    dartList[i] = t1;
  }
  return dartList;
},
 _deserializeList$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      id = env1;
      dartList = env0;
      break;
    case 2:
      len = env1;
      dartList = env0;
      break;
  }
  switch (state0) {
    case 0:
      id = $.index(x, 1);
      dartList = $.index(x, 2);
    case 1:
      state0 = 0;
      $.indexSet(this._deserialized, id, dartList);
      len = $.getInterceptor(dartList).get$length(dartList);
    case 2:
      var id, dartList, len, i;
      state0 = 0;
      for (i = 0; $.ltB(i, len); ++i)
        $.indexSet(dartList, i, this._deserializeHelper$1($.index(dartList, i)));
      return dartList;
  }
},
 _deserializeMap$1: function(x) {
  var result, id, keys, values, len, i, key;
  result = $.Map_Map();
  id = $.index(x, 1);
  $.indexSet(this._deserialized, id, result);
  keys = $.index(x, 2);
  if (typeof keys !== 'string' && (typeof keys !== 'object' || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(1, x, result, keys);
  values = $.index(x, 3);
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(2, values, result, keys);
  len = keys.length;
  for (i = 0; i < len; ++i) {
    if (i >= keys.length)
      throw $.ioore(i);
    key = this._deserializeHelper$1(keys[i]);
    if (i >= values.length)
      throw $.ioore(i);
    $.indexSet(result, key, this._deserializeHelper$1(values[i]));
  }
  return result;
},
 _deserializeMap$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      keys = env2;
      result = env1;
      x = env0;
      break;
    case 2:
      keys = env2;
      result = env1;
      values = env0;
      break;
    case 3:
      keys = env3;
      result = env2;
      len = env1;
      values = env0;
      break;
  }
  switch (state0) {
    case 0:
      result = $.Map_Map();
      id = $.index(x, 1);
      $.indexSet(this._deserialized, id, result);
      keys = $.index(x, 2);
    case 1:
      state0 = 0;
      values = $.index(x, 3);
    case 2:
      state0 = 0;
      len = $.getInterceptor(keys).get$length(keys);
    case 3:
      var result, id, keys, x, values, len, i;
      state0 = 0;
      for (i = 0; $.ltB(i, len); ++i)
        $.indexSet(result, this._deserializeHelper$1($.index(keys, i)), this._deserializeHelper$1($.index(values, i)));
      return result;
  }
},
 deserializeObject$1: function(x) {
  throw $.$$throw("Unexpected serialized object");
}
};

$$._DOMWindowCrossFrame = {"": ["_window"],
 "super": "Object",
 get$history: function() {
  return $._HistoryCrossFrame__createSafe(this._window.history);
},
 get$location: function() {
  return $._LocationCrossFrame__createSafe(this._window.location);
},
 get$parent: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.parent);
},
 get$top: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.top);
},
 close$0: function() {
  return this._window.close();
}
};

$$._LocationCrossFrame = {"": ["_location>"],
 "super": "Object",
 is$Location: function() { return true; }
};

$$._HistoryCrossFrame = {"": ["_history"],
 "super": "Object"
};

$$._LocationWrapper = {"": ["_ptr"],
 "super": "Object",
 get$hash: function() {
  return $._LocationWrapper__get(this._ptr, "hash");
},
 get$href: function() {
  return $._LocationWrapper__get(this._ptr, "href");
},
 assign$1: function(url) {
  return this._ptr.assign(url);
},
 replace$1: function(url) {
  return this._ptr.replace(url);
},
 toString$0: function() {
  return this._ptr.toString();
},
 is$Location: function() { return true; }
};

$$.FixedSizeListIterator = {"": ["_liblib$_length", "_array", "_pos"],
 "super": "_VariableSizeListIterator",
 get$hasNext: function() {
  return $.gt(this._liblib$_length, this._pos);
}
};

$$._VariableSizeListIterator = {
 "super": "Object",
 get$hasNext: function() {
  var t1 = this._array;
  return $.gt($.getInterceptor(t1).get$length(t1), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  this._pos = t3 + 1;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, t1) {
  var t3 = this._pos;
  this._pos = t3 + 1;
  return $.index(t1, t3);
}
};

$$._Manager = {"": ["nextIsolateId=", "currentManagerId>", "nextManagerId", "currentContext=", "rootContext=", "topEventLoop>", "fromCommandLine>", "isWorker>", "supportsWorkers", "isolates>", "mainManager>", "managers>"],
 "super": "Object",
 get$useWorkers: function() {
  return this.supportsWorkers;
},
 get$needSerialization: function() {
  return this.get$useWorkers();
},
 _nativeDetectEnvironment$0: function() {
  this.isWorker = $isWorker;
  this.supportsWorkers = $supportsWorkers;
  this.fromCommandLine = typeof(window) == 'undefined';
},
 _nativeInitWorkerMessageHandler$0: function() {
  $globalThis.onmessage = function (e) {
  _IsolateNatives._processWorkerMessage(this.mainManager, e);
};
},
 maybeCloseWorker$0: function() {
  var t1 = this.isolates;
  if ($.getInterceptor(t1).get$isEmpty(t1) === true)
    this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "close"])));
},
 _Manager$0: function() {
  this._nativeDetectEnvironment$0();
  this.topEventLoop = $._EventLoop$();
  this.isolates = $.Map_Map();
  this.managers = $.Map_Map();
  if (this.isWorker === true) {
    this.mainManager = $._MainManagerStub$();
    this._nativeInitWorkerMessageHandler$0();
  }
}
};

$$._IsolateContext = {"": ["id>", "ports>", "isolateStatics"],
 "super": "Object",
 initGlobals$0: function() {
  $initGlobals(this);
},
 eval$1: function(code) {
  var old, result, t1;
  old = $._globalState().get$currentContext();
  $._globalState().set$currentContext(this);
  this._setGlobals$0();
  result = null;
  try {
    result = code.call$0();
  } finally {
    t1 = old;
    $._globalState().set$currentContext(t1);
    if (!(old == null))
      old._setGlobals$0();
  }
  return result;
},
 _setGlobals$0: function() {
  $setGlobals(this);
},
 lookup$1: function(portId) {
  return $.index(this.ports, portId);
},
 register$2: function(portId, port) {
  if (this.ports.containsKey$1(portId) === true)
    throw $.$$throw($.Exception_Exception("Registry: ports must be registered only once."));
  $.indexSet(this.ports, portId, port);
  $.indexSet($._globalState().get$isolates(), this.id, this);
},
 unregister$1: function(portId) {
  var t1;
  this.ports.remove$1(portId);
  t1 = this.ports;
  if ($.getInterceptor(t1).get$isEmpty(t1) === true)
    $._globalState().get$isolates().remove$1(this.id);
},
 _IsolateContext$0: function() {
  var t1, t2;
  t1 = $._globalState();
  t2 = t1.get$nextIsolateId();
  t1.set$nextIsolateId($.add(t2, 1));
  this.id = t2;
  this.ports = $.Map_Map();
  this.initGlobals$0();
}
};

$$._EventLoop = {"": ["events"],
 "super": "Object",
 enqueue$3: function(isolate, fn, msg) {
  var t1 = this.events;
  $.getInterceptor(t1).addLast$1(t1, $._IsolateEvent$(isolate, fn, msg));
},
 dequeue$0: function() {
  var t1 = this.events;
  if ($.getInterceptor(t1).get$isEmpty(t1) === true)
    return;
  return t1.removeFirst$0();
},
 runIteration$0: function() {
  var event$, t1, t2;
  event$ = this.dequeue$0();
  if (event$ == null) {
    if ($._globalState().get$isWorker() === true)
      $._globalState().maybeCloseWorker$0();
    else {
      if (!($._globalState().get$rootContext() == null))
        if ($._globalState().get$isolates().containsKey$1($._globalState().get$rootContext().get$id()) === true)
          if ($._globalState().get$fromCommandLine() === true) {
            t1 = $._globalState().get$rootContext().get$ports();
            t2 = $.getInterceptor(t1).get$isEmpty(t1) === true;
            t1 = t2;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      if (t1)
        throw $.$$throw($.Exception_Exception("Program exited with open ReceivePorts."));
    }
    return false;
  }
  event$.process$0();
  return true;
},
 _runHelper$0: function() {
  if (!($._window() == null))
    new $._EventLoop__runHelper_next(this).call$0();
  else
    for (; this.runIteration$0() === true;)
      ;
},
 run$0: function(exception) {
  var t1, e, trace;
  if ($._globalState().get$isWorker() !== true)
    this._runHelper$0();
  else
    try {
      this._runHelper$0();
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      trace = $.getTraceFromException(exception);
      $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
    }

}
};

$$._IsolateEvent = {"": ["isolate", "fn", "message"],
 "super": "Object",
 process$0: function() {
  this.isolate.eval$1(this.fn);
}
};

$$._MainManagerStub = {
 "super": "Object",
 get$id: function() {
  return 0;
},
 postMessage$1: function(msg) {
  $globalThis.postMessage(msg);
}
};

$$._BaseSendPort = {"": ["_liblib9$_isolateId>"],
 "super": "Object",
 _checkReplyTo$1: function(replyTo) {
  if (!(replyTo == null) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_NativeJsSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_WorkerSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_BufferingSendPort))
    throw $.$$throw($.Exception_Exception("SendPort.send: Illegal replyTo port type"));
},
 call$1: function(message) {
  var completer, port;
  completer = $.Completer_Completer();
  port = $._ReceivePortImpl$();
  this.send$2(message, port.toSendPort$0());
  port.receive$1(new $._BaseSendPort_call_anon(completer, port));
  return completer.get$future();
},
 is$Function: true,
 is$SendPort: true
};

$$._NativeJsSendPort = {"": ["_liblib9$_receivePort>", "_liblib9$_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(message, replyTo, this));
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$_NativeJsSendPort && $.eqB(this._liblib9$_receivePort, other._liblib9$_receivePort);
},
 get$hashCode: function() {
  return this._liblib9$_receivePort.get$_liblib9$_id();
},
 is$_NativeJsSendPort: true,
 is$SendPort: true
};

$$._WorkerSendPort = {"": ["_workerId>", "_receivePortId", "_liblib9$_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, replyTo, message));
},
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$_WorkerSendPort)
    t1 = $.eqB(this._workerId, other._workerId) && $.eqB(this._liblib9$_isolateId, other._liblib9$_isolateId) && $.eqB(this._receivePortId, other._receivePortId);
  else
    t1 = false;
  return t1;
},
 get$hashCode: function() {
  return $.xor($.xor($.shl(this._workerId, 16), $.shl(this._liblib9$_isolateId, 8)), this._receivePortId);
},
 is$_WorkerSendPort: true,
 is$SendPort: true
};

$$._ReceivePortImpl = {"": ["_liblib9$_id>", "_liblib9$_callback>"],
 "super": "Object",
 _liblib9$_callback$1: function(arg0) { return this._liblib9$_callback.call$1(arg0); },
 _liblib9$_callback$2: function(arg0, arg1) { return this._liblib9$_callback.call$2(arg0, arg1); },
 receive$1: function(onMessage) {
  this._liblib9$_callback = onMessage;
},
 close$0: function() {
  this._liblib9$_callback = null;
  $._globalState().get$currentContext().unregister$1(this._liblib9$_id);
},
 toSendPort$0: function() {
  return $._NativeJsSendPort$(this, $._globalState().get$currentContext().get$id());
},
 _ReceivePortImpl$0: function() {
  $._globalState().get$currentContext().register$2(this._liblib9$_id, this);
}
};

$$._PendingSendPortFinder = {"": ["ports>", "_liblib9$_visited"],
 "super": "_MessageTraverser0",
 visitPrimitive$1: function(x) {
},
 visitList$1: function(list) {
  if (!($.index(this._liblib9$_visited, list) == null))
    return;
  $.indexSet(this._liblib9$_visited, list, true);
  $.getInterceptor(list).forEach$1(list, new $._PendingSendPortFinder_visitList_anon(this));
},
 visitMap$1: function(map) {
  var t1;
  if (!($.index(this._liblib9$_visited, map) == null))
    return;
  $.indexSet(this._liblib9$_visited, map, true);
  t1 = map.get$values();
  $.getInterceptor(t1).forEach$1(t1, new $._PendingSendPortFinder_visitMap_anon(this));
},
 visitSendPort$1: function(port) {
  var t1;
  if (!!port.is$_BufferingSendPort && port._liblib9$_port == null) {
    t1 = this.ports;
    $.getInterceptor(t1).add$1(t1, port.get$_futurePort());
  }
},
 _PendingSendPortFinder$0: function() {
  this._liblib9$_visited = $._JsVisitedMap$();
}
};

$$._JsSerializer0 = {"": ["_liblib9$_nextFreeRefId", "_liblib9$_visited"],
 "super": "_Serializer0",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return ["sendport", x._workerId, x._liblib9$_isolateId, x._receivePortId];
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw("Illegal underlying port " + $.S(x));
},
 visitNativeJsSendPort$1: function(port) {
  return ["sendport", $._globalState().get$currentManagerId(), port._liblib9$_isolateId, port._liblib9$_receivePort.get$_liblib9$_id()];
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._liblib9$_port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
},
 _JsSerializer$0: function() {
  this._liblib9$_visited = $._JsVisitedMap$();
}
};

$$._JsCopier = {"": ["_liblib9$_visited"],
 "super": "_Copier",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
},
 visitNativeJsSendPort$1: function(port) {
  return $._NativeJsSendPort$(port._liblib9$_receivePort, port._liblib9$_isolateId);
},
 visitWorkerSendPort$1: function(port) {
  return $._WorkerSendPort$(port._workerId, port._liblib9$_isolateId, port._receivePortId);
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._liblib9$_port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
},
 _JsCopier$0: function() {
  this._liblib9$_visited = $._JsVisitedMap$();
}
};

$$._JsDeserializer0 = {"": ["_liblib9$_deserialized"],
 "super": "_Deserializer0",
 deserializeSendPort$1: function(x) {
  var managerId, isolateId, receivePortId, isolate;
  managerId = $.index(x, 1);
  isolateId = $.index(x, 2);
  receivePortId = $.index(x, 3);
  if ($.eqB(managerId, $._globalState().get$currentManagerId())) {
    isolate = $.index($._globalState().get$isolates(), isolateId);
    if (isolate == null)
      return;
    return $._NativeJsSendPort$(isolate.lookup$1(receivePortId), isolateId);
  } else
    return $._WorkerSendPort$(managerId, isolateId, receivePortId);
}
};

$$._JsVisitedMap = {"": ["tagged"],
 "super": "Object",
 operator$index$1: function(object) {
  return object['__MessageTraverser__attached_info__'];
},
 oprator$indexSet$2: function(object, info) {
  var t1 = this.tagged;
  $.getInterceptor(t1).add$1(t1, object);
  object['__MessageTraverser__attached_info__'] = info;
},
 reset$0: function() {
  this.tagged = $.List_List(null);
},
 cleanup$0: function() {
  var t1, length$, i;
  t1 = this.tagged;
  length$ = $.getInterceptor(t1).get$length(t1);
  if (typeof length$ !== 'number')
    return this.cleanup$0$bailout(1, length$);
  i = 0;
  for (; i < length$; ++i)
    $.index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
  this.tagged = null;
},
 cleanup$0$bailout: function(state0, length$) {
  var i = 0;
  for (; $.ltB(i, length$); ++i)
    $.index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
  this.tagged = null;
}
};

$$._MessageTraverserVisitedMap0 = {
 "super": "Object",
 operator$index$1: function(object) {
  return;
},
 oprator$indexSet$2: function(object, info) {
},
 reset$0: function() {
},
 cleanup$0: function() {
}
};

$$._MessageTraverser0 = {
 "super": "Object",
 traverse$1: function(x) {
  var t1, result;
  t1 = x;
  if (t1 == null || typeof t1 === 'string' || typeof t1 === 'number' || typeof t1 === 'boolean')
    return this.visitPrimitive$1(x);
  this._liblib9$_visited.reset$0();
  result = null;
  try {
    result = this._liblib9$_dispatch$1(x);
  } finally {
    this._liblib9$_visited.cleanup$0();
  }
  return result;
},
 _liblib9$_dispatch$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return this.visitPrimitive$1(x);
  if (typeof x === 'object' && x !== null && (x.constructor === Array || x.is$List()))
    return this.visitList$1(x);
  if (typeof x === 'object' && x !== null && x.is$Map())
    return this.visitMap$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPort)
    return this.visitSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPortSync)
    return this.visitSendPortSync$1(x);
  return this.visitObject$1(x);
},
 visitObject$1: function(x) {
  throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
}
};

$$._Copier = {
 "super": "_MessageTraverser0",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copy, len, i;
  if (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior())
    return this.visitList$1$bailout(1, list);
  copy = $.index(this._liblib9$_visited, list);
  if (!(copy == null))
    return copy;
  len = list.length;
  copy = $.List_List(len);
  $.indexSet(this._liblib9$_visited, list, copy);
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    copy[i] = this._liblib9$_dispatch$1(list[i]);
  }
  return copy;
},
 visitList$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      list = env0;
      break;
    case 2:
      len = env1;
      list = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      copy = $.index(this._liblib9$_visited, list);
      if (!(copy == null))
        return copy;
      len = $.getInterceptor(list).get$length(list);
    case 2:
      var list, copy, len, i, t1;
      state0 = 0;
      copy = $.List_List(len);
      $.indexSet(this._liblib9$_visited, list, copy);
      for (i = 0; $.ltB(i, len); ++i) {
        t1 = this._liblib9$_dispatch$1($.index(list, i));
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
  }
},
 visitMap$1: function(map) {
  var t1, t2;
  t1 = {};
  t1.copy_10 = $.index(this._liblib9$_visited, map);
  t2 = t1.copy_10;
  if (!(t2 == null))
    return t2;
  t1.copy_10 = $.Map_Map();
  $.indexSet(this._liblib9$_visited, map, t1.copy_10);
  $.getInterceptor(map).forEach$1(map, new $._Copier_visitMap_anon(this, t1));
  return t1.copy_10;
}
};

$$._Serializer0 = {
 "super": "_MessageTraverser0",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copyId, id;
  copyId = $.index(this._liblib9$_visited, list);
  if (!(copyId == null))
    return ["ref", copyId];
  id = this._liblib9$_nextFreeRefId;
  this._liblib9$_nextFreeRefId = id + 1;
  $.indexSet(this._liblib9$_visited, list, id);
  return ["list", id, this._liblib9$_serializeList$1(list)];
},
 visitMap$1: function(map) {
  var copyId, id;
  copyId = $.index(this._liblib9$_visited, map);
  if (!(copyId == null))
    return ["ref", copyId];
  id = this._liblib9$_nextFreeRefId;
  this._liblib9$_nextFreeRefId = id + 1;
  $.indexSet(this._liblib9$_visited, map, id);
  return ["map", id, this._liblib9$_serializeList$1(map.get$keys()), this._liblib9$_serializeList$1(map.get$values())];
},
 _liblib9$_serializeList$1: function(list) {
  var len, result, i;
  if (typeof list !== 'string' && (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return this._liblib9$_serializeList$1$bailout(1, list);
  len = list.length;
  result = $.List_List(len);
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    result[i] = this._liblib9$_dispatch$1(list[i]);
  }
  return result;
},
 _liblib9$_serializeList$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      list = env0;
      break;
    case 2:
      len = env1;
      list = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      len = $.getInterceptor(list).get$length(list);
    case 2:
      var list, len, result, i, t1;
      state0 = 0;
      result = $.List_List(len);
      for (i = 0; $.ltB(i, len); ++i) {
        t1 = this._liblib9$_dispatch$1($.index(list, i));
        if (i >= result.length)
          throw $.ioore(i);
        result[i] = t1;
      }
      return result;
  }
}
};

$$._Deserializer0 = {
 "super": "Object",
 deserialize$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  this._liblib9$_deserialized = $.HashMap_HashMap();
  return this._liblib9$_deserializeHelper$1(x);
},
 _liblib9$_deserializeHelper$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  switch ($.index(x, 0)) {
    case "ref":
      return this._liblib9$_deserializeRef$1(x);
    case "list":
      return this._liblib9$_deserializeList$1(x);
    case "map":
      return this._liblib9$_deserializeMap$1(x);
    case "sendport":
      return this.deserializeSendPort$1(x);
    default:
      return this.deserializeObject$1(x);
  }
},
 _liblib9$_deserializeRef$1: function(x) {
  var id = $.index(x, 1);
  return $.index(this._liblib9$_deserialized, id);
},
 _liblib9$_deserializeList$1: function(x) {
  var id, dartList, len, i, t1;
  id = $.index(x, 1);
  dartList = $.index(x, 2);
  if (typeof dartList !== 'object' || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
    return this._liblib9$_deserializeList$1$bailout(1, dartList, id);
  $.indexSet(this._liblib9$_deserialized, id, dartList);
  len = dartList.length;
  for (i = 0; i < len; ++i) {
    if (i >= dartList.length)
      throw $.ioore(i);
    t1 = this._liblib9$_deserializeHelper$1(dartList[i]);
    if (i >= dartList.length)
      throw $.ioore(i);
    dartList[i] = t1;
  }
  return dartList;
},
 _liblib9$_deserializeList$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      id = env1;
      dartList = env0;
      break;
    case 2:
      len = env1;
      dartList = env0;
      break;
  }
  switch (state0) {
    case 0:
      id = $.index(x, 1);
      dartList = $.index(x, 2);
    case 1:
      state0 = 0;
      $.indexSet(this._liblib9$_deserialized, id, dartList);
      len = $.getInterceptor(dartList).get$length(dartList);
    case 2:
      var id, dartList, len, i;
      state0 = 0;
      for (i = 0; $.ltB(i, len); ++i)
        $.indexSet(dartList, i, this._liblib9$_deserializeHelper$1($.index(dartList, i)));
      return dartList;
  }
},
 _liblib9$_deserializeMap$1: function(x) {
  var result, id, keys, values, len, i, key;
  result = $.Map_Map();
  id = $.index(x, 1);
  $.indexSet(this._liblib9$_deserialized, id, result);
  keys = $.index(x, 2);
  if (typeof keys !== 'string' && (typeof keys !== 'object' || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
    return this._liblib9$_deserializeMap$1$bailout(1, x, result, keys);
  values = $.index(x, 3);
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
    return this._liblib9$_deserializeMap$1$bailout(2, values, result, keys);
  len = keys.length;
  for (i = 0; i < len; ++i) {
    if (i >= keys.length)
      throw $.ioore(i);
    key = this._liblib9$_deserializeHelper$1(keys[i]);
    if (i >= values.length)
      throw $.ioore(i);
    $.indexSet(result, key, this._liblib9$_deserializeHelper$1(values[i]));
  }
  return result;
},
 _liblib9$_deserializeMap$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      keys = env2;
      result = env1;
      x = env0;
      break;
    case 2:
      keys = env2;
      result = env1;
      values = env0;
      break;
    case 3:
      keys = env3;
      result = env2;
      len = env1;
      values = env0;
      break;
  }
  switch (state0) {
    case 0:
      result = $.Map_Map();
      id = $.index(x, 1);
      $.indexSet(this._liblib9$_deserialized, id, result);
      keys = $.index(x, 2);
    case 1:
      state0 = 0;
      values = $.index(x, 3);
    case 2:
      state0 = 0;
      len = $.getInterceptor(keys).get$length(keys);
    case 3:
      var result, id, keys, x, values, len, i;
      state0 = 0;
      for (i = 0; $.ltB(i, len); ++i)
        $.indexSet(result, this._liblib9$_deserializeHelper$1($.index(keys, i)), this._liblib9$_deserializeHelper$1($.index(values, i)));
      return result;
  }
},
 deserializeObject$1: function(x) {
  throw $.$$throw("Unexpected serialized object");
}
};

$$._Timer = {"": ["_once", "_handle"],
 "super": "Object",
 _Timer$repeating$2: function(milliSeconds, callback) {
  this._handle = $._window().setInterval$2(new $.anon8(callback, this), milliSeconds);
},
 _Timer$2: function(milliSeconds, callback) {
  this._handle = $._window().setTimeout$2(new $.anon7(this, callback), milliSeconds);
}
};

$$._Random = {
 "super": "Object",
 nextInt$1: function(max) {
  if (max < 0)
    throw $.$$throw($.ArgumentError$("negative max: " + $.S(max)));
  if (max > 4294967295)
    max = 4294967295;
  return (Math.random() * max) >>> 0;
}
};

$$.JsonUnsupportedObjectError = {"": ["unsupportedObject", "cause"],
 "super": "Object",
 toString$0: function() {
  if (!(this.cause == null))
    return "Calling toJson method on object failed.";
  else
    return "Object toJson method returns non-serializable value.";
}
};

$$._JsonParser = {"": ["json", "length>", "position"],
 "super": "Object",
 parseToplevel$0: function() {
  var result = this.parseValue$0();
  if (!(this.token$0() == null))
    this.error$1("Junk at the end of JSON input");
  return result;
},
 parseValue$0: function() {
  var token = this.token$0();
  if (token == null)
    this.error$1("Nothing to parse");
  switch (token) {
    case 34:
      return this.parseString$0();
    case 45:
      return this.parseNumber$0();
    case 110:
      return this.expectKeyword$2("null", null);
    case 102:
      return this.expectKeyword$2("false", false);
    case 116:
      return this.expectKeyword$2("true", true);
    case 123:
      return this.parseObject$0();
    case 91:
      return this.parseList$0();
    default:
      this.error$1("Unexpected token");
  }
},
 expectKeyword$2: function(word, value) {
  var i;
  for (i = 0; i < word.length; ++i) {
    if (!$.eqB(this.char$0(), $.getInterceptor(word).charCodeAt$1(word, i)))
      this.error$1("Expected keyword '" + word + "'");
    this.position = $.add(this.position, 1);
  }
  return value;
},
 parseObject$0: function() {
  var object, key, t1;
  object = $.makeLiteralMap([]);
  if (typeof object !== 'object' || object === null || (object.constructor !== Array || !!object.immutable$list) && !object.is$JavaScriptIndexingBehavior())
    return this.parseObject$0$bailout(1, object);
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 125)) {
    for (; true;) {
      key = this.parseString$0();
      if (!$.eqB(this.token$0(), 58))
        this.error$1("Expected ':' when parsing object");
      this.position = $.add(this.position, 1);
      t1 = this.parseValue$0();
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= object.length)
        throw $.ioore(key);
      object[key] = t1;
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 125))
      this.error$1("Expected '}' at end of object");
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseObject$0$bailout: function(state0, object) {
  var key;
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 125)) {
    for (; true;) {
      key = this.parseString$0();
      if (!$.eqB(this.token$0(), 58))
        this.error$1("Expected ':' when parsing object");
      this.position = $.add(this.position, 1);
      $.indexSet(object, key, this.parseValue$0());
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 125))
      this.error$1("Expected '}' at end of object");
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseList$0: function() {
  var list = [];
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 93)) {
    for (; true;) {
      $.getInterceptor(list).add$1(list, this.parseValue$0());
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 93))
      this.error$1("Expected ']' at end of list");
  }
  this.position = $.add(this.position, 1);
  return list;
},
 parseString$0: function(exception) {
  var charCodes, t1, t2, c, codeString;
  if (!$.eqB(this.token$0(), 34))
    this.error$1("Expected string literal");
  this.position = $.add(this.position, 1);
  charCodes = $.List_List(null);
  for (t1 = this.length, t2 = this.json; true;) {
    c = this.char$0();
    if ($.eqB(c, 34)) {
      this.position = $.add(this.position, 1);
      break;
    }
    if ($.eqB(c, 92)) {
      this.position = $.add(this.position, 1);
      if ($.eqB(this.position, t1))
        this.error$1("\\ at the end of input");
      switch (this.char$0()) {
        case 34:
          c = 34;
          break;
        case 92:
          c = 92;
          break;
        case 47:
          c = 47;
          break;
        case 98:
          c = 8;
          break;
        case 110:
          c = 10;
          break;
        case 114:
          c = 13;
          break;
        case 102:
          c = 12;
          break;
        case 116:
          c = 9;
          break;
        case 117:
          if ($.gtB($.add(this.position, 5), t1))
            this.error$1("Invalid unicode esacape sequence");
          codeString = $.getInterceptor(t2).substring$2(t2, $.add(this.position, 1), $.add(this.position, 5));
          try {
            c = $.int_parse("0x" + $.S(codeString));
          } catch (exception) {
            $.unwrapException(exception);
            this.error$1("Invalid unicode esacape sequence");
          }

          this.position = $.add(this.position, 4);
          break;
        default:
          this.error$1("Invalid esacape sequence in string literal");
      }
    }
    $.getInterceptor(charCodes).add$1(charCodes, c);
    this.position = $.add(this.position, 1);
  }
  return $.String_String$fromCharCodes(charCodes);
},
 parseNumber$0: function() {
  var startPos, char$, isInt, t1, number;
  if (!$.eqB(this.token$0(), 45))
    this.error$1("Expected number literal");
  startPos = this.position;
  char$ = this.char$0();
  if (char$ === 45)
    char$ = this.nextChar$0();
  if (char$ === 48)
    char$ = this.nextChar$0();
  else if ($.geB(char$, 48) && $.leB(char$, 57)) {
    char$ = this.nextChar$0();
    if (typeof char$ !== 'number')
      return this.parseNumber$0$bailout(1, startPos, char$);
    while (true) {
      if (!($.geB(char$, 48) && $.leB(char$, 57)))
        break;
      char$ = this.nextChar$0();
    }
  } else
    this.error$1("Expected digit when parsing number");
  if (char$ === 46) {
    char$ = this.nextChar$0();
    if ($.geB(char$, 48) && $.leB(char$, 57)) {
      char$ = this.nextChar$0();
      if (typeof char$ !== 'number')
        return this.parseNumber$0$bailout(2, startPos, char$);
      while (true) {
        if (!($.geB(char$, 48) && $.leB(char$, 57)))
          break;
        char$ = this.nextChar$0();
      }
      isInt = false;
    } else {
      this.error$1("Expected digit following comma");
      isInt = true;
    }
  } else
    isInt = true;
  if (char$ === 101 || char$ === 69) {
    char$ = this.nextChar$0();
    if (char$ === 45 || char$ === 43)
      char$ = this.nextChar$0();
    if ($.geB(char$, 48) && $.leB(char$, 57)) {
      char$ = this.nextChar$0();
      if (typeof char$ !== 'number')
        return this.parseNumber$0$bailout(3, char$, startPos);
      while (true) {
        if (!($.geB(char$, 48) && $.leB(char$, 57)))
          break;
        char$ = this.nextChar$0();
      }
      isInt = false;
    } else
      this.error$1("Expected digit following 'e' or 'E'");
  }
  t1 = this.json;
  number = $.getInterceptor(t1).substring$2(t1, startPos, this.position);
  if (isInt)
    return $.int_parse(number);
  else
    return $.double_parse(number);
},
 parseNumber$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      char$ = env1;
      startPos = env0;
      break;
    case 2:
      char$ = env1;
      startPos = env0;
      break;
    case 3:
      startPos = env1;
      char$ = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (!$.eqB(this.token$0(), 45))
        this.error$1("Expected number literal");
      startPos = this.position;
      char$ = this.char$0();
      if (char$ === 45)
        char$ = this.nextChar$0();
    case 1:
      if (state0 === 0 && char$ === 48)
        char$ = this.nextChar$0();
      else
        switch (state0) {
          case 0:
          case 1:
            if (state0 === 1 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 1:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
              }
            else
              this.error$1("Expected digit when parsing number");
        }
    case 2:
      if (state0 === 2 || state0 === 0 && char$ === 46)
        switch (state0) {
          case 0:
            char$ = this.nextChar$0();
          case 2:
            if (state0 === 2 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 2:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
                  isInt = false;
              }
            else {
              this.error$1("Expected digit following comma");
              isInt = true;
            }
        }
      else
        isInt = true;
    case 3:
      var startPos, char$, isInt, t1, number;
      if (state0 === 3 || state0 === 0 && (char$ === 101 || char$ === 69))
        switch (state0) {
          case 0:
            char$ = this.nextChar$0();
            if (char$ === 45 || char$ === 43)
              char$ = this.nextChar$0();
          case 3:
            if (state0 === 3 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 3:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
                  isInt = false;
              }
            else
              this.error$1("Expected digit following 'e' or 'E'");
        }
      t1 = this.json;
      number = $.getInterceptor(t1).substring$2(t1, startPos, this.position);
      if (isInt)
        return $.int_parse(number);
      else
        return $.double_parse(number);
  }
},
 char$0: function() {
  var t1, t3;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.char$0$bailout(1, t1);
  t3 = this.length;
  if (typeof t3 !== 'number')
    return this.char$0$bailout(2, t1, t3);
  if (t1 >= t3)
    this.error$1("Unexpected end of JSON stream");
  t1 = this.json;
  return $.getInterceptor(t1).charCodeAt$1(t1, this.position);
},
 char$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.position;
    case 1:
      state0 = 0;
      t3 = this.length;
    case 2:
      var t1, t3;
      state0 = 0;
      if ($.geB(t1, t3))
        this.error$1("Unexpected end of JSON stream");
      t1 = this.json;
      return $.getInterceptor(t1).charCodeAt$1(t1, this.position);
  }
},
 nextChar$0: function() {
  var t1, t3, t2;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(1, t1);
  this.position = t1 + 1;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(2, t1);
  t3 = this.length;
  if (typeof t3 !== 'number')
    return this.nextChar$0$bailout(3, t1, t3);
  if (t1 >= t3)
    return 0;
  t2 = this.json;
  return $.getInterceptor(t2).charCodeAt$1(t2, t1);
},
 nextChar$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.position;
    case 1:
      state0 = 0;
      this.position = $.add(t1, 1);
      t1 = this.position;
    case 2:
      state0 = 0;
      t3 = this.length;
    case 3:
      var t1, t3;
      state0 = 0;
      if ($.geB(t1, t3))
        return 0;
      t1 = this.json;
      return $.getInterceptor(t1).charCodeAt$1(t1, this.position);
  }
},
 token$0: function() {
  var t1, t2, t3, char$, token;
  t1 = this.json;
  t2 = this.length;
  if (typeof t2 !== 'number')
    return this.token$0$bailout(1, t2, t1);
  for (; true;) {
    t3 = this.position;
    if (typeof t3 !== 'number')
      return this.token$0$bailout(2, t3, t2, t1);
    if (t3 >= t2)
      return;
    char$ = $.getInterceptor(t1).charCodeAt$1(t1, t3);
    t3 = $._JsonParser_tokens;
    if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
      return this.token$0$bailout(3, t2, char$, t1, t3);
    if (char$ !== (char$ | 0))
      throw $.iae(char$);
    if (char$ < 0 || char$ >= t3.length)
      throw $.ioore(char$);
    token = t3[char$];
    if (token === 32) {
      t3 = this.position;
      if (typeof t3 !== 'number')
        return this.token$0$bailout(4, t2, t1, t3);
      this.position = t3 + 1;
      continue;
    }
    if (token == null)
      return 0;
    return token;
  }
},
 token$0$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      t2 = env0;
      break;
    case 2:
      t1 = env2;
      t2 = env1;
      t3 = env0;
      break;
    case 3:
      t3 = env3;
      t1 = env2;
      char$ = env1;
      t2 = env0;
      break;
    case 4:
      t3 = env2;
      t1 = env1;
      t2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.json;
      t2 = this.length;
    case 1:
      state0 = 0;
    default:
      var t1, t2, t3, char$, token;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    t3 = this.position;
                  case 2:
                    state0 = 0;
                    if ($.geB(t3, t2))
                      return;
                    char$ = $.getInterceptor(t1).charCodeAt$1(t1, this.position);
                    t3 = $._JsonParser_tokens;
                  case 3:
                    state0 = 0;
                    token = $.index(t3, char$);
                  case 4:
                    if (state0 === 4 || state0 === 0 && token === 32)
                      switch (state0) {
                        case 0:
                          t3 = this.position;
                        case 4:
                          state0 = 0;
                          this.position = $.add(t3, 1);
                          break c$0;
                      }
                    if (token == null)
                      return 0;
                    return token;
                }
              }
          }
  }
},
 error$1: function(message) {
  throw $.$$throw(message);
},
 get$error: function() { return new $.BoundClosure(this, 'error$1'); },
 _JsonParser$1: function(json) {
  if (!($._JsonParser_tokens == null))
    return;
  $._JsonParser_tokens = $.List_List(126);
  $.indexSet($._JsonParser_tokens, 9, 32);
  $.indexSet($._JsonParser_tokens, 10, 32);
  $.indexSet($._JsonParser_tokens, 13, 32);
  $.indexSet($._JsonParser_tokens, 32, 32);
  $.indexSet($._JsonParser_tokens, 48, 45);
  $.indexSet($._JsonParser_tokens, 49, 45);
  $.indexSet($._JsonParser_tokens, 50, 45);
  $.indexSet($._JsonParser_tokens, 51, 45);
  $.indexSet($._JsonParser_tokens, 52, 45);
  $.indexSet($._JsonParser_tokens, 53, 45);
  $.indexSet($._JsonParser_tokens, 54, 45);
  $.indexSet($._JsonParser_tokens, 55, 45);
  $.indexSet($._JsonParser_tokens, 56, 45);
  $.indexSet($._JsonParser_tokens, 57, 45);
  $.indexSet($._JsonParser_tokens, 45, 45);
  $.indexSet($._JsonParser_tokens, 123, 123);
  $.indexSet($._JsonParser_tokens, 125, 125);
  $.indexSet($._JsonParser_tokens, 91, 91);
  $.indexSet($._JsonParser_tokens, 93, 93);
  $.indexSet($._JsonParser_tokens, 34, 34);
  $.indexSet($._JsonParser_tokens, 58, 58);
  $.indexSet($._JsonParser_tokens, 44, 44);
  $.indexSet($._JsonParser_tokens, 110, 110);
  $.indexSet($._JsonParser_tokens, 116, 116);
  $.indexSet($._JsonParser_tokens, 102, 102);
}
};

$$._JsonStringifier = {"": ["sb>", "seen"],
 "super": "Object",
 checkCycle$1: function(object) {
  var t1, t2, i, t3;
  for (t1 = this.seen, t2 = t1.length, i = 0; i < t2; ++i) {
    t3 = t1[i];
    if (t3 == null ? object == null : t3 === object)
      throw $.$$throw("Cyclic structure");
  }
  $.getInterceptor(t1).add$1(t1, object);
},
 stringifyValue$1: function(object, exception) {
  var customJson, t1, e;
  if (this.stringifyJsonValue$1(object) !== true) {
    this.checkCycle$1(object);
    try {
      customJson = object.toJson$0();
      if (this.stringifyJsonValue$1(customJson) !== true)
        throw $.$$throw($.JsonUnsupportedObjectError$(object));
      t1 = this.seen;
      $.getInterceptor(t1).removeLast$0(t1);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      throw $.$$throw($.JsonUnsupportedObjectError$withCause(object, e));
    }

  }
},
 stringifyJsonValue$1: function(object) {
  var t1, t2, i;
  t1 = {};
  if (typeof object === 'number') {
    t1 = this.sb;
    $.getInterceptor(t1).add$1(t1, $.getInterceptor(object).toString$0(object));
    return true;
  } else if (object === true) {
    t1 = this.sb;
    $.getInterceptor(t1).add$1(t1, "true");
    return true;
  } else if (object === false) {
    t1 = this.sb;
    $.getInterceptor(t1).add$1(t1, "false");
    return true;
  } else if (object == null) {
    t1 = this.sb;
    $.getInterceptor(t1).add$1(t1, "null");
    return true;
  } else if (typeof object === 'string') {
    t1 = this.sb;
    $.getInterceptor(t1).add$1(t1, "\"");
    $._JsonStringifier_escape(t1, object);
    $.getInterceptor(t1).add$1(t1, "\"");
    return true;
  } else if (typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List())) {
    if (typeof object !== 'object' || object === null || object.constructor !== Array && !object.is$JavaScriptIndexingBehavior())
      return this.stringifyJsonValue$1$bailout(1, object);
    this.checkCycle$1(object);
    t2 = this.sb;
    $.getInterceptor(t2).add$1(t2, "[");
    if (object.length > 0) {
      this.stringifyValue$1(object[0]);
      for (i = 1; i < object.length; ++i) {
        $.getInterceptor(t2).add$1(t2, ",");
        if (i >= object.length)
          throw $.ioore(i);
        this.stringifyValue$1(object[i]);
      }
    }
    $.getInterceptor(t2).add$1(t2, "]");
    t1 = this.seen;
    $.getInterceptor(t1).removeLast$0(t1);
    return true;
  } else if (typeof object === 'object' && object !== null && object.is$Map()) {
    this.checkCycle$1(object);
    t2 = this.sb;
    $.getInterceptor(t2).add$1(t2, "{");
    t1.first_10 = true;
    $.getInterceptor(object).forEach$1(object, new $._JsonStringifier_stringifyJsonValue_anon(this, t1));
    $.getInterceptor(t2).add$1(t2, "}");
    t2 = this.seen;
    $.getInterceptor(t2).removeLast$0(t2);
    return true;
  } else
    return false;
},
 stringifyJsonValue$1$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      object = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
    case 1:
      var t1, object, t2, i;
      if (state0 === 0 && typeof object === 'number') {
        t1 = this.sb;
        $.getInterceptor(t1).add$1(t1, $.getInterceptor(object).toString$0(object));
        return true;
      } else
        switch (state0) {
          case 0:
          case 1:
            if (state0 === 0 && object === true) {
              t1 = this.sb;
              $.getInterceptor(t1).add$1(t1, "true");
              return true;
            } else
              switch (state0) {
                case 0:
                case 1:
                  if (state0 === 0 && object === false) {
                    t1 = this.sb;
                    $.getInterceptor(t1).add$1(t1, "false");
                    return true;
                  } else
                    switch (state0) {
                      case 0:
                      case 1:
                        if (state0 === 0 && object == null) {
                          t1 = this.sb;
                          $.getInterceptor(t1).add$1(t1, "null");
                          return true;
                        } else
                          switch (state0) {
                            case 0:
                            case 1:
                              if (state0 === 0 && typeof object === 'string') {
                                t1 = this.sb;
                                $.getInterceptor(t1).add$1(t1, "\"");
                                $._JsonStringifier_escape(t1, object);
                                $.getInterceptor(t1).add$1(t1, "\"");
                                return true;
                              } else
                                switch (state0) {
                                  case 0:
                                  case 1:
                                    if (state0 === 1 || state0 === 0 && typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List()))
                                      switch (state0) {
                                        case 0:
                                        case 1:
                                          state0 = 0;
                                          this.checkCycle$1(object);
                                          t2 = this.sb;
                                          $.getInterceptor(t2).add$1(t2, "[");
                                          if ($.gtB($.getInterceptor(object).get$length(object), 0)) {
                                            this.stringifyValue$1($.index(object, 0));
                                            for (i = 1; $.ltB(i, $.getInterceptor(object).get$length(object)); ++i) {
                                              $.getInterceptor(t2).add$1(t2, ",");
                                              this.stringifyValue$1($.index(object, i));
                                            }
                                          }
                                          $.getInterceptor(t2).add$1(t2, "]");
                                          t1 = this.seen;
                                          $.getInterceptor(t1).removeLast$0(t1);
                                          return true;
                                      }
                                    else if (typeof object === 'object' && object !== null && object.is$Map()) {
                                      this.checkCycle$1(object);
                                      t2 = this.sb;
                                      $.getInterceptor(t2).add$1(t2, "{");
                                      t1.first_10 = true;
                                      $.getInterceptor(object).forEach$1(object, new $._JsonStringifier_stringifyJsonValue_anon(this, t1));
                                      $.getInterceptor(t2).add$1(t2, "}");
                                      t2 = this.seen;
                                      $.getInterceptor(t2).removeLast$0(t2);
                                      return true;
                                    } else
                                      return false;
                                }
                          }
                    }
              }
        }
  }
}
};

$$.ElementInstanceEvents = {"": ["_ptr"],
 "super": "Events",
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$click: function() {
  return this.operator$index$1("click");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$keyDown: function() {
  return this.operator$index$1("keydown");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() { return this.get$load().call$0(); },
 get$mouseDown: function() {
  return this.operator$index$1("mousedown");
},
 get$mouseMove: function() {
  return this.operator$index$1("mousemove");
},
 get$mouseOut: function() {
  return this.operator$index$1("mouseout");
},
 get$mouseUp: function() {
  return this.operator$index$1("mouseup");
},
 get$reset: function() {
  return this.operator$index$1("reset");
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$resize: function() {
  return this.operator$index$1("resize");
}
};

$$.Tuple = {"": ["item1>", "item2>"],
 "super": "Object",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.item1, other.get$item1()) && $.eqB(this.item2, other.get$item2());
},
 toString$0: function() {
  return "{item1: " + $.S(this.item1) + ", item2: " + $.S(this.item2) + "}";
},
 get$hashCode: function() {
  return $.Util_getHashCode([this.item1, this.item2]);
},
 toJson$0: function() {
  return $.makeLiteralMap(["item1", this.item1, "item2", this.item2]);
}
};

$$._Protected = {
 "super": "Object"
};

$$.Attachable = {"": ["name>"],
 "super": "Object"
};

$$.AttachableObject = {
 "super": "DisposableImpl",
 _addHandler$2: function(property, watcher) {
  var handle;
  this.validateNotDisposed$0();
  handle = this._eventHandlers.putIfAbsent$2(property, new $.AttachableObject__addHandler_anon());
  return $.getInterceptor(handle).add$1(handle, watcher);
},
 _fireEvent$2: function(attachable, args) {
  var handle;
  this.validateNotDisposed$0();
  handle = $.index(this._eventHandlers, attachable);
  if (!(handle == null))
    handle.fireEvent$1(args);
},
 _set$2: function(key, value) {
  this.validateNotDisposed$0();
  $.indexSet(this._propertyValues, key, value);
  this._fireChange$1(key);
},
 get$_set: function() { return new $.BoundClosure1(this, '_set$2'); },
 _isSet$1: function(key) {
  this.validateNotDisposed$0();
  return this._propertyValues.containsKey$1(key);
},
 _remove$1: function(key) {
  this.validateNotDisposed$0();
  if (this._isSet$1(key) === true) {
    this._propertyValues.remove$1(key);
    this._fireChange$1(key);
  }
},
 _getValueOrUndefined$3: function(key, obj, ifAbsent) {
  var value;
  this.validateNotDisposed$0();
  if (this._isSet$1(key) === true)
    return $.index(this._propertyValues, key);
  else if (!(ifAbsent == null)) {
    value = ifAbsent.call$1(obj);
    this._set$2(key, value);
    return value;
  } else
    return $.CTC11;
},
 _fireChange$1: function(key) {
  var handle;
  this.validateNotDisposed$0();
  handle = $.index(this._eventHandlers, key);
  if (!(handle == null))
    handle.fireEvent$1(key);
}
};

$$.AttachedEvent = {"": ["name"],
 "super": "Attachable",
 addHandler$2: function(obj, handler) {
  return obj._addHandler$2(this, handler);
},
 fireEvent$2: function(obj, args) {
  return obj._fireEvent$2(this, args);
}
};

$$.Property = {"": ["defaultValue", "name"],
 "super": "Attachable",
 get$2: function(obj, ifAbsent) {
  var coreValue = this.getCore$2(obj, ifAbsent);
  if (!(coreValue === $.CTC11))
    return coreValue;
  else
    return this.defaultValue;
},
 get$1: function(obj) {
  return this.get$2(obj,null)
},
 getCore$2: function(obj, ifAbsent) {
  return obj._getValueOrUndefined$3(this, obj, ifAbsent);
},
 set$2: function(obj, value) {
  obj._set$2(this, value);
},
 clear$1: function(obj) {
  return obj._remove$1(this);
},
 addHandler$2: function(obj, handler) {
  return obj._addHandler$2(this, handler);
},
 toString$0: function() {
  return "Property '" + $.S(this.name) + "'";
}
};

$$._UndefinedValue = {
 "super": "Object"
};

$$.Array2d = {"": ["width>", "height>", "_source"],
 "super": "ListBase",
 get$length: function() {
  var t1 = this._source;
  return $.getInterceptor(t1).get$length(t1);
},
 operator$index$1: function(index) {
  var t1 = this._source;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.operator$index$1$bailout(1, t1, index);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 operator$index$1$bailout: function(state0, t1, index) {
  return $.index(t1, index);
},
 oprator$indexSet$2: function(index, value) {
  $.indexSet(this._source, index, value);
},
 get$2: function(x, y) {
  return this.operator$index$1(this._getIndex$2(x, y));
},
 set$3: function(x, y, value) {
  this.oprator$indexSet$2(this._getIndex$2(x, y), value);
},
 getAdjacentIndices$2: function(x, y) {
  var adj, k, t1, t2, t3, j, t4;
  if (typeof x !== 'number')
    return this.getAdjacentIndices$2$bailout(1, x, y);
  if (typeof y !== 'number')
    return this.getAdjacentIndices$2$bailout(1, x, y);
  adj = $.List_List(null);
  for (k = $.max(0, y - 1), t1 = this.width, t2 = x + 2, t3 = x - 1; k < $.min(this.height, y + 2); ++k)
    for (j = $.max(0, t3), t4 = !(k === y); j < $.min(t1, t2); ++j)
      if (!(j === x) || t4)
        $.getInterceptor(adj).add$1(adj, this._getIndex$2(j, k));
  return adj;
},
 getAdjacentIndices$2$bailout: function(state0, x, y) {
  var adj, k, t1, j, t2;
  adj = $.List_List(null);
  for (k = $.max(0, $.sub(y, 1)), t1 = this.width; k < $.min(this.height, $.add(y, 2)); ++k)
    for (j = $.max(0, $.sub(x, 1)), t2 = !(k === y); j < $.min(t1, $.add(x, 2)); ++j)
      if (!(j === x) || t2)
        $.getInterceptor(adj).add$1(adj, this._getIndex$2(j, k));
  return adj;
},
 getCoordinate$1: function(index) {
  var t1;
  if (typeof index !== 'number')
    return this.getCoordinate$1$bailout(1, index);
  t1 = this.width;
  if (typeof t1 !== 'number')
    return this.getCoordinate$1$bailout(2, index, t1);
  return $.Tuple$($.mod(index, t1), $.tdiv(index, t1));
},
 getCoordinate$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      index = env0;
      break;
    case 2:
      t1 = env1;
      index = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = this.width;
    case 2:
      var index, t1;
      state0 = 0;
      return $.Tuple$($.mod(index, t1), $.tdiv(index, t1));
  }
},
 _getIndex$2: function(x, y) {
  return $.add(x, $.mul(y, this.width));
},
 Array2d$wrap$2: function(width, source) {
  var t1, t2;
  $.requireArgumentNotNull(width, "width");
  $.requireArgumentNotNull(source, "source");
  $.requireArgument($.ge(width, 0), "width", "width must be non-zero");
  t1 = $.eqB(width, 0);
  t2 = this._source;
  if (t1)
    $.requireArgument($.eq($.getInterceptor(t2).get$length(t2), 0), "width", "width must be greater than zero if the source is non-empty");
  else {
    $.requireArgument($.gt($.getInterceptor(t2).get$length(t2), 0), "source", "if width is non-zero, source must be non-empty");
    $.requireArgument($.eq($.mod($.getInterceptor(t2).get$length(t2), width), 0), "width", "width must evenly divide the source");
  }
}
};

$$.Enumerable = {
 "super": "Object",
 every$1: function(f) {
  var t1;
  $.requireArgumentNotNull(f, "f");
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
},
 contains$1: function(item) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), item))
      return true;
  return false;
},
 get$isEmpty: function() {
  return $.getInterceptor(this).some$1(this, new $.Enumerable_isEmpty_anon()) !== true;
},
 some$1: function(f) {
  var t1;
  $.requireArgumentNotNull(f, "f");
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
},
 join$1: function(separator) {
  var sb, t1, t2;
  sb = $.StringBuffer_StringBuffer("");
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if ($.gtB($.getInterceptor(sb).get$length(sb), 0))
      $.getInterceptor(sb).add$1(sb, separator);
    $.getInterceptor(sb).add$1(sb, t2);
  }
  return $.getInterceptor(sb).toString$0(sb);
},
 join$0: function() {
  return this.join$1(", ")
},
 map$1: function(f) {
  $.requireArgumentNotNull(f, "f");
  return $._FuncEnumerable$(this, new $.Enumerable_map_anon(f));
},
 filter$1: function(f) {
  $.requireArgumentNotNull(f, "f");
  return $._FuncEnumerable$(this, new $.Enumerable_filter_anon(f));
},
 firstOrDefault$2: function(f, defaultValue) {
  var iter;
  if (f == null)
    f = new $.Enumerable_firstOrDefault_anon();
  iter = $._WhereIterator$($.getInterceptor(this).iterator$0(this), f);
  if (iter.get$hasNext() !== true)
    return defaultValue;
  return iter.next$0();
},
 firstOrDefault$1: function(f) {
  return this.firstOrDefault$2(f,null)
},
 single$1: function(f) {
  var iter, value;
  if (f == null)
    f = new $.Enumerable_single_anon();
  iter = $._WhereIterator$($.getInterceptor(this).iterator$0(this), f);
  if (iter.get$hasNext() !== true)
    throw $.$$throw($.CTC13);
  value = iter.next$0();
  if (iter.get$hasNext() === true)
    throw $.$$throw($.CTC14);
  return value;
},
 toReadOnlyCollection$0: function() {
  return $.ReadOnlyCollection$(this);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 toList$0: function() {
  return $.List_List$from(this);
},
 selectNumbers$1: function(f) {
  $.requireArgumentNotNull(f, "f");
  return $._FuncNumEnumerable$(this, new $.Enumerable_selectNumbers_anon(f));
},
 toString$0: function() {
  return "[" + $.S(this.join$0()) + "]";
},
 is$Enumerable: true
};

$$._SimpleEnumerable = {"": ["_source"],
 "super": "Enumerable",
 iterator$0: function() {
  var t1 = this._source;
  return $.getInterceptor(t1).iterator$0(t1);
}
};

$$._FuncEnumerable = {"": ["_source", "_func"],
 "super": "Enumerable",
 _func$1: function(arg0) { return this._func.call$1(arg0); },
 iterator$0: function() {
  var t1 = this._source;
  return this._func$1($.getInterceptor(t1).iterator$0(t1));
}
};

$$._SelectIterator = {"": ["_source", "_func"],
 "super": "Object",
 _func$1: function(arg0) { return this._func.call$1(arg0); },
 get$hasNext: function() {
  return this._source.get$hasNext();
},
 next$0: function() {
  return this._func$1(this._source.next$0());
}
};

$$._WhereIterator = {"": ["_source", "_func", "_liblib2$_next=", "_current"],
 "super": "Object",
 _func$1: function(arg0) { return this._func.call$1(arg0); },
 get$hasNext: function() {
  if (this._liblib2$_next == null) {
    this._liblib2$_next = false;
    for (var t1 = this._source; t1.get$hasNext() === true;) {
      this._current = t1.next$0();
      if (this._func$1(this._current) === true) {
        this._liblib2$_next = true;
        break;
      }
    }
  }
  return this._liblib2$_next;
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  this._liblib2$_next = null;
  return this._current;
}
};

$$.IndexIterator = {"": ["_indexer", "_liblib2$_length", "_liblib2$_pos"],
 "super": "Object",
 get$hasNext: function() {
  return $.gt(this._liblib2$_length, this._liblib2$_pos);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  var t1 = this._liblib2$_pos;
  this._liblib2$_pos = t1 + 1;
  return this._indexer$1(t1);
},
 _indexer$1: function(arg0) { return this._indexer.call$1(arg0); },
 IndexIterator$2: function(length$, indexer) {
  $.requireArgumentNotNull(this._indexer, "_indexer");
}
};

$$.ListBase = {
 "super": "Enumerable",
 iterator$0: function() {
  return $.IndexIterator$(this.get$length(), new $.ListBase_iterator_anon(this));
},
 forEach$1: function(f) {
  var i;
  for (i = 0; $.ltB(i, this.get$length()); ++i)
    f.call$1(this.operator$index$1(i));
},
 every$1: function(f) {
  var i;
  for (i = 0; $.ltB(i, this.get$length()); ++i)
    if (f.call$1(this.operator$index$1(i)) !== true)
      return false;
  return true;
},
 some$1: function(f) {
  var i;
  for (i = 0; $.ltB(i, this.get$length()); ++i)
    if (f.call$1(this.operator$index$1(i)) === true)
      return true;
  return false;
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 indexOf$2: function(element, start) {
  var i, t1;
  if (typeof start !== 'number')
    return this.indexOf$2$bailout(1, element, start);
  i = start;
  while (true) {
    t1 = this.get$length();
    if (typeof t1 !== 'number')
      return this.indexOf$2$bailout(2, element, t1, i);
    if (!(i < t1))
      break;
    if ($.eqB(this.operator$index$1(i), element))
      return i;
    ++i;
  }
  return -1;
},
 indexOf$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      start = env1;
      element = env0;
      break;
    case 2:
      i = env2;
      t1 = env1;
      element = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      i = start;
    case 2:
      var start, element, i, t1;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t1 = this.get$length();
            case 2:
              state0 = 0;
              if (!$.ltB(i, t1))
                break L0;
              if ($.eqB(this.operator$index$1(i), element))
                return i;
              i = $.add(i, 1);
          }
      return -1;
  }
},
 last$0: function() {
  return this.operator$index$1($.sub($.getInterceptor(this).get$length(this), 1));
},
 get$last: function() { return new $.BoundClosure0(this, 'last$0'); },
 getRange$2: function(start, itemCount) {
  var lastIndex, list, i;
  if (typeof start !== 'number')
    return this.getRange$2$bailout(1, start, itemCount);
  $.requireArgument($.ge(itemCount, 0), "count", null);
  if (typeof itemCount !== 'number')
    throw $.iae(itemCount);
  lastIndex = start + itemCount - 1;
  if (itemCount > 0)
    if (start < 0)
      throw $.$$throw($.RangeError$(start));
    else if ($.geB(lastIndex, this.get$length()))
      throw $.$$throw($.RangeError$(lastIndex));
  list = $.List_List(null);
  for (i = start; i <= lastIndex; ++i)
    $.getInterceptor(list).add$1(list, this.operator$index$1(i));
  return list;
},
 getRange$2$bailout: function(state0, start, itemCount) {
  var lastIndex, list, i;
  $.requireArgument($.ge(itemCount, 0), "count", null);
  lastIndex = $.sub($.add(start, itemCount), 1);
  if ($.gtB(itemCount, 0))
    if ($.ltB(start, 0))
      throw $.$$throw($.RangeError$(start));
    else if ($.geB(lastIndex, this.get$length()))
      throw $.$$throw($.RangeError$(lastIndex));
  list = $.List_List(null);
  for (i = start; $.leB(i, lastIndex); i = $.add(i, 1))
    $.getInterceptor(list).add$1(list, this.operator$index$1(i));
  return list;
},
 is$Collection: function() { return true; }
};

$$.NumberEnumerable = {
 "super": "Enumerable",
 sum$0: function() {
  var t1, theSum, t2;
  for (t1 = $.getInterceptor(this).iterator$0(this), theSum = 0; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null)
      throw $.$$throw($.CTC33);
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    theSum += t2;
  }
  return theSum;
}
};

$$._FuncNumEnumerable = {"": ["_source", "_func"],
 "super": "NumberEnumerable",
 _func$1: function(arg0) { return this._func.call$1(arg0); },
 iterator$0: function() {
  var t1 = this._source;
  return this._func$1($.getInterceptor(t1).iterator$0(t1));
}
};

$$._RangeEnumerable = {"": ["_start", "_count"],
 "super": "NumberEnumerable",
 iterator$0: function() {
  return $._RangeIterator$(this._start, this._count);
}
};

$$._RangeIterator = {"": ["_start", "_count", "_current"],
 "super": "Object",
 get$hasNext: function() {
  return $.lt(this._current, this._count);
},
 next$0: function() {
  var t1, t2, val;
  t1 = this._start;
  t2 = this._current;
  val = t1 + t2;
  this._current = t2 + 1;
  return val;
}
};

$$.ReadOnlyCollection = {"": ["_items"],
 "super": "ListBase",
 get$length: function() {
  return this._items.length;
},
 operator$index$1: function(index) {
  var t1 = this._items;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
}
};

$$.DisposableImpl = {
 "super": "Object",
 validateNotDisposed$0: function() {
}
};

$$.EventArgs = {
 "super": "Object"
};

$$.EventHandle = {"": ["_handlers", "_disposed"],
 "super": "DisposableImpl",
 fireEvent$1: function(args) {
  var t1 = this._handlers;
  if (!(t1 == null))
    $.getInterceptor(t1).forEach$1(t1, new $.EventHandle_fireEvent_anon(args));
},
 add$1: function(handler) {
  var id, t1;
  id = $.GlobalId_GlobalId();
  if (this._handlers == null)
    this._handlers = $.HashMap_HashMap();
  t1 = this._handlers;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.add$1$bailout0(1, handler, t1, id);
  if (id !== (id | 0))
    throw $.iae(id);
  if (id < 0 || id >= t1.length)
    throw $.ioore(id);
  t1[id] = handler;
  return id;
},
 add$1$bailout0: function(state0, handler, t1, id) {
  $.indexSet(t1, id, handler);
  return id;
},
 remove$1: function(id) {
  var t1 = this._handlers;
  if (!(t1 == null))
    return !(t1.remove$1(id) == null);
  else
    return false;
}
};

$$.DetailedArgumentError = {"": ["argument", "details"],
 "super": "Object",
 get$message: function() {
  return "Illegal argument: \"" + $.S(this.argument) + "\" -- " + $.S(this.details);
},
 toString$0: function() {
  return this.get$message();
},
 DetailedArgumentError$2: function(argument, details) {
  $.requireArgumentNotNullOrEmpty(this.argument, "argument");
  $.requireArgumentNotNullOrEmpty(this.details, "details");
}
};

$$.InvalidOperationError = {"": ["message"],
 "super": "Object",
 is$Exception: true
};

$$.NullArgumentError = {"": ["argument", "details"],
 "super": "DetailedArgumentError"
};

$$.GlobalId = {"": ["id>", "_hashCode"],
 "super": "Object",
 compareTo$1: function(other) {
  var t1 = this.id;
  return $.getInterceptor(t1).compareTo$1(t1, other.get$id());
},
 get$hashCode: function() {
  return this._hashCode;
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(other.get$id(), this.id);
}
};

$$.AffineTransform = {"": ["_m00>", "_m10>", "_m01>", "_m11>", "_m02>", "_m12>"],
 "super": "Object",
 get$scaleX: function() {
  return this._m00;
},
 get$scaleY: function() {
  return this._m11;
},
 get$translateX: function() {
  return this._m02;
},
 get$translateY: function() {
  return this._m12;
},
 get$shearX: function() {
  return this._m01;
},
 get$shearY: function() {
  return this._m10;
},
 get$determinant: function() {
  return $.sub($.mul(this._m00, this._m11), $.mul(this._m01, this._m10));
},
 scale$2: function(sx, sy) {
  this._m00 = $.mul(this._m00, sx);
  this._m10 = $.mul(this._m10, sx);
  this._m01 = $.mul(this._m01, sy);
  this._m11 = $.mul(this._m11, sy);
  return this;
},
 concatenate$1: function(tx) {
  var m0, m1, m00, m10;
  m0 = this._m00;
  m1 = this._m01;
  this._m00 = $.add($.mul(tx.get$_m00(), m0), $.mul(tx.get$_m10(), m1));
  this._m01 = $.add($.mul(tx.get$_m01(), m0), $.mul(tx.get$_m11(), m1));
  this._m02 = $.add(this._m02, $.add($.mul(tx.get$_m02(), m0), $.mul(tx.get$_m12(), m1)));
  m00 = this._m10;
  m10 = this._m11;
  this._m10 = $.add($.mul(tx.get$_m00(), m00), $.mul(tx.get$_m10(), m10));
  this._m11 = $.add($.mul(tx.get$_m01(), m00), $.mul(tx.get$_m11(), m10));
  this._m12 = $.add(this._m12, $.add($.mul(tx.get$_m02(), m00), $.mul(tx.get$_m12(), m10)));
  return this;
},
 get$concatenate: function() { return new $.BoundClosure(this, 'concatenate$1'); },
 rotate$3: function(theta, x, y) {
  return this.concatenate$1($.AffineTransform_AffineTransform$fromRotate(theta, x, y));
},
 translate$2: function(dx, dy) {
  this._m02 = $.add(this._m02, $.add($.mul(dx, this._m00), $.mul(dy, this._m01)));
  this._m12 = $.add(this._m12, $.add($.mul(dx, this._m10), $.mul(dy, this._m11)));
  return this;
},
 setToScale$2: function(sx, sy) {
  return this.setTransform$6(sx, 0, 0, sy, 0, 0);
},
 setToRotation$3: function(theta, x, y) {
  var cos, sin;
  cos = $.cos(theta);
  sin = $.sin(theta);
  return this.setTransform$6(cos, sin, -sin, cos, x - x * cos + y * sin, y - x * sin - y * cos);
},
 setToTranslation$2: function(dx, dy) {
  return this.setTransform$6(1, 0, 0, 1, dx, dy);
},
 setTransform$6: function(m00, m10, m01, m11, m02, m12) {
  this._m00 = m00;
  this._m10 = m10;
  this._m01 = m01;
  this._m11 = m11;
  this._m02 = m02;
  this._m12 = m12;
  return this;
},
 transformCoordinate$1: function(point) {
  return $.Coordinate$($.add($.add($.mul(point.get$x(), this._m00), $.mul(point.get$y(), this._m01)), this._m02), $.add($.add($.mul(point.get$x(), this._m10), $.mul(point.get$y(), this._m11)), this._m12));
},
 createInverse$0: function() {
  var det = this.get$determinant();
  return $.AffineTransform$($.div(this._m11, det), $.div($.neg(this._m10), det), $.div($.neg(this._m01), det), $.div(this._m00, det), $.div($.sub($.mul(this._m01, this._m12), $.mul(this._m11, this._m02)), det), $.div($.sub($.mul(this._m10, this._m02), $.mul(this._m00, this._m12)), det));
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this._m00, other.get$_m00()) && $.eqB(this._m01, other.get$_m01()) && $.eqB(this._m02, other.get$_m02()) && $.eqB(this._m10, other.get$_m10()) && $.eqB(this._m11, other.get$_m11()) && $.eqB(this._m12, other.get$_m12());
},
 toString$0: function() {
  var t1 = $.$$([this.get$translateX(), this.get$translateY(), this.get$scaleX(), this.get$scaleY(), this.get$shearX(), this.get$shearY()]);
  return $.Strings_join($.getInterceptor(t1).map$1(t1, new $.AffineTransform_toString_anon()).toList$0(), ", ");
}
};

$$.Coordinate = {"": ["x>", "y>"],
 "super": "Object",
 get$isValid: function() {
  return $.isValidNumber(this.x) && $.isValidNumber(this.y);
},
 operator$sub$1: function(other) {
  return $.Vector$($.sub(this.x, other.get$x()), $.sub(this.y, other.get$y()));
},
 operator$add$1: function(other) {
  return $.Coordinate$($.add(this.x, other.get$x()), $.add(this.y, other.get$y()));
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.x, other.get$x()) && $.eqB(this.y, other.get$y());
},
 toString$0: function() {
  return "{x:" + $.S(this.x) + ", y:" + $.S(this.y) + "}";
},
 toJson$0: function() {
  return $.makeLiteralMap(["x", this.x, "y", this.y]);
}
};

$$.Box = {"": ["left>", "top>", "width>", "height>"],
 "super": "Object",
 get$topLeft: function() {
  return $.Coordinate$(this.left, this.top);
},
 get$size: function() {
  return $.Size$(this.width, this.height);
},
 get$isValid: function() {
  return this.get$topLeft().get$isValid() === true && this.get$size().get$isValid() === true;
},
 contains$1: function(point) {
  var t1, t2;
  t1 = point.get$x();
  t2 = this.left;
  if ($.geB(t1, t2))
    if ($.leB(point.get$x(), $.add(t2, this.width))) {
      t1 = point.get$y();
      t2 = this.top;
      t1 = $.geB(t1, t2) && $.leB(point.get$y(), $.add(t2, this.height));
    } else
      t1 = false;
  else
    t1 = false;
  return t1;
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(other.get$left(), this.left) && $.eqB(other.get$top(), this.top) && $.eqB(other.get$width(), this.width) && $.eqB(other.get$height(), this.height);
},
 toString$0: function() {
  return "Location: " + $.S(this.get$topLeft()) + ", Size: " + $.S(this.get$size());
},
 get$hashCode: function() {
  return $.Util_getHashCode([this.left, this.top, this.width, this.height]);
}
};

$$.Size = {"": ["width>", "height>"],
 "super": "Object",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.width, other.get$width()) && $.eqB(this.height, other.get$height());
},
 get$area: function() {
  return $.mul(this.width, this.height);
},
 isEmpty$0: function() {
  return $.eq(this.get$area(), 0);
},
 get$isEmpty: function() { return new $.BoundClosure0(this, 'isEmpty$0'); },
 get$isValid: function() {
  var t1, t2;
  t1 = this.width;
  if ($.isValidNumber(t1)) {
    t2 = this.height;
    t1 = $.isValidNumber(t2) && $.geB(t1, 0) && $.geB(t2, 0);
  } else
    t1 = false;
  return t1;
},
 scale$1: function(magnitude) {
  return $.Size$($.mul(this.width, magnitude), $.mul(this.height, magnitude));
},
 operator$mul$1: function(magnitude) {
  return this.scale$1(magnitude);
},
 toString$0: function() {
  return "(" + $.S(this.width) + " x " + $.S(this.height) + ")";
}
};

$$.Vector = {"": ["x", "y"],
 "super": "Coordinate",
 get$length: function() {
  var t1, t2;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  return $.sqrt($.add(t1, $.mul(t2, t2)));
},
 operator$add$1: function(other) {
  return $.Vector$($.add(this.x, other.get$x()), $.add(this.y, other.get$y()));
},
 operator$mul$1: function(magnitude) {
  return this.scale$1(magnitude);
},
 scale$1: function(magnitude) {
  return $.Vector$($.mul(this.x, magnitude), $.mul(this.y, magnitude));
}
};

$$._ResourceEntry = {"": ["url>", "_resource", "_blobUrl", "_total", "_completed"],
 "super": "Object",
 get$totalBytes: function() {
  return this._total;
},
 get$completedBytes: function() {
  return this._completed;
},
 setResource$1: function(resource) {
  this._resource = resource;
},
 updateProgress$2: function(completed, total) {
  var changed;
  if (!$.eqB(this._completed, completed)) {
    this._completed = completed;
    changed = true;
  } else
    changed = false;
  if (!$.eqB(this._total, total)) {
    this._total = total;
    changed = true;
  }
  return changed;
},
 get$completed: function() {
  return !(this._resource == null);
},
 get$resource: function() {
  return this._resource;
},
 matchesBlobUrl$1: function(blobUrl) {
  return $.eq(blobUrl, this._blobUrl);
},
 getBlobUrl$1: function(blob) {
  this._blobUrl = $.Url_createObjectUrl(blob);
  if (this._blobUrl == null)
    this._blobUrl = this.url;
  return this._blobUrl;
},
 revokeBlobUrl$0: function() {
  $.Url_revokeObjectUrl(this._blobUrl);
}
};

$$.AudioLoader = {"": ["context>", "_entries", "_loadedEvent", "_progressEvent", "_liblib8$_state"],
 "super": "ResourceLoader",
 _doLoad$1: function(blobUrl) {
  var arrayBufferRequest, t1;
  arrayBufferRequest = $.HttpRequest_HttpRequest();
  arrayBufferRequest.open$3("GET", blobUrl, true);
  arrayBufferRequest.set$responseType("arraybuffer");
  t1 = arrayBufferRequest.get$on().get$load();
  $.getInterceptor(t1).add$1(t1, new $.AudioLoader__doLoad_anon(arrayBufferRequest, blobUrl, this));
  t1 = arrayBufferRequest.get$on().get$error();
  $.getInterceptor(t1).add$1(t1, new $.AudioLoader__doLoad_anon0(blobUrl, this));
  arrayBufferRequest.send$0();
},
 _onAudioLoadError$3: function(blobUrl, description, error) {
  $.print(["Error!", description, error]);
  this._loadResourceFailed$1(blobUrl);
},
 _saveBuffer$2: function(blobUrl, buffer) {
  if (buffer == null)
    this._onAudioLoadError$3(blobUrl, "null buffer", "");
  this._loadResourceSucceed$2(blobUrl, buffer);
}
};

$$.ImageLoader = {"": ["_entries", "_loadedEvent", "_progressEvent", "_liblib8$_state"],
 "super": "ResourceLoader",
 _doLoad$1: function(blobUrl) {
  var img, t1;
  img = $.ImageElement_ImageElement(null, blobUrl, null);
  t1 = img.get$on().get$load();
  $.getInterceptor(t1).add$1(t1, new $.ImageLoader__doLoad_anon(this, img, blobUrl));
}
};

$$.ResourceLoader = {"": ["_liblib8$_state>"],
 "super": "Object",
 get$state: function() {
  return this._liblib8$_state;
},
 get$loaded: function() {
  return this._loadedEvent;
},
 get$progress: function() {
  return this._progressEvent;
},
 getResource$1: function(url) {
  return this._getByUrl$1(url).get$resource();
},
 get$completedBytes: function() {
  return this._entries.selectNumbers$1(new $.ResourceLoader_completedBytes_anon()).sum$0();
},
 get$totalBytes: function() {
  return this._entries.selectNumbers$1(new $.ResourceLoader_totalBytes_anon()).sum$0();
},
 load$0: function() {
  this._liblib8$_state = "loading";
  for (var t1 = this._entries, t1 = $.getInterceptor(t1).iterator$0(t1); t1.get$hasNext() === true;)
    this._httpLoad$1(t1.next$0().get$url());
},
 get$load: function() { return new $.BoundClosure0(this, 'load$0'); },
 _loadResourceFailed$1: function(blobUrl) {
  var e = this._getByBlobUrl$1(blobUrl);
  $.print(["failled to load resources with blobUrl", e.get$url()]);
  e.revokeBlobUrl$0();
},
 _loadResourceSucceed$2: function(blobUrl, resource) {
  var entry, t1;
  entry = this._getByBlobUrl$1(blobUrl);
  entry.revokeBlobUrl$0();
  entry.setResource$1(resource);
  t1 = this._entries;
  if ($.getInterceptor(t1).every$1(t1, new $.ResourceLoader__loadResourceSucceed_anon()) === true) {
    this._liblib8$_state = "loaded";
    this._loadedEvent.fireEvent$1($.CTC12);
  }
},
 _getByUrl$1: function(url) {
  return this._entries.single$1(new $.ResourceLoader__getByUrl_anon(url));
},
 _getByBlobUrl$1: function(blobUrl) {
  return this._entries.single$1(new $.ResourceLoader__getByBlobUrl_anon(blobUrl));
},
 _httpLoad$1: function(url) {
  var request, e, t1;
  request = $.HttpRequest_HttpRequest();
  e = this._getByUrl$1(url);
  t1 = request.get$on().get$abort();
  $.getInterceptor(t1).add$1(t1, new $.ResourceLoader__httpLoad_anon(this, e));
  t1 = request.get$on().get$error();
  $.getInterceptor(t1).add$1(t1, new $.ResourceLoader__httpLoad_anon0(this, e));
  t1 = request.get$on().get$loadEnd();
  $.getInterceptor(t1).add$1(t1, new $.ResourceLoader__httpLoad_anon1(this, e));
  t1 = request.get$on().get$progress();
  $.getInterceptor(t1).add$1(t1, new $.ResourceLoader__httpLoad_anon2(this, e));
  request.open$2("GET", url);
  request.set$responseType("blob");
  request.send$0();
},
 _onLoadEnd$2: function(entry, args) {
  var request = args.get$currentTarget();
  if ($.eqB(request.get$status(), 200))
    this._doLoad$1(entry.getBlobUrl$1(request.get$response()));
  else
    this._onError$2(entry, args);
},
 _onError$2: function(entry, args) {
  throw $.$$throw("wtf?");
},
 _onProgress$2: function(entry, args) {
  if (entry.updateProgress$2(args.get$loaded(), args.get$totalSize()) === true)
    this._progressEvent.fireEvent$1($.CTC12);
}
};

$$.TextureAnimationElement = {"": ["_textureData>", "_requests", "_transforms", "cacheEnabled", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 add$1: function(request) {
  var t1 = this._requests;
  $.getInterceptor(t1).add$1(t1, request);
  this.invalidateDraw$0();
},
 update$0: function() {
  var toRemove, t1, t2, t3, i;
  toRemove = $.List_List(null);
  for (t1 = this._requests, t2 = $.getInterceptor(t1).iterator$0(t1); t2.get$hasNext() === true;) {
    t3 = t2.next$0();
    t3.update$0();
    if (t3.get$done() === true)
      $.getInterceptor(toRemove).add$1(toRemove, t3);
  }
  for (t2 = $.getInterceptor(toRemove).iterator$0(toRemove); t2.get$hasNext() === true;) {
    t3 = t2.next$0();
    i = $.getInterceptor(t1).indexOf$2(t1, t3, 0);
    $.getInterceptor(t1).removeRange$2(t1, i, 1);
  }
  if (t1.length > 0)
    this.invalidateDraw$0();
},
 drawOverride$1: function(ctx) {
  var t1, t2, data, offset, frameName;
  for (t1 = this._requests, t1 = $.getInterceptor(t1).iterator$0(t1), t2 = this._textureData; t1.get$hasNext() === true;) {
    data = t1.next$0()._getFrameDetails$0();
    offset = data.get$item1();
    frameName = data.get$item2();
    ctx.save$0();
    ctx.translate$2(offset.get$x(), offset.get$y());
    t2.drawTextureKeyAt$2(ctx, frameName);
    ctx.restore$0();
  }
}
};

$$.TextureAnimationRequest = {"": ["_startEventHandle", "_texturePrefix", "_frameCount", "_offset", "_delay", "_initialFrame", "_initialFrameOffset", "_liblib7$_done", "_frame"],
 "super": "Object",
 get$done: function() {
  return this._liblib7$_done;
},
 get$started: function() {
  return this._startEventHandle;
},
 update$0: function() {
  var t1, t2;
  t1 = this._frame;
  if (typeof t1 !== 'number')
    return this.update$0$bailout0(1, t1);
  t2 = this._frameCount;
  if (typeof t2 !== 'number')
    return this.update$0$bailout0(3, t2, t1);
  if (t1 < t2 - 1)
    this._frame = t1 + 1;
  else
    this._liblib7$_done = true;
  t1 = this._frame;
  if (typeof t1 !== 'number')
    return this.update$0$bailout0(5, t1);
  if (t1 === 0 && !this._liblib7$_done)
    this._startEventHandle.fireEvent$1($.CTC12);
},
 update$0$bailout0: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t1 = env1;
      t2 = env0;
      break;
    case 4:
      t1 = env0;
      break;
    case 5:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._frame;
    case 1:
      state0 = 0;
    default:
      if (state0 === 2 || state0 === 0 && t1 == null)
        switch (state0) {
          case 0:
            t1 = this._delay;
          case 2:
            state0 = 0;
            this._frame = $.neg(t1);
        }
      else
        switch (state0) {
          case 0:
            t2 = this._frameCount;
          case 3:
            state0 = 0;
          case 4:
            if (state0 === 4 || state0 === 0 && $.ltB(t1, $.sub(t2, 1)))
              switch (state0) {
                case 0:
                  t1 = this._frame;
                case 4:
                  state0 = 0;
                  this._frame = $.add(t1, 1);
              }
            else
              this._liblib7$_done = true;
        }
      t1 = this._frame;
    case 5:
      var t1, t2;
      state0 = 0;
      if ($.eqB(t1, 0) && !this._liblib7$_done)
        this._startEventHandle.fireEvent$1($.CTC12);
  }
},
 _getFrameDetails$0: function() {
  var offset, t1, frameName, offset0, frame, frameString, frameString0;
  offset = this._offset;
  t1 = this._frame;
  if (typeof t1 !== 'number')
    return this._getFrameDetails$0$bailout(1, offset, t1);
  if (t1 < 0 && !(this._initialFrame == null)) {
    frameName = this._initialFrame;
    if (typeof frameName !== 'string')
      return this._getFrameDetails$0$bailout(2, frameName, offset);
    offset0 = this._initialFrameOffset;
    if (!(offset0 == null))
      offset = offset0;
  } else {
    if (t1 < 0)
      frame = 0;
    else
      frame = t1;
    t1 = $.getInterceptor(frame).toInt$0(frame);
    frameString = $.getInterceptor(t1).toString$0(t1);
    if (typeof frameString !== 'string')
      return this._getFrameDetails$0$bailout(5, frameString, offset);
    while (true) {
      t1 = frameString.length;
      if (!(t1 < 4))
        break;
      frameString0 = "0" + frameString;
      frameString = frameString0;
    }
    frameName = $.S(this._texturePrefix) + "_" + frameString + ".png";
  }
  return $.Tuple$(offset, frameName);
},
 _getFrameDetails$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      offset = env0;
      break;
    case 2:
      offset = env1;
      frameName = env0;
      break;
    case 3:
      offset = env1;
      t1 = env0;
      break;
    case 4:
      offset = env1;
      t1 = env0;
      break;
    case 5:
      offset = env1;
      frameString = env0;
      break;
    case 6:
      offset = env2;
      t1 = env1;
      frameString = env0;
      break;
  }
  switch (state0) {
    case 0:
      offset = this._offset;
      t1 = this._frame;
    case 1:
      state0 = 0;
    default:
      var offset, t1, frameName, offset0, frame, frameString, frameString0;
      if (state0 === 2 || state0 === 0 && $.ltB(t1, 0) && !(this._initialFrame == null))
        switch (state0) {
          case 0:
            frameName = this._initialFrame;
          case 2:
            state0 = 0;
            offset0 = this._initialFrameOffset;
            if (!(offset0 == null))
              offset = offset0;
        }
      else
        switch (state0) {
          case 0:
            t1 = this._frame;
          case 3:
            state0 = 0;
          case 4:
            if (state0 === 0 && $.ltB(t1, 0))
              frame = 0;
            else
              switch (state0) {
                case 0:
                  t1 = this._frame;
                case 4:
                  state0 = 0;
                  frame = t1;
              }
            t1 = $.getInterceptor(frame).toInt$0(frame);
            frameString = $.getInterceptor(t1).toString$0(t1);
          case 5:
            state0 = 0;
          case 6:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    t1 = $.getInterceptor(frameString).get$length(frameString);
                  case 6:
                    state0 = 0;
                    if (!$.ltB(t1, 4))
                      break L0;
                    frameString0 = "0" + $.S(frameString);
                    frameString = frameString0;
                }
            frameName = $.S(this._texturePrefix) + "_" + $.S(frameString) + ".png";
        }
      return $.Tuple$(offset, frameName);
  }
},
 TextureAnimationRequest$7$delay$initialFrame$initialFrameOffset$startFrame: function(_texturePrefix, _frameCount, _offset, delay, initialFrame, initialFrameOffset, startFrame) {
}
};

$$.TextureData = {"": ["_textures"],
 "super": "Object",
 drawTextureKeyAt$3: function(ctx, textureKey, location$) {
  var t1 = this._textures;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.drawTextureKeyAt$3$bailout(1, ctx, textureKey, location$, t1);
  if (textureKey !== (textureKey | 0))
    throw $.iae(textureKey);
  if (textureKey < 0 || textureKey >= t1.length)
    throw $.ioore(textureKey);
  this.drawTextureAt$3(ctx, location$, t1[textureKey]);
},
 drawTextureKeyAt$3$bailout: function(state0, ctx, textureKey, location$, t1) {
  this.drawTextureAt$3(ctx, location$, $.index(t1, textureKey));
},
 drawTextureKeyAt$2: function(ctx,textureKey) {
  return this.drawTextureKeyAt$3(ctx,textureKey,Isolate.$isolateProperties.CTC36)
},
 drawTextureAt$3: function(ctx, location$, texture) {
  var tx, theFrame, source, t1, t2, theFrame0;
  ctx.save$0();
  tx = $.AffineTransform$(1, 0, 0, 1, 0, 0);
  tx.translate$2(location$.get$x(), location$.get$y());
  theFrame = texture.get$frame();
  source = texture.get$sourceColorRect().get$topLeft();
  tx.translate$2(source.get$x(), source.get$y());
  if (texture.get$rotated() === true) {
    t1 = theFrame.get$height();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = 0.5 * t1;
    t2 = theFrame.get$height();
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    tx.rotate$3(-1.5707963267948966, t1, 0.5 * t2);
    theFrame0 = $.Box$(theFrame.get$left(), theFrame.get$top(), theFrame.get$height(), theFrame.get$width());
    theFrame = theFrame0;
  }
  $.CanvasUtil_transform(ctx, tx);
  $.CanvasUtil_drawImage(ctx, texture.get$image(), theFrame, null);
  ctx.restore$0();
}
};

$$.TextureInput = {"": ["name>", "frame>", "rotated>", "trimmed", "sourceColorRect>", "sourceSize", "image>"],
 "super": "Object",
 toString$0: function() {
  return this.name;
}
};

$$.ClickManager = {"": ["_stage", "_mouseDownElement"],
 "super": "Object",
 _mouseMove$1: function(e) {
  var t1, items, args;
  t1 = $.getMouseEventCoordinate(e);
  items = $.Mouse_markMouseOver(this._stage, t1);
  if ($.gtB($.getInterceptor(items).get$length(items), 0)) {
    args = $.ElementMouseEventArgs_ElementMouseEventArgs($.index(items, 0), e);
    $.getInterceptor(items).forEach$1(items, new $.ClickManager__mouseMove_anon(args));
  }
},
 get$_mouseMove: function() { return new $.BoundClosure(this, '_mouseMove$1'); },
 _mouseOut$1: function(e) {
  var t1 = this._stage;
  $.Mouse_markMouseOver(t1, null);
  $.get$ClickManager__mouseOutEvent().fireEvent$2(t1, $.CTC12);
},
 get$_mouseOut: function() { return new $.BoundClosure(this, '_mouseOut$1'); },
 _mouseUp$1: function(e) {
  var t1, upElement;
  t1 = $.getMouseEventCoordinate(e);
  upElement = $.$$($.Mouse_markMouseOver(this._stage, t1)).firstOrDefault$1(new $.ClickManager__mouseUp_anon());
  if (!(upElement == null)) {
    this._doMouseUp$2(upElement, e);
    if ($.eqB(upElement, this._mouseDownElement))
      this._doClick$2(upElement, e);
    this._mouseDownElement = null;
  }
},
 get$_mouseUp: function() { return new $.BoundClosure(this, '_mouseUp$1'); },
 _mouseDown$1: function(e) {
  var coord, t1;
  coord = $.getMouseEventCoordinate(e);
  this._mouseDownElement = $.$$($.Mouse_markMouseOver(this._stage, coord)).firstOrDefault$1(new $.ClickManager__mouseDown_anon());
  t1 = this._mouseDownElement;
  if (!(t1 == null))
    this._doMouseDown$2(t1, e);
},
 get$_mouseDown: function() { return new $.BoundClosure(this, '_mouseDown$1'); },
 _doMouseDown$2: function(element, e) {
  var args = $.ElementMouseEventArgs_ElementMouseEventArgs(element, e);
  $.get$ClickManager__mouseDownEvent().fireEvent$2(element, args);
},
 _doMouseUp$2: function(element, e) {
  var args = $.ElementMouseEventArgs_ElementMouseEventArgs(element, e);
  $.get$ClickManager__mouseUpEvent().fireEvent$2(element, args);
},
 _doClick$2: function(element, e) {
  var args = $.ElementMouseEventArgs_ElementMouseEventArgs(element, e);
  $.get$ClickManager__clickEvent().fireEvent$2(element, args);
},
 ClickManager$_internal$1: function(_stage) {
  var t1, t2;
  t1 = this._stage;
  t2 = t1.get$_canvas().get$on().get$mouseMove();
  $.getInterceptor(t2).add$1(t2, this.get$_mouseMove());
  t2 = t1.get$_canvas().get$on().get$mouseOut();
  $.getInterceptor(t2).add$1(t2, this.get$_mouseOut());
  t2 = t1.get$_canvas().get$on().get$mouseUp();
  $.getInterceptor(t2).add$1(t2, this.get$_mouseUp());
  t2 = t1.get$_canvas().get$on().get$mouseDown();
  $.getInterceptor(t2).add$1(t2, this.get$_mouseDown());
}
};

$$.ElementMouseEventArgs = {"": ["element>", "shiftKey>"],
 "super": "EventArgs"
};

$$.Panel = {
 "super": "ParentElement",
 addElement$1: function(element) {
  this.insertAt$2(element, this._liblib1$_children.length);
},
 insertAt$2: function(element, index) {
  var t1;
  $.requireArgumentNotNull(element, "element");
  $.requireArgument(element.get$parent() == null, "element", "element already has a parent");
  t1 = this._liblib1$_children;
  $.requireArgument($.getInterceptor(t1).contains$1(t1, element) !== true, "element", "Cannot add the same element twice");
  if (index == null)
    index = 0;
  element.registerParent$1(this);
  $.getInterceptor(t1).insertRange$3(t1, index, 1, element);
  $.get$Panel__containerTransformProperty().set$2(element, element.addTransform$0());
  this.onChildrenChanged$0();
},
 getVisualChild$1: function(index) {
  var t1 = this._liblib1$_children;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 get$visualChildCount: function() {
  return this._liblib1$_children.length;
},
 getChildTransform$1: function(child) {
  return $.get$Panel__containerTransformProperty().get$1(child);
},
 drawOverride$1: function(ctx) {
  var t1 = this.background;
  if (!(t1 == null)) {
    ctx.set$fillStyle(t1);
    ctx.fillRect$4(0, 0, this.get$width(), this.get$height());
  }
  $.ParentElement.prototype.drawOverride$1.call(this, ctx);
}
};

$$.ParentElement = {
 "super": "PElement",
 onChildrenChanged$0: function() {
  this.invalidateDraw$0();
},
 childInvalidated$1: function(child) {
  this.invalidateDraw$0();
},
 update$0: function() {
  this._forEach$1(new $.ParentElement_update_anon());
  $.PElement.prototype.update$0.call(this);
},
 drawOverride$1: function(ctx) {
  this._forEach$1(new $.ParentElement_drawOverride_anon(ctx));
},
 _forEach$1: function(f) {
  var length$, i;
  length$ = this.get$visualChildCount();
  if (typeof length$ !== 'number')
    return this._forEach$1$bailout(1, f, length$);
  for (i = 0; i < length$; ++i)
    f.call$1(this.getVisualChild$1(i));
},
 _forEach$1$bailout: function(state0, f, length$) {
  var i;
  for (i = 0; $.ltB(i, length$); ++i)
    f.call$1(this.getVisualChild$1(i));
},
 is$ParentElement: true
};

$$.PCanvas = {"": ["_liblib1$_children", "background", "_transforms", "cacheEnabled", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "Panel",
 setTopLeft$2: function(element, value) {
  this.getChildTransform$1(element).setToTranslation$2(value.get$x(), value.get$y());
},
 is$PCanvas: true
};

$$.PElement = {"": ["_parent>"],
 "super": "AttachableObject",
 clip$0: function() { return this.clip.call$0(); },
 get$width: function() {
  return this._width;
},
 set$width: function(value) {
  this._width = value;
  this.invalidateDraw$0();
},
 get$height: function() {
  return this._height;
},
 set$height: function(value) {
  this._height = value;
  this.invalidateDraw$0();
},
 get$size: function() {
  return $.Size$(this._width, this._height);
},
 set$size: function(value) {
  this._width = value.get$width();
  this._height = value.get$height();
  this.invalidateDraw$0();
},
 get$parent: function() {
  return this._parent;
},
 getTransform$0: function() {
  var tx, t1;
  tx = $.AffineTransform$(1, 0, 0, 1, 0, 0);
  t1 = this._transforms;
  $.getInterceptor(t1).forEach$1(t1, tx.get$concatenate());
  return tx;
},
 update$0: function() {
},
 drawCore$1: function(ctx) {
  if (this.cacheEnabled === true)
    this._drawCached$1(ctx);
  else
    this._drawNormal$1(ctx);
},
 addTransform$0: function() {
  var tx, t1;
  this.validateNotDisposed$0();
  tx = $.AffineTransform$(1, 0, 0, 1, 0, 0);
  t1 = this._transforms;
  $.getInterceptor(t1).add$1(t1, tx);
  return tx;
},
 invalidateDraw$0: function() {
  this.validateNotDisposed$0();
  if (!(this._lastDrawSize == null)) {
    this._lastDrawSize = null;
    this._invalidateParent$0();
  }
},
 registerParent$1: function(parent$) {
  $.require(this._parent == null, "parent already set");
  $.requireArgumentNotNull(parent$, "parent");
  this._parent = parent$;
},
 _stageDraw$1: function(ctx) {
  var dirty;
  this.update$0();
  dirty = this._lastDrawSize == null;
  this.drawCore$1(ctx);
  return dirty;
},
 _drawCached$1: function(ctx) {
  var t1, intLastDrawSize, t2;
  if (this._cacheCanvas == null)
    this._cacheCanvas = $.CanvasElement_CanvasElement(null, null);
  t1 = this._lastDrawSize;
  if (t1 == null)
    intLastDrawSize = null;
  else {
    t1 = t1.get$width();
    t1 = $.getInterceptor(t1).toInt$0(t1);
    t2 = this._lastDrawSize.get$height();
    intLastDrawSize = $.Size$(t1, $.getInterceptor(t2).toInt$0(t2));
  }
  if (!$.eqB($.CanvasUtil_getCanvasSize(this._cacheCanvas), intLastDrawSize)) {
    t1 = this.get$width();
    t1 = $.getInterceptor(t1).toInt$0(t1);
    this._cacheCanvas.set$width(t1);
    t1 = this.get$height();
    t1 = $.getInterceptor(t1).toInt$0(t1);
    this._cacheCanvas.set$height(t1);
    this._drawInternal$1(this._cacheCanvas.get$context2d());
  }
  ctx.save$0();
  $.CanvasUtil_transform(ctx, this.getTransform$0());
  ctx.drawImage$3(this._cacheCanvas, 0, 0);
  ctx.restore$0();
},
 _drawNormal$1: function(ctx) {
  var tx = this.getTransform$0();
  if (this._isClipped$2(tx, ctx) === true)
    return;
  ctx.save$0();
  $.CanvasUtil_transform(ctx, tx);
  if (this.clip) {
    ctx.beginPath$0();
    ctx.rect$4(0, 0, this.get$width(), this.get$height());
    ctx.clip$0();
  }
  this._drawInternal$1(ctx);
  ctx.restore$0();
},
 _drawInternal$1: function(ctx) {
  var t1 = this._alpha;
  if (!(t1 == null))
    ctx.set$globalAlpha(t1);
  this.drawOverride$1(ctx);
  this._lastDrawSize = this.get$size();
},
 _isClipped$2: function(tx, ctx) {
  if (this.clip)
    ;
  return false;
},
 _invalidateParent$0: function() {
  this._invalidatedEventHandle.fireEvent$1($.CTC12);
  this._parent.childInvalidated$1(this);
}
};

$$.Stage = {"": ["_invalidatedEventHandle", "_canvas>", "_liblib1$_element>", "_ctx", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "AttachableObject",
 get$size: function() {
  var t1 = this._canvas;
  return $.Size$(t1.get$width(), t1.get$height());
},
 get$invalidated: function() {
  return this._invalidatedEventHandle;
},
 get$rootElement: function() {
  return this._liblib1$_element;
},
 draw$0: function() {
  var t1, t2, t3;
  this.validateNotDisposed$0();
  t1 = this._ctx;
  t2 = t1 == null;
  t3 = this._canvas;
  if (t2)
    this._ctx = t3.get$context2d();
  else
    t1.clearRect$4(0, 0, t3.get$width(), t3.get$height());
  return this._liblib1$_element._stageDraw$1(this._ctx);
},
 childInvalidated$1: function(child) {
  this.validateNotDisposed$0();
  this._invalidatedEventHandle.fireEvent$1($.CTC12);
},
 Stage$2: function(_canvas, _element) {
  this._liblib1$_element.registerParent$1(this);
}
};

$$.BoardElement = {"": ["_elements", "_transforms", "cacheEnabled", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "ParentElement",
 get$visualChildCount: function() {
  var t1 = this._elements;
  if (t1 == null)
    return 0;
  else
    return $.getInterceptor(t1).get$length(t1);
},
 getVisualChild$1: function(index) {
  var t1 = this._elements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.getVisualChild$1$bailout(1, t1, index);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 getVisualChild$1$bailout: function(state0, t1, index) {
  return $.index(t1, index);
},
 update$0: function() {
  var i, t1, coords, se, etx, t3;
  if (this.get$_liblib3$_game() == null)
    this._elements = null;
  else if (this.get$_elementsNeedUpdate() === true) {
    this._elements = $.Array2d_Array2d(this.get$_liblib3$_game().get$field().get$width(), this.get$_liblib3$_game().get$field().get$height(), null);
    i = 0;
    while (true) {
      t1 = this._elements;
      t1 = $.getInterceptor(t1).get$length(t1);
      if (typeof t1 !== 'number')
        return this.update$0$bailout(1, i, t1);
      if (!(i < t1))
        break;
      coords = this._elements.getCoordinate$1(i);
      se = $.SquareElement$(coords.get$item1(), coords.get$item2());
      se.registerParent$1(this);
      this.get$_liblib3$_parent().wireSquareMouseEvent$1(se);
      etx = se.addTransform$0();
      t1 = coords.get$item1();
      if (typeof t1 !== 'number')
        return this.update$0$bailout(2, se, i, coords, etx, t1);
      t1 *= 80;
      t3 = coords.get$item2();
      if (typeof t3 !== 'number')
        return this.update$0$bailout(3, t1, t3, se, i, etx);
      etx.setToTranslation$2(t1, t3 * 80);
      t1 = this._elements;
      if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
        return this.update$0$bailout(4, t1, se, i);
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = se;
      ++i;
    }
    t1 = this.get$_liblib3$_game().get$field().get$width();
    if (typeof t1 !== 'number')
      return this.update$0$bailout(5, t1);
    t1 *= 80;
    t3 = this.get$_liblib3$_game().get$field().get$height();
    if (typeof t3 !== 'number')
      return this.update$0$bailout(6, t1, t3);
    this.set$size($.Size$(t1, t3 * 80));
  }
  $.ParentElement.prototype.update$0.call(this);
},
 update$0$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t1 = env1;
      i = env0;
      break;
    case 2:
      t1 = env4;
      etx = env3;
      coords = env2;
      i = env1;
      se = env0;
      break;
    case 3:
      etx = env4;
      i = env3;
      se = env2;
      t3 = env1;
      t1 = env0;
      break;
    case 4:
      i = env2;
      se = env1;
      t1 = env0;
      break;
    case 5:
      t1 = env0;
      break;
    case 6:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      var i, t1, coords, se, etx, t3;
      if (state0 === 0 && this.get$_liblib3$_game() == null)
        this._elements = null;
      else
        switch (state0) {
          case 0:
          default:
            if (state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && this.get$_elementsNeedUpdate() === true)
              switch (state0) {
                case 0:
                  this._elements = $.Array2d_Array2d(this.get$_liblib3$_game().get$field().get$width(), this.get$_liblib3$_game().get$field().get$height(), null);
                  i = 0;
                default:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          t1 = this._elements;
                          t1 = $.getInterceptor(t1).get$length(t1);
                        case 1:
                          state0 = 0;
                          if (!$.ltB(i, t1))
                            break L0;
                          coords = this._elements.getCoordinate$1(i);
                          se = $.SquareElement$(coords.get$item1(), coords.get$item2());
                          se.registerParent$1(this);
                          this.get$_liblib3$_parent().wireSquareMouseEvent$1(se);
                          etx = se.addTransform$0();
                          t1 = coords.get$item1();
                        case 2:
                          state0 = 0;
                          t1 = $.mul(t1, 80);
                          t3 = coords.get$item2();
                        case 3:
                          state0 = 0;
                          etx.setToTranslation$2(t1, $.mul(t3, 80));
                          t1 = this._elements;
                        case 4:
                          state0 = 0;
                          $.indexSet(t1, i, se);
                          ++i;
                      }
                  t1 = this.get$_liblib3$_game().get$field().get$width();
                case 5:
                  state0 = 0;
                  t1 = $.mul(t1, 80);
                  t3 = this.get$_liblib3$_game().get$field().get$height();
                case 6:
                  state0 = 0;
                  this.set$size($.Size$(t1, $.mul(t3, 80)));
              }
        }
      $.ParentElement.prototype.update$0.call(this);
  }
},
 get$_liblib3$_parent: function() {
  return $.propertyTypeCast(this.get$parent(), 'is$PCanvas').get$parent();
},
 get$_liblib3$_game: function() {
  return this.get$_liblib3$_parent().get$_liblib3$_game();
},
 get$_elementsNeedUpdate: function() {
  var t1 = this._elements;
  return t1 == null || !$.eqB(t1.get$width(), this.get$_liblib3$_game().get$field().get$width()) || !$.eqB(this._elements.get$height(), this.get$_liblib3$_game().get$field().get$height());
},
 get$_liblib3$_textureData: function() {
  return this.get$_liblib3$_parent().get$_liblib3$_textureData();
}
};

$$.GameBackgroundElement = {"": ["_transforms", "cacheEnabled", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 update$0: function() {
  if (!$.eqB(this.get$size(), this.get$_liblib3$_parent().get$size()))
    this.set$size(this.get$_liblib3$_parent().get$size());
},
 drawOverride$1: function(ctx) {
  var t1, rightBgLoc, t2, bottomBgLoc, i, xLoc, yLoc;
  t1 = $.sub(this.get$_liblib3$_parent().get$_liblib3$_game().get$field().get$width(), 1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  rightBgLoc = 80 * t1 + 32;
  t2 = $.sub(this.get$_liblib3$_parent().get$_liblib3$_game().get$field().get$height(), 1);
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  bottomBgLoc = 80 * t2 + 32;
  ctx.save$0();
  ctx.translate$2(this.get$_liblib3$_parent().get$_scaledBoardOffset().get$x(), this.get$_liblib3$_parent().get$_scaledBoardOffset().get$y());
  this.get$_liblib3$_textureData().drawTextureKeyAt$2(ctx, "game_board_corner_top_left.png");
  this.get$_liblib3$_textureData().drawTextureKeyAt$3(ctx, "game_board_corner_top_right.png", $.Coordinate$(rightBgLoc, 0));
  this.get$_liblib3$_textureData().drawTextureKeyAt$3(ctx, "game_board_corner_bottom_left.png", $.Coordinate$(0, bottomBgLoc));
  this.get$_liblib3$_textureData().drawTextureKeyAt$3(ctx, "game_board_corner_bottom_right.png", $.Coordinate$(rightBgLoc, bottomBgLoc));
  for (i = 1; $.ltB(i, $.sub(this.get$_liblib3$_parent().get$_liblib3$_game().get$field().get$width(), 1)); ++i) {
    xLoc = 80 * i + 32;
    this.get$_liblib3$_textureData().drawTextureKeyAt$3(ctx, "game_board_side_top.png", $.Coordinate$(xLoc, 0));
    this.get$_liblib3$_textureData().drawTextureKeyAt$3(ctx, "game_board_side_bottom.png", $.Coordinate$(xLoc, bottomBgLoc));
  }
  for (i = 1; $.ltB(i, $.sub(this.get$_liblib3$_parent().get$_liblib3$_game().get$field().get$height(), 1)); ++i) {
    yLoc = 80 * i + 32;
    this.get$_liblib3$_textureData().drawTextureKeyAt$3(ctx, "game_board_side_left.png", $.Coordinate$(0, yLoc));
    this.get$_liblib3$_textureData().drawTextureKeyAt$3(ctx, "game_board_side_right.png", $.Coordinate$(rightBgLoc, yLoc));
  }
  ctx.restore$0();
  ctx.save$0();
  ctx.transform$6(this.get$_liblib3$_parent().get$_scale(), 0, 0, this.get$_liblib3$_parent().get$_scale(), 0, 0);
  this._drawCorner$1(ctx);
  ctx.save$0();
  ctx.transform$6(-1, 0, 0, 1, $.CTC16.width, 0);
  this._drawCorner$1(ctx);
  t1 = $.CTC16.height;
  ctx.transform$6(1, 0, 0, -1, 0, t1);
  this._drawCorner$1(ctx);
  ctx.restore$0();
  ctx.transform$6(1, 0, 0, -1, 0, t1);
  this._drawCorner$1(ctx);
  ctx.restore$0();
},
 _drawCorner$1: function(ctx) {
  this.get$_liblib3$_textureData().drawTextureKeyAt$2(ctx, "background_top_left.png");
  this.get$_liblib3$_textureData().drawTextureKeyAt$3(ctx, "background_side_left.png", $.Coordinate$(0, $.CTC17.y));
},
 get$_liblib3$_parent: function() {
  return $.propertyTypeCast(this.get$parent(), 'is$PCanvas').get$parent();
},
 get$_liblib3$_textureData: function() {
  return this.get$_liblib3$_parent().get$_liblib3$_textureData();
}
};

$$.GameElement = {"": ["_liblib3$_canvas>", "_background", "_boardElement", "_scoreElement", "_newGameElement", "_titleElement", "_popAnimationLayer", "_dartAnimationLayer", "_liblib3$_textureData>", "_targetChanged", "_targetX", "_targetY", "_scale>", "_scaledBoardOffset>", "_scaledInnerBox", "_liblib3$_mouseDownElement", "_lastHoldUnfreeze", "_mouseDownTimeoutHandleId", "_liblib3$_game>", "_transforms", "cacheEnabled", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "ParentElement",
 get$newGameClick: function() {
  return this._newGameElement.get$clicked();
},
 get$game: function() {
  return this._liblib3$_game;
},
 set$game: function(value) {
  this._liblib3$_game = value;
  if (value == null)
    this.set$size($.CTC18);
  else
    this._updateSize$2(value.get$field().get$width(), value.get$field().get$height());
},
 setGameManager$1: function(manager) {
  this._scoreElement.setGameManager$1(manager);
},
 get$visualChildCount: function() {
  return 1;
},
 getVisualChild$1: function(index) {
  return this._liblib3$_canvas;
},
 update$0: function() {
  var offset, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
  $.ParentElement.prototype.update$0.call(this);
  offset = $.add(this._scaledBoardOffset, $.CTC15);
  t1 = this._liblib3$_canvas;
  t1.setTopLeft$2(this._boardElement, offset);
  t1.setTopLeft$2(this._popAnimationLayer, offset);
  t1.setTopLeft$2(this._dartAnimationLayer, offset);
  t2 = this._scale;
  t3 = $.CTC16.width;
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  t4 = 40 + t3;
  t5 = $.CTC17.x;
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  t4 -= t5;
  t6 = this._scoreElement;
  t7 = t6.get$width();
  if (typeof t7 !== 'number')
    throw $.iae(t7);
  t1.setTopLeft$2(t6, $.Coordinate$($.mul(t2, t4 - t7), 0));
  t6 = t1.getChildTransform$1(t6);
  t8 = this._scale;
  t6.scale$2(t8, t8);
  t8 = this._newGameElement;
  t6 = $.mul(t8.get$width(), 0.2);
  if (typeof t6 !== 'number')
    throw $.iae(t6);
  t6 = t5 + t6;
  t5 = this._scale;
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  t1.setTopLeft$2(t8, $.Coordinate$(t6 * t5, 0));
  t8 = t1.getChildTransform$1(t8);
  t9 = this._scale;
  t8.scale$2(t9, t9);
  t9 = $.mul(this._scale, 0.5);
  t8 = this._titleElement;
  t10 = $.mul(t8.get$width(), 1.7);
  if (typeof t10 !== 'number')
    throw $.iae(t10);
  t1.setTopLeft$2(t8, $.Coordinate$($.mul(t9, t3 - t10), 0));
  t8 = t1.getChildTransform$1(t8);
  t1 = this._scale;
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  t8.scale$2(1.7 * t1, 1.7 * t1);
},
 drawOverride$1: function(ctx) {
  $.ParentElement.prototype.drawOverride$1.call(this, ctx);
  this._drawTarget$1(ctx);
},
 _drawTarget$1: function(ctx) {
  var t1, targetLoc;
  t1 = this._targetX;
  if (!(t1 == null)) {
    targetLoc = $.Vector$(t1, this._targetY).scale$1(80);
    ctx.set$fillStyle("rgba(255, 0, 0, 0.5)");
    $.CanvasUtil_centeredCircle(ctx, $.add(targetLoc.get$x(), 40), $.add(targetLoc.get$y(), 40), 40);
    ctx.fill$0();
  }
},
 _startPopAnimation$2: function(start, reveals) {
  var t1, t2, values, t3, c, initialOffset, squareOffset, delay, ss, texturePrefix, frameCount, request;
  if (reveals == null) {
    t1 = this.get$game().get$field();
    t2 = $.NumberEnumerable_NumberEnumerable$fromRange(0, $.getInterceptor(t1).get$length(t1));
    t2 = $.getInterceptor(t2).map$1(t2, new $.GameElement__startPopAnimation_anon(this));
    t2 = $.getInterceptor(t2).filter$1(t2, new $.GameElement__startPopAnimation_anon0());
    reveals = $.getInterceptor(t2).map$1(t2, new $.GameElement__startPopAnimation_anon1()).toList$0();
  }
  t1 = $.$$(reveals);
  values = $.getInterceptor(t1).map$1(t1, new $.GameElement__startPopAnimation_anon2(start)).toList$0();
  $.getInterceptor(values).sort$1(values, new $.GameElement__startPopAnimation_anon3());
  for (t1 = $.getInterceptor(values).iterator$0(values), t2 = this._popAnimationLayer; t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    c = $.index(t3, 0);
    initialOffset = $.index(t3, 1);
    squareOffset = $.index(t3, 2);
    delay = $.index(t3, 3);
    ss = this.get$game().getSquareState$2(c.get$x(), c.get$y());
    switch (ss) {
      case $.CTC21:
      case $.CTC20:
        texturePrefix = "balloon_pop";
        frameCount = 28;
        break;
      case $.CTC27:
        texturePrefix = "balloon_explode";
        frameCount = 24;
        break;
      default:
        throw $.$$throw("not supported");
    }
    request = $.TextureAnimationRequest$(texturePrefix, frameCount, squareOffset, delay, "balloon.png", initialOffset, 0);
    switch (ss) {
      case $.CTC21:
      case $.CTC20:
        t3 = request.get$started();
        $.getInterceptor(t3).add$1(t3, new $.GameElement__startPopAnimation_anon4());
        break;
      case $.CTC27:
        t3 = request.get$started();
        $.getInterceptor(t3).add$1(t3, new $.GameElement__startPopAnimation_anon5());
        break;
    }
    $.getInterceptor(t2).add$1(t2, request);
  }
},
 _startPopAnimation$1: function(start) {
  return this._startPopAnimation$2(start,null)
},
 _startDartAnimation$1: function(points) {
  var t1, t2, t3, t4, squareOffset;
  $.get$GameAudio__audioEventHandle().fireEvent$1("throw");
  for (t1 = $.getInterceptor(points).iterator$0(points), t2 = this._dartAnimationLayer; t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    t4 = t3.get$x();
    if (typeof t4 !== 'number')
      throw $.iae(t4);
    t4 = 80 * t4;
    t3 = t3.get$y();
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    squareOffset = $.CTC30.operator$add$1($.Vector$(t4, 80 * t3));
    $.getInterceptor(t2).add$1(t2, $.TextureAnimationRequest$("dart_fly_shadow", 54, squareOffset, 0, null, null, 0));
    $.getInterceptor(t2).add$1(t2, $.TextureAnimationRequest$("dart_fly", 54, squareOffset, 0, null, null, 0));
  }
},
 wireSquareMouseEvent$1: function(square) {
  $.ClickManager_addHandler(square, this.get$_squareClicked());
  $.ClickManager_addMouseDownHandler(square, this.get$_squareMouseDown());
  $.ClickManager_addMouseUpHandler(square, this.get$_squareMouseUp());
  $.ClickManager_addMouseMoveHandler(square, this.get$_squareMouseMove());
},
 _squareClicked$1: function(args) {
  var se;
  if (this._liblib3$_game.get$gameEnded() !== true && this._lastHoldUnfreeze == null) {
    se = args.get$element();
    this._click$3(se.get$x(), se.get$y(), args.get$shiftKey());
  }
},
 get$_squareClicked: function() { return new $.BoundClosure(this, '_squareClicked$1'); },
 _squareMouseDown$1: function(args) {
  this._lastHoldUnfreeze = null;
  if (!(this._mouseDownTimeoutHandleId == null))
    $.window().clearTimeout$1(this._mouseDownTimeoutHandleId);
  this._liblib3$_mouseDownElement = args.get$element();
  this._mouseDownTimeoutHandleId = $.window().setTimeout$2(this.get$_mouseDownTimeoutHandle(), 1000);
},
 get$_squareMouseDown: function() { return new $.BoundClosure(this, '_squareMouseDown$1'); },
 _squareMouseMove$1: function(args) {
  var se = args.get$element();
  if (!$.eqB(this._liblib3$_mouseDownElement, se))
    this._clearTimeout$0();
},
 get$_squareMouseMove: function() { return new $.BoundClosure(this, '_squareMouseMove$1'); },
 _squareMouseUp$1: function(args) {
  args.get$element();
  this._clearTimeout$0();
},
 get$_squareMouseUp: function() { return new $.BoundClosure(this, '_squareMouseUp$1'); },
 _mouseDownTimeoutHandle$0: function() {
  var t1 = this._liblib3$_mouseDownElement;
  this._click$3(t1.get$x(), t1.get$y(), true);
  this._lastHoldUnfreeze = this._liblib3$_mouseDownElement;
  this._clearTimeout$0();
},
 get$_mouseDownTimeoutHandle: function() { return new $.BoundClosure0(this, '_mouseDownTimeoutHandle$0'); },
 _clearTimeout$0: function() {
  if (!(this._mouseDownTimeoutHandleId == null)) {
    $.window().clearTimeout$1(this._mouseDownTimeoutHandleId);
    this._mouseDownTimeoutHandleId = null;
  }
  this._liblib3$_mouseDownElement = null;
},
 _liblib3$_target$2: function(x, y) {
  this._targetX = x;
  this._targetY = y;
  this._targetChanged.fireEvent$1(null);
  this.invalidateDraw$0();
},
 get$_liblib3$_target: function() { return new $.BoundClosure1(this, '_liblib3$_target$2'); },
 _toggleFlag$2: function(x, y) {
  var ss = this.get$game().getSquareState$2(x, y);
  if ($.eqB(ss, $.CTC20)) {
    this.get$game().setFlag$3(x, y, true);
    $.get$GameAudio__audioEventHandle().fireEvent$1("flag");
    return true;
  } else if ($.eqB(ss, $.CTC22)) {
    this.get$game().setFlag$3(x, y, false);
    $.get$GameAudio__audioEventHandle().fireEvent$1("unflag");
    return true;
  }
  return false;
},
 _click$3: function(x, y, alt) {
  var ss, t1, reveals, t2;
  ss = this.get$game().getSquareState$2(x, y);
  t1 = alt === true;
  if (t1)
    if ($.eqB(ss, $.CTC20) || $.eqB(ss, $.CTC22)) {
      this._toggleFlag$2(x, y);
      reveals = null;
    } else if ($.eqB(ss, $.CTC21))
      if (this.get$game().canReveal$2(x, y) === true) {
        t2 = $.$$(this.get$game().get$field().getAdjacentIndices$2(x, y));
        t2 = $.getInterceptor(t2).map$1(t2, new $.GameElement__click_anon(this));
        this._startDartAnimation$1($.getInterceptor(t2).filter$1(t2, new $.GameElement__click_anon0(this)).toList$0());
        reveals = this.get$game().reveal$2(x, y);
      } else
        reveals = null;
    else
      reveals = null;
  else if ($.eqB(ss, $.CTC20)) {
    this._startDartAnimation$1([$.Coordinate$(x, y)]);
    reveals = this.get$game().reveal$2(x, y);
  } else
    reveals = null;
  if (!(reveals == null) && $.gtB($.getInterceptor(reveals).get$length(reveals), 0)) {
    if (!t1)
      $.index(reveals, 0);
    this._startPopAnimation$2($.Coordinate$(x, y), reveals);
  } else if ($.eqB(this.get$game().get$state(), $.CTC24))
    this._startPopAnimation$1($.Coordinate$(x, y));
},
 _updateSize$2: function(w, h) {
  var t1, sizeX, sizeY, t2;
  t1 = $.CTC16.width;
  sizeX = $.GameElement__getScale(w, t1, 1344);
  sizeY = $.GameElement__getScale(h, $.CTC16.height, 1344);
  t2 = $.Size$(sizeX, sizeY);
  this.set$size(t2);
  this._liblib3$_canvas.set$size(t2);
  this._scale = $.div(sizeX, t1);
  this._scaledBoardOffset = $.CTC17.scale$1(this._scale);
  t2 = this._scale;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  this._scaledInnerBox = $.Box$(256 * t2, 0, $.sub(sizeX, 512 * t2), sizeY);
},
 GameElement$1: function(textureData) {
  var t1, t2, t3;
  t1 = this._liblib3$_canvas;
  t1.registerParent$1(this);
  t1.addElement$1(this._background);
  t1.addElement$1(this._boardElement);
  t2 = this._newGameElement;
  t1.addElement$1(t2);
  t1.addElement$1(this._scoreElement);
  t1.addElement$1(this._popAnimationLayer);
  t3 = this._titleElement;
  t1.addElement$1(t3);
  t1.addElement$1(this._dartAnimationLayer);
  t2 = t2.get$clicked();
  $.getInterceptor(t2).add$1(t2, new $.anon5());
  $.ClickManager_setClickable(t3, true);
  $.ClickManager_addHandler(t3, new $.anon6());
}
};

$$.GameRoot = {"": ["_liblib3$_stage", "_liblib3$_canvas>", "_gameElement>", "_clickMan", "_gameElementTx", "_frameRequested", "_liblib4$_width", "_liblib4$_height", "_bombCount", "_gameStorage", "_game", "_updatedEventId", "_gameStateChangedId", "_setIntervalId"],
 "super": "GameManager",
 newGame$0: function() {
  $.GameManager.prototype.newGame$0.call(this);
  var t1 = $.GameManager.prototype.get$game.call(this);
  this._gameElement.set$game(t1);
  this._requestFrame$0();
},
 onGameStateChanged$1: function(newState) {
  var t1, t2;
  switch (newState) {
    case $.CTC23:
      $.get$GameAudio__audioEventHandle().fireEvent$1("win");
      break;
  }
  t1 = newState.name;
  t2 = this.get$game().get$field();
  $.trackAnalyticsEvent("game", t1, $.getInterceptor(t2).toString$0(t2), null);
},
 onNewBestTime$1: function(value) {
  var t1 = this.get$game().get$field();
  $.trackAnalyticsEvent("game", "record", $.getInterceptor(t1).toString$0(t1), value);
},
 _updateCanvasSize$0: function() {
  var t1, t2;
  t1 = $.window().get$innerWidth();
  t2 = this._liblib3$_canvas;
  t2.set$width(t1);
  t2.set$height($.window().get$innerHeight());
  this._requestFrame$0();
},
 _requestFrame$0: function() {
  if (!this._frameRequested) {
    this._frameRequested = true;
    $.window().requestAnimationFrame$1(this.get$_onFrame());
  }
},
 _onFrame$1: function(time) {
  var t1, boardInnerBox, t2, prettyScale, newDimensions, delta, t3, updated;
  t1 = this._gameElement;
  boardInnerBox = t1._scaledInnerBox;
  t2 = this._liblib3$_stage;
  prettyScale = $.min(1, $.min($.div(t2.get$size().get$width(), boardInnerBox.get$width()), $.div(t2.get$size().get$height(), boardInnerBox.get$height())));
  newDimensions = $.mul(t1.get$size(), prettyScale);
  delta = $.Vector$($.sub(t2.get$size().get$width(), newDimensions.get$width()), $.min(40, $.sub(t2.get$size().get$height(), newDimensions.get$height()))).scale$1(0.5).scale$1(1 / prettyScale);
  t3 = this._gameElementTx;
  t3.setToScale$2(prettyScale, prettyScale);
  t3.translate$2(delta.get$x(), delta.get$y());
  updated = t2.draw$0();
  this._frameRequested = false;
  if (updated === true)
    this._requestFrame$0();
},
 get$_onFrame: function() { return new $.BoundClosure(this, '_onFrame$1'); },
 updateClock$0: function() {
  this._requestFrame$0();
  $.GameManager.prototype.updateClock$0.call(this);
},
 get$updateClock: function() { return new $.BoundClosure0(this, 'updateClock$0'); },
 gameUpdated$1: function(args) {
  this._requestFrame$0();
},
 get$gameUpdated: function() { return new $.BoundClosure(this, 'gameUpdated$1'); },
 _stageInvalidated$1: function(args) {
  this._requestFrame$0();
},
 get$_stageInvalidated: function() { return new $.BoundClosure(this, '_stageInvalidated$1'); },
 _mouseMoveHandler$1: function(args) {
  var t1, se, showPointer;
  if (this.get$game().get$gameEnded() !== true) {
    t1 = args.get$element();
    t1 = typeof t1 === 'object' && t1 !== null && !!t1.is$SquareElement;
  } else
    t1 = false;
  if (t1) {
    se = args.get$element();
    showPointer = this.get$game().canReveal$2(se.get$x(), se.get$y());
  } else {
    t1 = args.get$element();
    if (typeof t1 === 'object' && t1 !== null && !!t1.is$NewGameElement)
      showPointer = true;
    else {
      t1 = args.get$element();
      showPointer = typeof t1 === 'object' && t1 !== null && !!t1.is$GameTitleElement && true;
    }
  }
  t1 = showPointer === true ? "pointer" : "inherit";
  this._liblib3$_canvas.get$style().set$cursor(t1);
},
 get$_mouseMoveHandler: function() { return new $.BoundClosure(this, '_mouseMoveHandler$1'); },
 _mouseOutHandler$1: function(args) {
  var t1 = "inherit";
  this._liblib3$_canvas.get$style().set$cursor(t1);
},
 get$_mouseOutHandler: function() { return new $.BoundClosure(this, '_mouseOutHandler$1'); },
 GameRoot$_internal$7: function(width, height, bombCount, _canvas, _stage, gameElement, _clickMan) {
  var t1, t2, t3;
  t1 = this._gameElement;
  t1.setGameManager$1(this);
  t2 = this._liblib3$_stage;
  t3 = t2.get$invalidated();
  $.getInterceptor(t3).add$1(t3, this.get$_stageInvalidated());
  t3 = t1.get$newGameClick();
  $.getInterceptor(t3).add$1(t3, new $.anon0(this));
  $.ClickManager_addMouseMoveHandler(t1, this.get$_mouseMoveHandler());
  $.ClickManager_addMouseOutHandler(t2, this.get$_mouseOutHandler());
  t2 = $.window().get$on().get$resize();
  $.getInterceptor(t2).add$1(t2, new $.anon1(this));
  this._updateCanvasSize$0();
}
};

$$.NewGameElement = {"": ["_clickedEvent>", "_transforms", "cacheEnabled", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 get$clicked: function() {
  return this._clickedEvent;
},
 drawOverride$1: function(ctx) {
  var texture = $.Mouse_isMouseDirectlyOver(this) === true ? "button_new_game_clicked.png" : "button_new_game.png";
  this.get$_liblib3$_textureData().drawTextureKeyAt$2(ctx, texture);
},
 get$_liblib3$_parent: function() {
  return $.propertyTypeCast(this.get$parent(), 'is$PCanvas').get$parent();
},
 get$_liblib3$_textureData: function() {
  return this.get$_liblib3$_parent().get$_liblib3$_textureData();
},
 get$_liblib3$_game: function() {
  return this.get$_liblib3$_parent().get$_liblib3$_game();
},
 _mouseDirectlyOver$1: function(args) {
  this.invalidateDraw$0();
},
 get$_mouseDirectlyOver: function() { return new $.BoundClosure(this, '_mouseDirectlyOver$1'); },
 NewGameElement$0: function() {
  $.ClickManager_setClickable(this, true);
  $.ClickManager_addHandler(this, new $.anon4(this));
  $.get$Mouse_isMouseDirectlyOverProperty().addHandler$2(this, this.get$_mouseDirectlyOver());
},
 is$NewGameElement: true
};

$$.ScoreElement = {"": ["_gameManager", "_clockStr", "_bombsStr", "_bestTimeStr", "_textSize", "_transforms", "cacheEnabled", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 setGameManager$1: function(manager) {
  this._gameManager = manager;
  this.invalidateDraw$0();
},
 update$0: function() {
  var t1, newBombStr, newClockStr, bestTimeStr;
  t1 = this.get$_liblib3$_game().get$bombsLeft();
  newBombStr = $.getInterceptor(t1).toString$0(t1);
  if (!$.eqB(newBombStr, this._bombsStr)) {
    this._bombsStr = newBombStr;
    this.invalidateDraw$0();
  }
  if (!(this.get$_liblib3$_game().get$duration() == null)) {
    t1 = $.mul(this.get$_liblib3$_game().get$duration().get$inMilliseconds(), 0.001);
    newClockStr = $.getInterceptor(t1).toStringAsFixed$1(t1, 1);
  } else
    newClockStr = "";
  if (!$.eqB(newClockStr, this._clockStr)) {
    this._clockStr = newClockStr;
    this.invalidateDraw$0();
  }
  if (!(this._gameManager.get$bestTimeMilliseconds() == null)) {
    t1 = $.mul(this._gameManager.get$bestTimeMilliseconds(), 0.001);
    bestTimeStr = $.getInterceptor(t1).toStringAsFixed$1(t1, 1);
  } else
    bestTimeStr = null;
  if (!$.eqB(this._bestTimeStr, bestTimeStr)) {
    this._bestTimeStr = bestTimeStr;
    this.invalidateDraw$0();
  }
  $.PElement.prototype.update$0.call(this);
},
 drawOverride$1: function(ctx) {
  var t1, rowHeight, textSize, t2;
  t1 = this.get$height();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  rowHeight = 0.33 * t1;
  t1 = rowHeight * 0.9;
  ctx.set$font($.S($.getInterceptor(t1).toInt$0(t1)) + "px Slackey");
  ctx.set$textBaseline("middle");
  textSize = this._getTextSize$1(ctx);
  ctx.set$fillStyle("black");
  ctx.set$textAlign("right");
  t2 = 0.5 * rowHeight;
  ctx.fillText$3("BOMBS LEFT:", textSize, t2);
  ctx.set$textAlign("left");
  ctx.fillText$3(this._bombsStr, $.add(textSize, 15), t2);
  ctx.set$textAlign("right");
  t2 = 1.5 * rowHeight;
  ctx.fillText$3("TIME:", textSize, t2);
  ctx.set$textAlign("left");
  ctx.fillText$3(this._clockStr, $.add(textSize, 15), t2);
  if (!(this._bestTimeStr == null)) {
    ctx.set$textAlign("right");
    t1 = 2.5 * rowHeight;
    ctx.fillText$3("RECORD:", textSize, t1);
    ctx.set$textAlign("left");
    ctx.fillText$3(this._bestTimeStr, $.add(textSize, 15), t1);
  }
},
 _getTextSize$1: function(ctx) {
  if (this._textSize == null)
    this._textSize = ctx.measureText$1("BOMBS LEFT:").get$width();
  return this._textSize;
},
 get$_liblib3$_game: function() {
  return this._gameManager.get$game();
}
};

$$.SquareElement = {"": ["x>", "y>", "_lastDrawingState", "_transforms", "cacheEnabled", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 update$0: function() {
  if (!$.eqB(this._lastDrawingState, this.get$_squareState())) {
    this._lastDrawingState = this.get$_squareState();
    this.invalidateDraw$0();
  }
},
 drawOverride$1: function(ctx) {
  var textureName, t1;
  textureName = null;
  switch (this._lastDrawingState) {
    case $.CTC20:
      textureName = this._getHiddenTexture$0();
      break;
    case $.CTC22:
      textureName = "balloon_tagged_frozen.png";
      break;
    case $.CTC21:
      t1 = this.get$_adjacentCount();
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= $.CTC31.length)
        throw $.ioore(t1);
      textureName = $.S($.CTC31[t1]) + ".png";
      break;
    case $.CTC27:
      textureName = "crater_b.png";
      break;
    case $.CTC29:
      textureName = "balloon_tagged_bomb.png";
      break;
  }
  this.get$_liblib3$_textureData().drawTextureKeyAt$2(ctx, textureName);
},
 toString$0: function() {
  return "Square at [" + $.S(this.x) + ", " + $.S(this.y) + "]";
},
 _getHiddenTexture$0: function() {
  if ($.eqB(this.get$_liblib3$_game().get$state(), $.CTC24)) {
    var index = $.mod($.add(this.x, this.y), 4);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= $.CTC32.length)
      throw $.ioore(index);
    return $.CTC32[index];
  } else
    return "balloon.png";
},
 get$_squareState: function() {
  return this.get$_liblib3$_game().getSquareState$2(this.x, this.y);
},
 get$_adjacentCount: function() {
  return this.get$_liblib3$_game().get$field().getAdjacentCount$2(this.x, this.y);
},
 get$_board: function() {
  return this.get$parent();
},
 get$_liblib3$_textureData: function() {
  return this.get$_board().get$_liblib3$_textureData();
},
 get$_liblib3$_game: function() {
  return this.get$_board().get$_liblib3$_game();
},
 SquareElement$2: function(x, y) {
  $.ClickManager_setClickable(this, true);
},
 is$SquareElement: true
};

$$.GameTitleElement = {"": ["_transforms", "cacheEnabled", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 drawOverride$1: function(ctx) {
  this.get$_liblib3$_textureData().drawTextureKeyAt$2(ctx, "logo_win.png");
},
 get$_liblib3$_parent: function() {
  return $.propertyTypeCast(this.get$parent(), 'is$PCanvas').get$parent();
},
 get$_liblib3$_textureData: function() {
  return this.get$_liblib3$_parent().get$_liblib3$_textureData();
},
 get$_liblib3$_game: function() {
  return this.get$_liblib3$_parent().get$_liblib3$_game();
},
 _mouseDirectlyOver$1: function(args) {
  this.invalidateDraw$0();
},
 get$_mouseDirectlyOver: function() { return new $.BoundClosure(this, '_mouseDirectlyOver$1'); },
 is$GameTitleElement: true
};

$$.Proxy = {"": ["_port>", "_liblib6$_id>"],
 "super": "Object",
 operator$index$1: function(arg) {
  return $.Proxy__forward(this, "[]", "method", [arg]);
},
 oprator$indexSet$2: function(key, value) {
  return $.Proxy__forward(this, "[]=", "method", [key, value]);
},
 operator$eq$1: function(other) {
  var t1;
  if (this === other)
    t1 = true;
  else
    t1 = typeof other === 'object' && other !== null && !!other.is$Proxy && $._jsPortEquals.callSync$1([$._serialize(this), $._serialize(other)]) === true;
  return t1;
},
 noSuchMethod$1: function(invocation) {
  var member, args, kind;
  member = invocation.get$memberName();
  args = invocation.get$positionalArguments();
  if (args == null)
    args = [];
  if (invocation.get$isGetter() === true) {
    if ($.getInterceptor(member).startsWith$1(member, "get:") === true)
      member = $.getInterceptor(member).substring$1(member, 4);
    kind = "get";
  } else if (invocation.get$isSetter() === true) {
    if ($.getInterceptor(member).endsWith$1(member, "=") === true)
      member = $.getInterceptor(member).substring$2(member, 0, $.sub($.getInterceptor(member).get$length(member), 1));
    if ($.getInterceptor(member).startsWith$1(member, "set:") === true)
      member = $.getInterceptor(member).substring$1(member, 4);
    kind = "set";
  } else if ($.getInterceptor(member).startsWith$1(member, "get:") === true) {
    member = $.getInterceptor(member).substring$1(member, 4);
    kind = "get";
  } else if ($.getInterceptor(member).startsWith$1(member, "set:") === true) {
    member = $.getInterceptor(member).substring$1(member, 4);
    kind = "set";
  } else
    kind = "method";
  return $.Proxy__forward(this, member, kind, args);
},
 is$Proxy: true
};

$$._FunctionProxy = {"": ["_call", "_port", "_liblib6$_id"],
 "super": "Proxy",
 _FunctionProxy$_internal$2: function(port, id) {
  this._call = new $.anon3(id, port);
  $.indexSet($.get$_FunctionProxy__map(), this._call, this);
}
};

$$._ProxiedObjectTable = {"": ["_name", "_nextId", "_deletedCount", "_registry>", "_port>", "_globalIds", "_handleStack", "_scopeIndices>"],
 "super": "Object",
 enterScope$0: function() {
  var t1 = this._scopeIndices;
  $.getInterceptor(t1).addLast$1(t1, this._handleStack.length);
},
 exitScope$0: function() {
  var t1, start, t2, t3, i, t4, key;
  t1 = this._scopeIndices;
  start = $.getInterceptor(t1).removeLast$0(t1);
  if (start !== (start | 0))
    return this.exitScope$0$bailout(1, start);
  for (t1 = this._registry, t2 = this._handleStack, t3 = this._globalIds, i = start; t4 = t2.length, i < t4; ++i) {
    if (i < 0)
      throw $.ioore(i);
    key = t2[i];
    if ($.getInterceptor(t3).contains$1(t3, key) !== true) {
      if (i >= t2.length)
        throw $.ioore(i);
      t1.remove$1(t2[i]);
      this._deletedCount = this._deletedCount + 1;
    }
  }
  $.getInterceptor(t2).removeRange$2(t2, start, t4 - start);
},
 exitScope$0$bailout: function(state0, start) {
  var t1, t2, t3, i, t4, t5, key;
  for (t1 = this._registry, t2 = this._handleStack, t3 = this._globalIds, i = start; t4 = $.ltB(i, t2.length), t5 = t2.length, t4; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= t5)
      throw $.ioore(i);
    key = t2[i];
    if ($.getInterceptor(t3).contains$1(t3, key) !== true) {
      if (i >= t2.length)
        throw $.ioore(i);
      t1.remove$1(t2[i]);
      this._deletedCount = this._deletedCount + 1;
    }
  }
  t1 = $.getInterceptor(t2);
  if (typeof start !== 'number')
    throw $.iae(start);
  t1.removeRange$2(t2, start, t5 - start);
},
 add$1: function(x) {
  var t1, t2, id, t3;
  if (this._scopeIndices.length === 0)
    throw $.$$throw("Must be inside scope to allocate.");
  t1 = this._name + "-";
  t2 = this._nextId;
  this._nextId = t2 + 1;
  id = t1 + $.S(t2);
  $.indexSet(this._registry, id, x);
  t3 = this._handleStack;
  $.getInterceptor(t3).addLast$1(t3, id);
  return id;
},
 get$1: function(id) {
  return $.index(this._registry, id);
},
 get$sendPort: function() {
  return this._port.toSendPort$0();
},
 _ProxiedObjectTable$0: function() {
  this._port.receive$1(new $.anon2(this));
}
};

$$.GameStorage = {"": ["_bestTimeUpdated", "_storage"],
 "super": "Object",
 recordState$1: function(state) {
  var t1 = state.name;
  this._setIntValue$2(t1, $.add(this._getIntValue$1(t1), 1));
},
 updateBestTime$1: function(game) {
  var w, h, m, duration, key, currentScore;
  w = game.get$field().get$width();
  h = game.get$field().get$height();
  m = game.get$field().get$bombCount();
  duration = game.get$duration().get$inMilliseconds();
  key = "w" + $.S(w) + "-h" + $.S(h) + "-m" + $.S(m);
  currentScore = this._getIntValue$2(key, null);
  if (currentScore == null || $.gtB(currentScore, duration)) {
    this._setIntValue$2(key, duration);
    this._bestTimeUpdated.fireEvent$1(null);
    return true;
  } else
    return false;
},
 getBestTimeMilliseconds$3: function(width, height, bombCount) {
  return this._getIntValue$2("w" + $.S(width) + "-h" + $.S(height) + "-m" + $.S(bombCount), null);
},
 reset$0: function() {
  var t1 = this._storage;
  $.getInterceptor(t1).clear$0(t1);
},
 toString$0: function() {
  return $.Maps_mapToString(this._storage);
},
 _getIntValue$2: function(key, defaultValue) {
  var strValue = $.index(this._storage, key);
  if (strValue == null)
    return defaultValue;
  else
    return $.int_parse(strValue);
},
 _getIntValue$1: function(key) {
  return this._getIntValue$2(key,0)
},
 _setIntValue$2: function(key, value) {
  var t1, t2;
  t1 = value == null;
  t2 = this._storage;
  if (t1)
    $.indexSet(t2, key, null);
  else
    $.indexSet(t2, key, $.getInterceptor(value).toString$0(value));
}
};

$$.GameManager = {"": ["_game>"],
 "super": "Object",
 get$game: function() {
  return this._game;
},
 get$bestTimeMilliseconds: function() {
  return this._gameStorage.getBestTimeMilliseconds$3(this._liblib4$_width, this._liblib4$_height, this._bombCount);
},
 newGame$0: function() {
  var t1, t2;
  if (!(this._updatedEventId == null)) {
    this._game.get$updated().remove$1(this._updatedEventId);
    this._game.get$stateChanged().remove$1(this._gameStateChangedId);
    this._gameStateChanged$1($.CTC19);
  }
  this._game = $.Game$($.Field_Field(this._bombCount, this._liblib4$_width, this._liblib4$_height, null));
  t1 = this._game.get$updated();
  this._updatedEventId = $.getInterceptor(t1).add$1(t1, this.get$gameUpdated());
  t2 = this._game.get$stateChanged();
  this._gameStateChangedId = $.getInterceptor(t2).add$1(t2, this.get$_gameStateChanged());
},
 _liblib4$_click$3: function(x, y, alt) {
  var ss = this._game.getSquareState$2(x, y);
  if (alt === true) {
    if ($.eqB(ss, $.CTC20))
      this._game.setFlag$3(x, y, true);
    else if ($.eqB(ss, $.CTC22))
      this._game.setFlag$3(x, y, false);
    else if ($.eqB(ss, $.CTC21))
      this._game.reveal$2(x, y);
  } else if ($.eqB(ss, $.CTC20))
    this._game.reveal$2(x, y);
},
 updateClock$0: function() {
  if (this._setIntervalId == null && $.eqB(this._game.get$state(), $.CTC26))
    this._setIntervalId = $.window().setInterval$2(this.get$updateClock(), 1000);
  else if (!(this._setIntervalId == null) && !$.eqB(this._game.get$state(), $.CTC26)) {
    $.window().clearInterval$1(this._setIntervalId);
    this._setIntervalId = null;
  }
},
 get$updateClock: function() { return new $.BoundClosure0(this, 'updateClock$0'); },
 onNewBestTime$1: function(value) {
},
 onGameStateChanged$1: function(value) {
},
 _gameStateChanged$1: function(newState) {
  var t1 = this._gameStorage;
  t1.recordState$1(newState);
  if ($.eqB(newState, $.CTC23))
    if (t1.updateBestTime$1(this._game) === true)
      this.onNewBestTime$1(this.get$bestTimeMilliseconds());
  this.updateClock$0();
  this.onGameStateChanged$1(newState);
},
 get$_gameStateChanged: function() { return new $.BoundClosure(this, '_gameStateChanged$1'); },
 GameManager$3: function(_width, _height, _bombCount) {
  this.newGame$0();
}
};

$$.Field = {"": ["bombCount>", "_adjacents", "width", "height", "_source"],
 "super": "Array2d",
 getAdjacentCount$2: function(x, y) {
  var t1, val, t2;
  if (this.get$2(x, y) === true)
    return;
  t1 = this._adjacents;
  val = t1.get$2(x, y);
  if (val == null) {
    for (t2 = this.getAdjacentIndices$2(x, y), t2 = $.getInterceptor(t2).iterator$0(t2), val = 0; t2.get$hasNext() === true;)
      if (this.operator$index$1(t2.next$0()) === true)
        ++val;
    t1.set$3(x, y, val);
  }
  return val;
},
 toString$0: function() {
  return "w" + $.S(this.width) + "h" + $.S(this.height) + "m" + $.S(this.bombCount);
},
 Field$_internal$3: function(bombCount, cols, source) {
  var t1, count;
  for (t1 = $.getInterceptor(this).iterator$0(this), count = 0; t1.get$hasNext() === true;)
    if (t1.next$0() === true)
      ++count;
}
};

$$.Game = {"": ["field>", "_states", "_updatedEvent", "_gameStateEvent", "_state>", "_bombsLeft", "_revealsLeft", "_startTime", "_endTime"],
 "super": "Object",
 get$bombsLeft: function() {
  return this._bombsLeft;
},
 get$state: function() {
  return this._state;
},
 get$updated: function() {
  return this._updatedEvent;
},
 get$stateChanged: function() {
  return this._gameStateEvent;
},
 getSquareState$2: function(x, y) {
  return this._states.get$2(x, y);
},
 get$gameEnded: function() {
  return $.eqB(this._state, $.CTC23) || $.eqB(this._state, $.CTC24);
},
 get$duration: function() {
  if (this._startTime == null)
    return;
  else {
    var end = this._endTime;
    if (end == null)
      end = $.Date_Date$now();
    return end.difference$1(this._startTime);
  }
},
 setFlag$3: function(x, y, value) {
  var t1, currentSS;
  this._ensureStarted$0();
  t1 = this._states;
  currentSS = t1.get$2(x, y);
  if (value) {
    $.require($.eq(currentSS, $.CTC20), null);
    t1.set$3(x, y, $.CTC22);
    this._bombsLeft = $.sub(this._bombsLeft, 1);
  } else {
    $.require($.eq(currentSS, $.CTC22), null);
    t1.set$3(x, y, $.CTC20);
    this._bombsLeft = $.add(this._bombsLeft, 1);
  }
  this._updatedEvent.fireEvent$1($.CTC12);
},
 canReveal$2: function(x, y) {
  if ($.eqB(this._states.get$2(x, y), $.CTC20))
    return true;
  else if (this._canChord$2(x, y) === true)
    return true;
  return false;
},
 reveal$2: function(x, y) {
  var reveals;
  this._ensureStarted$0();
  $.require(this.canReveal$2(x, y), "Item cannot be revealed.");
  if ($.eqB(this._states.get$2(x, y), $.CTC20))
    if (this.field.get$2(x, y) === true) {
      this._setLost$0();
      reveals = [];
    } else {
      reveals = this._doReveal$2(x, y);
      if (typeof reveals !== 'object' || reveals === null || reveals.constructor !== Array || !!reveals.fixed$length)
        return this.reveal$2$bailout(1, reveals);
    }
  else
    reveals = this._canChord$2(x, y) === true ? this._doChord$2(x, y) : null;
  this._updatedEvent.fireEvent$1($.CTC12);
  if ($.eqB(this._state, $.CTC24))
    return;
  else
    return reveals;
},
 reveal$2$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      reveals = env0;
      break;
  }
  switch (state0) {
    case 0:
      this._ensureStarted$0();
      $.require(this.canReveal$2(x, y), "Item cannot be revealed.");
    case 1:
      var reveals;
      if (state0 === 1 || state0 === 0 && $.eqB(this._states.get$2(x, y), $.CTC20))
        switch (state0) {
          case 0:
          case 1:
            if (state0 === 0 && this.field.get$2(x, y) === true) {
              this._setLost$0();
              reveals = [];
            } else
              switch (state0) {
                case 0:
                  reveals = this._doReveal$2(x, y);
                case 1:
                  state0 = 0;
              }
        }
      else
        reveals = this._canChord$2(x, y) === true ? this._doChord$2(x, y) : null;
      this._updatedEvent.fireEvent$1($.CTC12);
      if ($.eqB(this._state, $.CTC24))
        return;
      else
        return reveals;
  }
},
 _canChord$2: function(x, y) {
  var adjCount;
  if ($.eqB(this._states.get$2(x, y), $.CTC21)) {
    adjCount = this.field.getAdjacentCount$2(x, y);
    if ($.gtB(adjCount, 0))
      if ($.gtB(this._getAdjacentCount$3(x, y, $.CTC20), 0))
        if ($.eqB(this._getAdjacentCount$3(x, y, $.CTC22), adjCount))
          return true;
  }
  return false;
},
 _doChord$2: function(x, y) {
  var t1, flagged, hidden, t3, t2, failed, t4, reveals, c;
  t1 = this._states;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._doChord$2$bailout(1, x, y, t1);
  t1.get$2(x, y);
  flagged = $.List_List(null);
  hidden = $.List_List(null);
  t3 = this.field;
  if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
    return this._doChord$2$bailout(2, x, y, flagged, t3, hidden, t1);
  t3.getAdjacentCount$2(x, y);
  for (t2 = t3.getAdjacentIndices$2(x, y), t2 = $.getInterceptor(t2).iterator$0(t2), failed = false; t2.get$hasNext() === true;) {
    t4 = t2.next$0();
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t1.length)
      throw $.ioore(t4);
    if ($.eqB(t1[t4], $.CTC20)) {
      $.getInterceptor(hidden).add$1(hidden, t4);
      if (t4 >= t3.length)
        throw $.ioore(t4);
      if (t3[t4] === true)
        failed = true;
    } else {
      if (t4 >= t1.length)
        throw $.ioore(t4);
      if ($.eqB(t1[t4], $.CTC22))
        $.getInterceptor(flagged).add$1(flagged, t4);
    }
  }
  reveals = [];
  if (failed)
    this._setLost$0();
  else
    for (t1 = $.getInterceptor(hidden).iterator$0(hidden); t1.get$hasNext() === true;) {
      c = t3.getCoordinate$1(t1.next$0());
      if (this.canReveal$2(c.get$item1(), c.get$item2()) === true)
        $.getInterceptor(reveals).addAll$1(reveals, this.reveal$2(c.get$item1(), c.get$item2()));
    }
  return reveals;
},
 _doChord$2$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      t1 = env2;
      y = env1;
      x = env0;
      break;
    case 2:
      t1 = env5;
      hidden = env4;
      t3 = env3;
      flagged = env2;
      y = env1;
      x = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._states;
    case 1:
      state0 = 0;
      t1.get$2(x, y);
      flagged = $.List_List(null);
      hidden = $.List_List(null);
      t3 = this.field;
    case 2:
      var t1, y, x, flagged, hidden, t3, t2, failed, t4, reveals, c;
      state0 = 0;
      t3.getAdjacentCount$2(x, y);
      for (t2 = t3.getAdjacentIndices$2(x, y), t2 = $.getInterceptor(t2).iterator$0(t2), failed = false; t2.get$hasNext() === true;) {
        t4 = t2.next$0();
        if ($.eqB($.index(t1, t4), $.CTC20)) {
          $.getInterceptor(hidden).add$1(hidden, t4);
          if ($.index(t3, t4) === true)
            failed = true;
        } else if ($.eqB($.index(t1, t4), $.CTC22))
          $.getInterceptor(flagged).add$1(flagged, t4);
      }
      reveals = [];
      if (failed)
        this._setLost$0();
      else
        for (t1 = $.getInterceptor(hidden).iterator$0(hidden); t1.get$hasNext() === true;) {
          c = t3.getCoordinate$1(t1.next$0());
          if (this.canReveal$2(c.get$item1(), c.get$item2()) === true)
            $.getInterceptor(reveals).addAll$1(reveals, this.reveal$2(c.get$item1(), c.get$item2()));
        }
      return reveals;
  }
},
 _doReveal$2: function(x, y) {
  var t1, t3, reveals, t2, t4, c;
  t1 = this._states;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._doReveal$2$bailout(1, x, y, t1);
  t1.set$3(x, y, $.CTC21);
  t3 = this._revealsLeft;
  if (typeof t3 !== 'number')
    return this._doReveal$2$bailout(2, x, y, t1, t3);
  this._revealsLeft = t3 - 1;
  reveals = [$.Coordinate$(x, y)];
  t2 = this._revealsLeft;
  if (typeof t2 !== 'number')
    return this._doReveal$2$bailout(3, x, y, t2, t1, reveals);
  if (t2 === 0)
    this._setWon$0();
  else {
    t2 = this.field;
    t3 = t2.getAdjacentCount$2(x, y);
    if (typeof t3 !== 'number')
      return this._doReveal$2$bailout(4, x, t2, y, t3, t1, reveals);
    if (t3 === 0)
      for (t3 = t2.getAdjacentIndices$2(x, y), t3 = $.getInterceptor(t3).iterator$0(t3); t3.get$hasNext() === true;) {
        t4 = t3.next$0();
        if (t4 !== (t4 | 0))
          throw $.iae(t4);
        if (t4 < 0 || t4 >= t1.length)
          throw $.ioore(t4);
        if ($.eqB(t1[t4], $.CTC20)) {
          c = t2.getCoordinate$1(t4);
          $.getInterceptor(reveals).addAll$1(reveals, this._doReveal$2(c.get$item1(), c.get$item2()));
        }
      }
  }
  return reveals;
},
 _doReveal$2$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      t1 = env2;
      y = env1;
      x = env0;
      break;
    case 2:
      t3 = env3;
      t1 = env2;
      y = env1;
      x = env0;
      break;
    case 3:
      reveals = env4;
      t1 = env3;
      t2 = env2;
      y = env1;
      x = env0;
      break;
    case 4:
      reveals = env5;
      t1 = env4;
      t3 = env3;
      y = env2;
      t2 = env1;
      x = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._states;
    case 1:
      state0 = 0;
      t1.set$3(x, y, $.CTC21);
      t3 = this._revealsLeft;
    case 2:
      state0 = 0;
      this._revealsLeft = $.sub(t3, 1);
      reveals = [$.Coordinate$(x, y)];
      t2 = this._revealsLeft;
    case 3:
      state0 = 0;
    case 4:
      var t1, y, x, t3, reveals, t2, t4, c;
      if (state0 === 0 && $.eqB(t2, 0))
        this._setWon$0();
      else
        switch (state0) {
          case 0:
            t2 = this.field;
            t3 = t2.getAdjacentCount$2(x, y);
          case 4:
            state0 = 0;
            if ($.eqB(t3, 0))
              for (t3 = t2.getAdjacentIndices$2(x, y), t3 = $.getInterceptor(t3).iterator$0(t3); t3.get$hasNext() === true;) {
                t4 = t3.next$0();
                if ($.eqB($.index(t1, t4), $.CTC20)) {
                  c = t2.getCoordinate$1(t4);
                  $.getInterceptor(reveals).addAll$1(reveals, this._doReveal$2(c.get$item1(), c.get$item2()));
                }
              }
        }
      return reveals;
  }
},
 _setWon$0: function() {
  var t1, t3, t5, t6, i;
  t1 = this._states;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this._setWon$0$bailout(1, t1);
  t3 = this.field;
  if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
    return this._setWon$0$bailout(2, t3, t1);
  t5 = t1.length;
  t6 = t3.length;
  i = 0;
  for (; i < t6; ++i)
    if (t3[i] === true) {
      if (i >= t5)
        throw $.ioore(i);
      t1[i] = $.CTC29;
    }
  this._setState$1($.CTC23);
},
 _setWon$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._states;
    case 1:
      state0 = 0;
      t3 = this.field;
    case 2:
      var t1, t3, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, $.getInterceptor(t3).get$length(t3)); ++i)
        if ($.index(t3, i) === true)
          $.indexSet(t1, i, $.CTC29);
      this._setState$1($.CTC23);
  }
},
 _setLost$0: function() {
  var t1, t3, t5, t6, i;
  t1 = this._states;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this._setLost$0$bailout(1, t1);
  t3 = this.field;
  if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
    return this._setLost$0$bailout(2, t3, t1);
  t5 = t1.length;
  t6 = t3.length;
  i = 0;
  for (; i < t6; ++i)
    if (t3[i] === true) {
      if (i >= t5)
        throw $.ioore(i);
      t1[i] = $.CTC27;
    }
  this._setState$1($.CTC24);
},
 _setLost$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._states;
    case 1:
      state0 = 0;
      t3 = this.field;
    case 2:
      var t1, t3, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, $.getInterceptor(t3).get$length(t3)); ++i)
        if ($.index(t3, i) === true)
          $.indexSet(t1, i, $.CTC27);
      this._setState$1($.CTC24);
  }
},
 _setState$1: function(value) {
  if (!$.eqB(this._state, value)) {
    this._state = value;
    if ($.eqB(this._state, $.CTC26))
      this._startTime = $.Date_Date$now();
    else if (this.get$gameEnded() === true)
      this._endTime = $.Date_Date$now();
    this._gameStateEvent.fireEvent$1(this._state);
  }
},
 _ensureStarted$0: function() {
  if ($.eqB(this.get$state(), $.CTC19))
    this._setState$1($.CTC26);
},
 _getAdjacentCount$3: function(x, y, state) {
  var t1, t2, val, t3;
  t1 = this.field.getAdjacentIndices$2(x, y);
  t1 = $.getInterceptor(t1).iterator$0(t1);
  t2 = this._states;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this._getAdjacentCount$3$bailout(1, state, t1, t2);
  val = 0;
  for (; t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    if ($.eqB(t2[t3], state))
      ++val;
  }
  return val;
},
 _getAdjacentCount$3$bailout: function(state0, state, t1, t2) {
  var val = 0;
  for (; t1.get$hasNext() === true;)
    if ($.eqB($.index(t2, t1.next$0()), state))
      ++val;
  return val;
},
 Game$1: function(field) {
  this._bombsLeft = field.get$bombCount();
  this._revealsLeft = $.sub($.getInterceptor(field).get$length(field), field.get$bombCount());
}
};

$$.GameState = {"": ["name>"],
 "super": "Object",
 toString$0: function() {
  return "GameState: " + $.S(this.name);
}
};

$$.SquareState = {"": ["name>"],
 "super": "Object",
 toString$0: function() {
  return "SquareState: " + $.S(this.name);
}
};

$$.Maps__emitMap_anon = {"": ["box_0", "visiting_3", "result_2"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_1 !== true) {
    t2 = this.result_2;
    $.getInterceptor(t2).add$1(t2, ", ");
  }
  t1.first_1 = false;
  t1 = this.result_2;
  t2 = this.visiting_3;
  $.Collections__emitObject(k, t1, t2);
  $.getInterceptor(t1).add$1(t1, ": ");
  $.Collections__emitObject(v, t1, t2);
}
};

$$.DoubleLinkedQueue_length_anon = {"": ["box_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$._LinkedHashMapImpl_forEach_anon = {"": ["f_0"],
 "super": "Closure",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.NoSuchMethodError_toString_anon = {"": ["box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2;
  t1 = this.box_0;
  if ($.gtB(t1.i_2, 0)) {
    t2 = t1.sb_1;
    $.getInterceptor(t2).add$1(t2, ", ");
  }
  t2 = t1.sb_1;
  $.getInterceptor(t2).add$1(t2, key);
  t2 = t1.sb_1;
  $.getInterceptor(t2).add$1(t2, ": ");
  t2 = t1.sb_1;
  $.getInterceptor(t2).add$1(t2, $.Error_safeToString(value));
  t1.i_2 = $.add(t1.i_2, 1);
}
};

$$.ResourceLoader__getByUrl_anon = {"": ["url_0"],
 "super": "Closure",
 call$1: function(e) {
  return $.eq(e.get$url(), this.url_0);
}
};

$$._runppw_anon = {
 "super": "Closure",
 call$1: function(args) {
  return args.preventDefault$0();
}
};

$$._runppw_anon0 = {
 "super": "Closure",
 call$1: function(args) {
  return $._processUrlHash(true);
}
};

$$._runppw_anon1 = {
 "super": "Closure",
 call$1: function(args) {
  return $._toggleAbout(true);
}
};

$$.getTextures_anon = {"": ["transparentElement_1", "frames_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var parsed = $.TextureInput_TextureInput$fromHash(key, value, this.transparentElement_1);
  $.indexSet(this.frames_0, key, parsed);
}
};

$$.getTextures_anon0 = {"": ["opaqueElement_3", "frames_2"],
 "super": "Closure",
 call$2: function(key, value) {
  var parsed = $.TextureInput_TextureInput$fromHash(key, value, this.opaqueElement_3);
  $.indexSet(this.frames_2, key, parsed);
}
};

$$.getTextures_anon1 = {"": ["transparentStaticElement_5", "frames_4"],
 "super": "Closure",
 call$2: function(key, value) {
  var parsed = $.TextureInput_TextureInput$fromHash(key, value, this.transparentStaticElement_5);
  $.indexSet(this.frames_4, key, parsed);
}
};

$$.invokeClosure_anon = {"": ["closure_0"],
 "super": "Closure",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"": ["closure_2", "arg1_1"],
 "super": "Closure",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"": ["arg2_5", "closure_4", "arg1_3"],
 "super": "Closure",
 call$0: function() {
  return this.closure_4.call$2(this.arg1_3, this.arg2_5);
}
};

$$.ClickManager_ClickManager_anon = {
 "super": "Closure",
 call$1: function(s) {
  return $.ClickManager$_internal(s);
}
};

$$.EventHandle_fireEvent_anon = {"": ["args_0"],
 "super": "Closure",
 call$2: function(id, handler) {
  handler.call$1(this.args_0);
}
};

$$.ClickManager__mouseDown_anon = {
 "super": "Closure",
 call$1: function(e) {
  return $.get$ClickManager__isClickableProperty().get$1(e);
}
};

$$.Mouse_markMouseOver_anon = {
 "super": "Closure",
 call$1: function(e) {
  $.get$Mouse_isMouseOverProperty().clear$1(e);
  $.get$Mouse_isMouseDirectlyOverProperty().clear$1(e);
}
};

$$.Mouse_markMouseOver_anon0 = {
 "super": "Closure",
 call$1: function(e) {
  $.get$Mouse_isMouseOverProperty().set$2(e, true);
}
};

$$.AffineTransform_toString_anon = {
 "super": "Closure",
 call$1: function(n) {
  return $.getInterceptor(n).toString$0(n);
}
};

$$.anon = {
 "super": "Closure",
 call$1: function(url) {
  return $._ResourceEntry$(url);
}
};

$$.ListBase_iterator_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.this_0, i);
}
};

$$.Enumerable_single_anon = {
 "super": "Closure",
 call$1: function(e) {
  return true;
}
};

$$.Enumerable_firstOrDefault_anon = {
 "super": "Closure",
 call$1: function(e) {
  return true;
}
};

$$.Enumerable_map_anon = {"": ["f_0"],
 "super": "Closure",
 call$1: function(s) {
  return $._SelectIterator$(s, this.f_0);
}
};

$$.Enumerable_isEmpty_anon = {
 "super": "Closure",
 call$1: function(e) {
  return true;
}
};

$$.ClickManager__mouseUp_anon = {
 "super": "Closure",
 call$1: function(e) {
  return $.get$ClickManager__isClickableProperty().get$1(e);
}
};

$$.ClickManager__mouseMove_anon = {"": ["args_0"],
 "super": "Closure",
 call$1: function(e) {
  return $.get$ClickManager__mouseMoveEvent().fireEvent$2(e, this.args_0);
}
};

$$.anon0 = {"": ["this_0"],
 "super": "Closure",
 call$1: function(args) {
  var t1, t2;
  t1 = this.this_0;
  $.GameManager.prototype.newGame$0.call(t1);
  t2 = $.GameManager.prototype.get$game.call(t1);
  t1.get$_gameElement().set$game(t2);
  t1._requestFrame$0();
  return;
}
};

$$.anon1 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_1._updateCanvasSize$0();
}
};

$$.ParentElement_drawOverride_anon = {"": ["ctx_0"],
 "super": "Closure",
 call$1: function(e) {
  return e.drawCore$1(this.ctx_0);
}
};

$$.ParentElement_update_anon = {
 "super": "Closure",
 call$1: function(e) {
  return e.update$0();
}
};

$$.AttachableObject__addHandler_anon = {
 "super": "Closure",
 call$0: function() {
  return $.EventHandle$();
}
};

$$.trackAnalyticsEvent_anon = {"": ["category_3", "value_2", "label_1", "action_0"],
 "super": "Closure",
 call$0: function() {
  $.context().pushAnalytics$1($.array(["_trackEvent", this.category_3, this.action_0, this.label_1, this.value_2]));
}
};

$$.anon2 = {"": ["this_0"],
 "super": "Closure",
 call$1: function(msg, exception) {
  var receiver, method, t1, args, result, e;
  try {
    receiver = $.index(this.this_0.get$_registry(), $.index(msg, 0));
    method = $.index(msg, 1);
    t1 = $.index(msg, 2);
    args = $.getInterceptor(t1).map$1(t1, $._deserialize);
    if ($.eqB(method, "#call")) {
      result = null;
      t1 = args;
      switch ($.getInterceptor(t1).get$length(t1)) {
        case 0:
          result = $._serialize(receiver.call$0());
          break;
        case 1:
          result = $._serialize(receiver.call$1($.index(args, 0)));
          break;
        case 2:
          result = $._serialize(receiver.call$2($.index(args, 0), $.index(args, 1)));
          break;
        case 3:
          result = $._serialize(receiver.call$3($.index(args, 0), $.index(args, 1), $.index(args, 2)));
          break;
        case 4:
          result = $._serialize(receiver.call$4($.index(args, 0), $.index(args, 1), $.index(args, 2), $.index(args, 3)));
          break;
        default:
          throw $.$$throw("Unsupported number of arguments.");
      }
      t1 = ["return", result];
      return t1;
    } else
      throw $.$$throw("Invocation unsupported on non-function Dart proxies");
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    return ["throws", $.S(e)];
  }

}
};

$$._HashMapImpl_keys_anon = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.i_1;
  t2.i_1 = $.add(t3, 1);
  $.indexSet(t1, t3, key);
}
};

$$._HashSetImpl_map_anon = {"": ["f_1", "result_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.result_0;
  $.getInterceptor(t1).add$1(t1, this.f_1.call$1(key));
}
};

$$._HashSetImpl_forEach_anon = {"": ["f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.f_0.call$1(key);
}
};

$$.ReceivePortSync_receive_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  var data, replyTo, t1, message, result;
  data = $.JSON_parse(e.get$detail());
  replyTo = $.index(data, 0);
  t1 = $.index(data, 1);
  message = $._JsDeserializer$().deserialize$1(t1);
  result = this.this_0._callback$1(message);
  $._dispatchEvent(replyTo, $._JsSerializer$().traverse$1(result));
}
};

$$.Storage_values_anon = {"": ["values_0"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1 = this.values_0;
  return $.getInterceptor(t1).add$1(t1, v);
}
};

$$._HashMapImpl_values_anon = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.i_10;
  t2.i_10 = $.add(t3, 1);
  $.indexSet(t1, t3, value);
}
};

$$._LinkedHashMapImpl_values_anon = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.index_1;
  t2.index_1 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$value());
}
};

$$.Storage_keys_anon = {"": ["keys_0"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1 = this.keys_0;
  return $.getInterceptor(t1).add$1(t1, k);
}
};

$$._LinkedHashMapImpl_keys_anon = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.index_10;
  t2.index_10 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$key());
}
};

$$._RemoteSendPortSync__call_anon = {"": ["box_0"],
 "super": "Closure",
 call$1: function(e) {
  var result = $.JSON_parse(e.get$detail());
  this.box_0.result_1 = result;
}
};

$$._JsonStringifier_stringifyJsonValue_anon = {"": ["this_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.box_0;
  t2 = t1.first_10 !== true;
  t3 = this.this_2;
  if (t2) {
    t2 = t3.get$sb();
    $.getInterceptor(t2).add$1(t2, ",\"");
  } else {
    t2 = t3.get$sb();
    $.getInterceptor(t2).add$1(t2, "\"");
  }
  t2 = this.this_2;
  $._JsonStringifier_escape(t2.get$sb(), key);
  t3 = t2.get$sb();
  $.getInterceptor(t3).add$1(t3, "\":");
  t2.stringifyValue$1(value);
  t1.first_10 = false;
}
};

$$._deserialize_deserializeFunction = {
 "super": "Closure",
 call$1: function(message) {
  var id, port;
  id = $.index(message, 1);
  port = $.index(message, 2);
  if ($.eqB(port, $.get$_proxiedObjectTable().get$sendPort()))
    return $.get$_proxiedObjectTable().get$1(id);
  else
    return $._FunctionProxy$_internal(port, id)._call;
}
};

$$._deserialize_deserializeObject = {
 "super": "Closure",
 call$1: function(message) {
  var id, port;
  id = $.index(message, 1);
  port = $.index(message, 2);
  if ($.eqB(port, $.get$_proxiedObjectTable().get$sendPort()))
    return $.get$_proxiedObjectTable().get$1(id);
  else
    return $.Proxy$_internal(port, id);
}
};

$$.ConstantMap_values_anon = {"": ["this_1", "result_0"],
 "super": "Closure",
 call$1: function(key) {
  var t1 = this.result_0;
  return $.getInterceptor(t1).add$1(t1, $.index(this.this_1, key));
}
};

$$.ConstantMap_forEach_anon = {"": ["f_1", "this_0"],
 "super": "Closure",
 call$1: function(key) {
  return this.f_1.call$2(key, $.index(this.this_0, key));
}
};

$$.FilteredElementList__filtered_anon = {
 "super": "Closure",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$.Enumerable_filter_anon = {"": ["f_0"],
 "super": "Closure",
 call$1: function(s) {
  return $._WhereIterator$(s, this.f_0);
}
};

$$._HashSetImpl_filter_anon = {"": ["f_1", "result_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1;
  if (this.f_1.call$1(key) === true) {
    t1 = this.result_0;
    $.getInterceptor(t1).add$1(t1, key);
  }
}
};

$$._ChildrenElementList_filter_anon = {"": ["f_1", "output_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1;
  if (this.f_1.call$1(element) === true) {
    t1 = this.output_0;
    $.getInterceptor(t1).add$1(t1, element);
  }
}
};

$$.FilteredElementList_removeRange_anon = {
 "super": "Closure",
 call$1: function(el) {
  return el.remove$0();
}
};

$$.anon3 = {"": ["id_1", "port_0"],
 "super": "Closure",
 call$4: function(arg0, arg1, arg2, arg3) {
  var t1, t2, t3, t4, args, message, result;
  t1 = $ === arg0;
  if (t1)
    arg0 = null;
  t1 = !t1;
  t2 = $ === arg1;
  if (t2)
    arg1 = null;
  t2 = !t2;
  t3 = $ === arg2;
  if (t3)
    arg2 = null;
  t3 = !t3;
  t4 = $ === arg3;
  if (t4)
    arg3 = null;
  if (!t4)
    args = [arg0, arg1, arg2, arg3];
  else if (t3)
    args = [arg0, arg1, arg2];
  else if (t2)
    args = [arg0, arg1];
  else
    args = t1 ? [arg0] : [];
  message = [this.id_1, "", "apply", $.getInterceptor(args).map$1(args, $._serialize)];
  result = this.port_0.callSync$1(message);
  if ($.eqB($.index(result, 0), "throws"))
    throw $.$$throw($.index(result, 1));
  return $._deserialize($.index(result, 1));
},
 call$0: function() {
  return this.call$4($,$,$,$)
},
 call$1: function(arg0) {
  return this.call$4(arg0,$,$,$)
},
 call$2: function(arg0,arg1) {
  return this.call$4(arg0,arg1,$,$)
},
 call$3: function(arg0,arg1,arg2) {
  return this.call$4(arg0,arg1,arg2,$)
}
};

$$._initialize_anon = {
 "super": "Closure",
 call$1: function(_) {
  return $._enterScope();
}
};

$$._initialize_anon0 = {
 "super": "Closure",
 call$1: function(args) {
  return $._exitScope($.index(args, 0));
}
};

$$._HashSetImpl_addAll_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(value) {
  $.indexSet(this.this_0.get$_backingMap(), value, value);
}
};

$$.Proxy__serializeDataTree_anon = {
 "super": "Closure",
 call$1: function(e) {
  return $.Proxy__serializeDataTree(e);
}
};

$$.Duration_toString_threeDigits = {
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.gtB(n, 10))
    return "0" + $.S(n);
  return "00" + $.S(n);
}
};

$$.Duration_toString_twoDigits = {
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return "0" + $.S(n);
}
};

$$._DateImpl_toString_fourDigits = {
 "super": "Closure",
 call$1: function(n) {
  var absN, sign;
  absN = $.getInterceptor(n).abs$0(n);
  sign = $.ltB(n, 0) ? "-" : "";
  if ($.geB(absN, 1000))
    return $.S(n);
  if ($.geB(absN, 100))
    return sign + "0" + $.S(absN);
  if ($.geB(absN, 10))
    return sign + "00" + $.S(absN);
  return sign + "000" + $.S(absN);
}
};

$$._DateImpl_toString_threeDigits = {
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.geB(n, 10))
    return "0" + $.S(n);
  return "00" + $.S(n);
}
};

$$._DateImpl_toString_twoDigits = {
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return "0" + $.S(n);
}
};

$$.anon5 = {
 "super": "Closure",
 call$1: function(args) {
  return $.get$GameAudio__audioEventHandle().fireEvent$1("click");
}
};

$$.anon6 = {
 "super": "Closure",
 call$1: function(args) {
  return $.get$_titleClickedEventHandle().fireEvent$1($.CTC12);
}
};

$$.anon4 = {"": ["this_0"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_0.get$_clickedEvent().fireEvent$1($.CTC12);
}
};

$$.GameElement__click_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(i) {
  var t = this.this_0.get$game().get$field().getCoordinate$1(i);
  return $.Coordinate$(t.get$item1(), t.get$item2());
}
};

$$.GameElement__click_anon0 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(t) {
  return $.eq(this.this_1.get$game().getSquareState$2(t.get$x(), t.get$y()), $.CTC20);
}
};

$$.GameElement__startPopAnimation_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(i) {
  var t1, t, c;
  t1 = this.this_0;
  t = t1.get$game().get$field().getCoordinate$1(i);
  c = $.Coordinate$(t.get$item1(), t.get$item2());
  return $.Tuple$(c, t1.get$game().getSquareState$2(c.x, c.y));
}
};

$$.GameElement__startPopAnimation_anon0 = {
 "super": "Closure",
 call$1: function(t2) {
  return $.eqB(t2.get$item2(), $.CTC27) || $.eqB(t2.get$item2(), $.CTC20);
}
};

$$.GameElement__startPopAnimation_anon1 = {
 "super": "Closure",
 call$1: function(t2) {
  return t2.get$item1();
}
};

$$.GameElement__startPopAnimation_anon2 = {"": ["start_1"],
 "super": "Closure",
 call$1: function(c) {
  var t1, t2, initialOffset, squareOffset, t3, delay;
  t1 = c.get$x();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  t1 = 80 * t1;
  t2 = c.get$y();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  initialOffset = $.Vector$(t1, 80 * t2);
  squareOffset = $.CTC28.operator$add$1(initialOffset);
  t1 = $.sub(c, this.start_1);
  t3 = $.mul($.getInterceptor(t1).get$length(t1), 4);
  t3 = $.getInterceptor(t3).toInt$0(t3);
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  delay = 12 + t3;
  t3 = $.rnd().nextInt$1(10);
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  return [c, initialOffset, squareOffset, delay + t3];
}
};

$$.GameElement__startPopAnimation_anon3 = {
 "super": "Closure",
 call$2: function(a, b) {
  var da, db;
  da = $.index(a, 3);
  db = $.index(b, 3);
  return $.getInterceptor(da).compareTo$1(da, db);
}
};

$$.GameElement__startPopAnimation_anon4 = {
 "super": "Closure",
 call$1: function(args) {
  return $.get$GameAudio__audioEventHandle().fireEvent$1("Pop");
}
};

$$.GameElement__startPopAnimation_anon5 = {
 "super": "Closure",
 call$1: function(args) {
  return $.get$GameAudio__audioEventHandle().fireEvent$1("Bomb");
}
};

$$._convertNativeToDart_AcceptStructuredClone_findSlot = {"": ["copies_1", "values_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1, length$, i, t2;
  t1 = this.values_0;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout0(1, value, t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.getInterceptor(t1).add$1(t1, value);
  t1 = this.copies_1;
  $.getInterceptor(t1).add$1(t1, null);
  return length$;
},
 call$1$bailout0: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      value = env0;
      break;
    case 2:
      length$ = env2;
      t1 = env1;
      value = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.values_0;
    case 1:
      state0 = 0;
      length$ = $.getInterceptor(t1).get$length(t1);
    case 2:
      var t1, value, length$, i, t2;
      state0 = 0;
      for (i = 0; $.ltB(i, length$); ++i) {
        t2 = $.index(t1, i);
        if (t2 == null ? value == null : t2 === value)
          return i;
      }
      $.getInterceptor(t1).add$1(t1, value);
      t1 = this.copies_1;
      $.getInterceptor(t1).add$1(t1, null);
      return length$;
  }
}
};

$$._convertNativeToDart_AcceptStructuredClone_readSlot = {"": ["copies_2"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_2, i);
}
};

$$._convertNativeToDart_AcceptStructuredClone_writeSlot = {"": ["copies_3"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$._convertNativeToDart_AcceptStructuredClone_walk = {"": ["readSlot_7", "findSlot_6", "mustCopy_5", "writeSlot_4"],
 "super": "Closure",
 call$1: function(e) {
  var slot, copy, t1, t2, t3, length$, i;
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout(1, e);
  if (e instanceof Date)
    throw $.$$throw($.UnimplementedError$("structured clone of Date"));
  if (e instanceof RegExp)
    throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
  if (Object.getPrototypeOf(e) === Object.prototype) {
    slot = this.findSlot_6.call$1(e);
    copy = this.readSlot_7.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(2, e, copy, slot);
    this.writeSlot_4.call$2(slot, copy);
    for (t1 = Object.keys(e), t1 = $.getInterceptor(t1).iterator$0(t1); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_6.call$1(e);
    copy = this.readSlot_7.call$1(slot);
    if (!(copy == null))
      return copy;
    length$ = e.length;
    if (this.mustCopy_5 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(4, e, length$, copy, slot);
    this.writeSlot_4.call$2(slot, copy);
    for (i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      slot = env2;
      copy = env1;
      e = env0;
      break;
    case 3:
      slot = env2;
      length$ = env1;
      e = env0;
      break;
    case 4:
      slot = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.UnimplementedError$("structured clone of Date"));
      if (e instanceof RegExp)
        throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
    case 2:
      if (state0 === 2 || state0 === 0 && Object.getPrototypeOf(e) === Object.prototype)
        switch (state0) {
          case 0:
            slot = this.findSlot_6.call$1(e);
            copy = this.readSlot_7.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state0 = 0;
            this.writeSlot_4.call$2(slot, copy);
            for (t1 = Object.keys(e), t1 = $.getInterceptor(t1).iterator$0(t1); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    default:
      var e, slot, copy, t1, t2, length$, i;
      if (state0 === 4 || state0 === 3 || state0 === 0 && e instanceof Array)
        switch (state0) {
          case 0:
            slot = this.findSlot_6.call$1(e);
            copy = this.readSlot_7.call$1(slot);
            if (!(copy == null))
              return copy;
            length$ = $.getInterceptor(e).get$length(e);
          case 3:
            state0 = 0;
            copy = this.mustCopy_5 === true ? new Array(length$) : e;
          case 4:
            state0 = 0;
            this.writeSlot_4.call$2(slot, copy);
            for (i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$.ResourceLoader_totalBytes_anon = {
 "super": "Closure",
 call$1: function(e) {
  if (e.get$totalBytes() == null)
    return 2000;
  else
    return e.get$totalBytes();
}
};

$$.Enumerable_selectNumbers_anon = {"": ["f_0"],
 "super": "Closure",
 call$1: function(s) {
  return $._SelectIterator$(s, this.f_0);
}
};

$$.ResourceLoader_completedBytes_anon = {
 "super": "Closure",
 call$1: function(e) {
  return e.get$completedBytes();
}
};

$$.ResourceLoader__httpLoad_anon = {"": ["this_1", "e_0"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_1._onError$2(this.e_0, args);
}
};

$$.ResourceLoader__httpLoad_anon0 = {"": ["this_3", "e_2"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_3._onError$2(this.e_2, args);
}
};

$$.ResourceLoader__httpLoad_anon1 = {"": ["this_5", "e_4"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_5._onLoadEnd$2(this.e_4, args);
}
};

$$.ResourceLoader__httpLoad_anon2 = {"": ["this_7", "e_6"],
 "super": "Closure",
 call$1: function(args) {
  return this.this_7._onProgress$2(this.e_6, args);
}
};

$$.ImageLoader__doLoad_anon = {"": ["this_2", "img_1", "blobUrl_0"],
 "super": "Closure",
 call$1: function(args) {
  this.this_2._loadResourceSucceed$2(this.blobUrl_0, this.img_1);
}
};

$$.ResourceLoader__loadResourceSucceed_anon = {
 "super": "Closure",
 call$1: function(e) {
  return e.get$completed();
}
};

$$.ResourceLoader__getByBlobUrl_anon = {"": ["blobUrl_0"],
 "super": "Closure",
 call$1: function(e) {
  return e.matchesBlobUrl$1(this.blobUrl_0);
}
};

$$.AudioLoader__doLoad_anon = {"": ["arrayBufferRequest_2", "blobUrl_1", "this_0"],
 "super": "Closure",
 call$1: function(args) {
  var t1, t2, t3, t4;
  t1 = this.this_0;
  t2 = t1.get$context();
  t3 = this.arrayBufferRequest_2.get$response();
  t4 = this.blobUrl_1;
  t2.decodeAudioData$3(t3, new $.AudioLoader__doLoad__anon(t4, t1), new $.AudioLoader__doLoad__anon0(t4, t1));
}
};

$$.AudioLoader__doLoad__anon = {"": ["blobUrl_4", "this_3"],
 "super": "Closure",
 call$1: function(buffer) {
  return this.this_3._saveBuffer$2(this.blobUrl_4, buffer);
}
};

$$.AudioLoader__doLoad__anon0 = {"": ["blobUrl_6", "this_5"],
 "super": "Closure",
 call$1: function(buffer) {
  return this.this_5._onAudioLoadError$3(this.blobUrl_6, "decode error", buffer);
}
};

$$.AudioLoader__doLoad_anon0 = {"": ["blobUrl_8", "this_7"],
 "super": "Closure",
 call$1: function(args) {
  this.this_7._onAudioLoadError$3(this.blobUrl_8, "BufferLoader: XHR error", args);
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"": ["values_3", "copies_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1, length$, i, t2;
  t1 = this.values_3;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout2(1, value, t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.getInterceptor(t1).add$1(t1, value);
  t1 = this.copies_2;
  $.getInterceptor(t1).add$1(t1, null);
  return length$;
},
 call$1$bailout2: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      value = env0;
      break;
    case 2:
      length$ = env2;
      t1 = env1;
      value = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.values_3;
    case 1:
      state0 = 0;
      length$ = $.getInterceptor(t1).get$length(t1);
    case 2:
      var t1, value, length$, i, t2;
      state0 = 0;
      for (i = 0; $.ltB(i, length$); ++i) {
        t2 = $.index(t1, i);
        if (t2 == null ? value == null : t2 === value)
          return i;
      }
      $.getInterceptor(t1).add$1(t1, value);
      t1 = this.copies_2;
      $.getInterceptor(t1).add$1(t1, null);
      return length$;
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"": ["copies_4"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_4, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"": ["copies_5"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_5, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {
 "super": "Closure",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"": ["writeSlot_8", "readSlot_7", "findSlot_6"],
 "super": "Closure",
 call$1: function(e) {
  var t1, slot, t2, length$, copy, t3, i, element, elementCopy, copy0, j, t4;
  t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.UnimplementedError$("structured clone of Date"));
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
  if (typeof e === 'object' && e !== null && e.is$File())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    return e;
  if (typeof e === 'object' && e !== null && e.is$_FileList())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    slot = this.findSlot_6.call$1(e);
    t1.copy_1 = this.readSlot_7.call$1(slot);
    t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_8.call$2(slot, t1.copy_1);
    $.getInterceptor(e).forEach$1(e, new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout1(1, e);
    length$ = e.length;
    slot = this.findSlot_6.call$1(e);
    t2 = this.readSlot_7;
    copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_8.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    t3 = this.writeSlot_8;
    if (t1) {
      t3.call$2(slot, true);
      for (i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        element = e[i];
        elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy0 = t2.call$1(slot);
          if (true === copy0) {
            copy0 = new Array(length$);
            t3.call$2(slot, copy0);
          }
          if (typeof copy0 !== 'object' || copy0 === null || (copy0.constructor !== Array || !!copy0.immutable$list) && !copy0.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout1(3, e, t3, elementCopy, length$, copy0, slot, t2, copy, i);
          for (t1 = e.length, t2 = copy0.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy0[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy0[i] = elementCopy;
          ++i;
          copy = copy0;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout1(4, e, length$, copy, i);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.UnimplementedError$("structured clone of other type"));
},
 call$1$bailout1: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      length$ = env1;
      e = env0;
      break;
    case 3:
      i = env8;
      copy = env7;
      t3 = env6;
      slot = env5;
      copy0 = env4;
      length$ = env3;
      elementCopy = env2;
      t2 = env1;
      e = env0;
      break;
    case 4:
      i = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.UnimplementedError$("structured clone of Date"));
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
      if (typeof e === 'object' && e !== null && e.is$File())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        return e;
      if (typeof e === 'object' && e !== null && e.is$_FileList())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        slot = this.findSlot_6.call$1(e);
        t1.copy_1 = this.readSlot_7.call$1(slot);
        t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_8.call$2(slot, t1.copy_1);
        $.getInterceptor(e).forEach$1(e, new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
        return t1.copy_1;
      }
    default:
      var t1, slot, t2, e, length$, t3, copy, i, element, elementCopy, copy0, j;
      if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            length$ = $.getInterceptor(e).get$length(e);
          case 2:
            state0 = 0;
            slot = this.findSlot_6.call$1(e);
            t3 = this.readSlot_7;
            copy = t3.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_8.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            t2 = this.writeSlot_8;
          case 3:
            if (state0 === 3 || state0 === 0 && t1)
              switch (state0) {
                case 0:
                  t2.call$2(slot, true);
                  i = 0;
                case 3:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          element = $.index(e, i);
                          elementCopy = this.call$1(element);
                        case 3:
                          if (state0 === 3 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state0) {
                              case 0:
                                copy0 = t3.call$1(slot);
                                if (true === copy0) {
                                  copy0 = new Array(length$);
                                  t2.call$2(slot, copy0);
                                }
                              case 3:
                                state0 = 0;
                                for (j = 0; j < i; ++j)
                                  $.indexSet(copy0, j, $.index(e, j));
                                $.indexSet(copy0, i, elementCopy);
                                ++i;
                                copy = copy0;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t2.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t2.call$2(slot, copy);
              i = 0;
            }
          case 4:
            state0 = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.UnimplementedError$("structured clone of other type"));
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"": ["box_0", "walk_9"],
 "super": "Closure",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$.startRootIsolate_anon = {
 "super": "Closure",
 call$0: function() {
  $._TimerFactory__factory = $._timerFactory;
  return;
}
};

$$._BaseSendPort_call_anon = {"": ["completer_1", "port_0"],
 "super": "Closure",
 call$2: function(value, ignoreReplyTo) {
  var t1, t2;
  this.port_0.close$0();
  t1 = typeof value === 'object' && value !== null && !!value.is$Exception;
  t2 = this.completer_1;
  if (t1)
    t2.completeException$1(value);
  else
    t2.complete$1(value);
}
};

$$._WorkerSendPort_send_anon = {"": ["this_2", "replyTo_1", "message_0"],
 "super": "Closure",
 call$0: function() {
  var t1, t2, workerMessage, t3;
  t1 = this.this_2;
  t2 = this.replyTo_1;
  t1._checkReplyTo$1(t2);
  workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_0, "replyTo", t2]));
  t2 = $._globalState().get$isWorker() === true;
  t3 = $._globalState;
  if (t2)
    t3().get$mainManager().postMessage$1(workerMessage);
  else
    $.index(t3().get$managers(), t1.get$_workerId()).postMessage$1(workerMessage);
}
};

$$._waitForPendingPorts_anon = {"": ["callback_0"],
 "super": "Closure",
 call$1: function(_) {
  return this.callback_0.call$0();
}
};

$$.Futures_wait_anon = {"": ["pos_5", "box_0", "result_4", "completer_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1, t2, remaining;
  t1 = this.values_2;
  $.indexSet(t1, this.pos_5, value);
  t2 = this.box_0;
  remaining = $.sub(t2.remaining_1, 1);
  t2.remaining_1 = remaining;
  if ($.eqB(remaining, 0) && this.result_4.get$isComplete() !== true)
    this.completer_3.complete$1(t1);
}
};

$$.Futures_wait_anon0 = {"": ["future_8", "result_7", "completer_6"],
 "super": "Closure",
 call$1: function(exception) {
  if (this.result_7.get$isComplete() !== true)
    this.completer_6.completeException$2(exception, this.future_8.get$stackTrace());
  return true;
}
};

$$._PendingSendPortFinder_visitMap_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._liblib9$_dispatch$1(e);
}
};

$$._PendingSendPortFinder_visitList_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._liblib9$_dispatch$1(e);
}
};

$$._NativeJsSendPort_send_anon = {"": ["message_5", "replyTo_4", "this_3"],
 "super": "Closure",
 call$0: function() {
  var t1, t2, t3, isolate, shouldSerialize, msg;
  t1 = {};
  t2 = this.this_3;
  t3 = this.replyTo_4;
  t2._checkReplyTo$1(t3);
  isolate = $.index($._globalState().get$isolates(), t2.get$_liblib9$_isolateId());
  if (isolate == null)
    return;
  if (t2.get$_liblib9$_receivePort().get$_liblib9$_callback() == null)
    return;
  shouldSerialize = !($._globalState().get$currentContext() == null) && !$.eqB($._globalState().get$currentContext().get$id(), t2.get$_liblib9$_isolateId());
  msg = this.message_5;
  t1.msg_1 = msg;
  t1.reply_2 = t3;
  if (shouldSerialize) {
    t1.msg_1 = $._serializeMessage(t1.msg_1);
    t1.reply_2 = $._serializeMessage(t1.reply_2);
  }
  $._globalState().get$topEventLoop().enqueue$3(isolate, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
}
};

$$._NativeJsSendPort_send__anon = {"": ["box_0", "this_7", "shouldSerialize_6"],
 "super": "Closure",
 call$0: function() {
  var t1, t2;
  t1 = this.this_7;
  if (!(t1.get$_liblib9$_receivePort().get$_liblib9$_callback() == null)) {
    if (this.shouldSerialize_6 === true) {
      t2 = this.box_0;
      t2.msg_1 = $._deserializeMessage(t2.msg_1);
      t2.reply_2 = $._deserializeMessage(t2.reply_2);
    }
    t1 = t1.get$_liblib9$_receivePort();
    t2 = this.box_0;
    t1._liblib9$_callback$2(t2.msg_1, t2.reply_2);
  }
}
};

$$._Copier_visitMap_anon = {"": ["this_2", "box_0"],
 "super": "Closure",
 call$2: function(key, val) {
  var t1, t2;
  t1 = this.box_0.copy_10;
  t2 = this.this_2;
  $.indexSet(t1, t2._liblib9$_dispatch$1(key), t2._liblib9$_dispatch$1(val));
}
};

$$._EventLoop__runHelper_next = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  if (this.this_0.runIteration$0() !== true)
    return;
  $._window().setTimeout$2(this, 0);
}
};

$$.anon7 = {"": ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.anon8 = {"": ["callback_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_1.call$1(this.this_0);
}
};

$$.BoundClosure = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$$.BoundClosure0 = {'':
['self', 'target'],
'super': 'Closure',
call$0: function() { return this.self[this.target](); }
};
$$.BoundClosure1 = {'':
['self', 'target'],
'super': 'Closure',
call$2: function(p0, p1) { return this.self[this.target](p0, p1); }
};
$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else
      throw $.$$throw($.ArgumentError$(b));
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.tdiv = function(a, b) {
  var t1;
  if ($.checkNumbers(a, b)) {
    t1 = a / b;
    return $.getInterceptor(t1).truncate$0(t1);
  }
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return $.getInterceptor(a).operator$eq$1(a, b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return $.getInterceptor(a).operator$eq$1(a, b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.xor = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a ^ b) >>> 0;
  return a.operator$xor$1(b);
};

$.AudioContext_AudioContext = function() {
  return $._AudioContextFactoryProvider_createAudioContext();
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.getInterceptor(index).truncate$0(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.getInterceptor(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.getInterceptor(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, "indexed set");
    a[index] = value;
    return;
  }
  a.oprator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.getInterceptor(value).toString$0(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.operator$negate$0();
};

$.createInvocationMirror = function(name$, internalName, type, arguments$, argumentNames) {
  return $.JSInvocationMirror$(name$, internalName, type, arguments$, argumentNames);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.listInsertRange = function(receiver, start, length$, initialValue) {
  var receiverLength, t1, t2, t3, i;
  if (typeof receiver !== 'object' || receiver === null || (receiver.constructor !== Array || !!receiver.immutable$list) && !receiver.is$JavaScriptIndexingBehavior())
    return $.listInsertRange$bailout(1, receiver, start, length$, initialValue);
  if ($.eqB(length$, 0))
    return;
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + length$;
  $.getInterceptor(receiver).set$length(receiver, t1);
  t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (t3 = receiver.length, i = start; i < t2; ++i) {
      if (i < 0 || i >= t3)
        throw $.ioore(i);
      receiver[i] = initialValue;
    }
  $.getInterceptor(receiver).set$length(receiver, t1);
};

$.mod = function(a, b) {
  var result;
  if ($.checkNumbers(a, b)) {
    result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CTC0;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  var t1 = this.dartException;
  return $.getInterceptor(t1).toString$0(t1);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") !== -1 || $.eqB(type, "property_not_function") || $.eqB(type, "called_non_callable") || $.eqB(type, "non_object_property_call") || $.eqB(type, "non_object_property_load"))
      return $.NoSuchMethodError$(null, name$, [], $.makeLiteralMap([]), null);
    else if ($.eqB(type, "undefined_method"))
      return $.NoSuchMethodError$("", name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.getInterceptor(message).endsWith$1(message, "is null") === true || $.getInterceptor(message).endsWith$1(message, "is undefined") === true || $.getInterceptor(message).endsWith$1(message, "is null or undefined") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" is not a function") === -1)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(typeof message === 'string' ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.getInterceptor(keyValuePairs).iterator$0(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if ($.eqB(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if ($.eqB(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(arg2, closure, arg1));
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$.propertyTypeCastError = function(value, property) {
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), $.getInterceptor(property).substring$2(property, 3, $.getInterceptor(property).get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$._DateImpl$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $._DateImpl(millisecondsSinceEpoch, isUtc);
  t1._DateImpl$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  return name$;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "HTMLDDElement")
    return "HTMLElement";
  if (name$ === "HTMLDTElement")
    return "HTMLElement";
  if (name$ === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLPhraseElement")
    return "HTMLElement";
  if (name$ === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name$ === "MouseWheelEvent")
    return "WheelEvent";
  if (name$ === "Position")
    return "Geoposition";
  return name$;
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return "Null";
  constructor$ = object.constructor;
  if (typeof(constructor$) === "function") {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === "") && !(name$ === "Object") && !(name$ === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$._DateImpl$now = function() {
  var t1 = new $._DateImpl($.Primitives_dateNow(), false);
  t1._DateImpl$now$0();
  return t1;
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "GeoGeolocation")
    return "Geolocation";
  if (name$ === "MouseScrollEvent")
    return "WheelEvent";
  if (name$ === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name$ === "WorkerMessageEvent")
    return "MessageEvent";
  if (name$ === "XMLDocument")
    return "Document";
  return name$;
};

$._Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._Lists_getRange = function(a, start, length$, accumulator) {
  var end, i, t1;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  end = start + length$;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    t1 = $.getInterceptor(accumulator);
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    t1.add$1(accumulator, a[i]);
  }
  return accumulator;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, t2, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (multiLine === true) {
    t1 = sb;
    $.getInterceptor(t1).add$1(t1, "m");
  }
  if (ignoreCase === true) {
    t1 = sb;
    $.getInterceptor(t1).add$1(t1, "i");
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor(t1).add$1(t1, "g");
  }
  try {
    t1 = pattern;
    t2 = sb;
    t1 = new RegExp(t1, $.getInterceptor(t2).toString$0(t2));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, hasOwnProperty, method, i, entry, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnProperty = Object.prototype.hasOwnProperty;
  method = $.lookupDynamicClass(hasOwnProperty, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if (hasOwnProperty.call(entry.get$_liblib0$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnProperty, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnProperty, methods, $.getTypeNameOf($.CTC34));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!hasOwnProperty.call(proto, name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (count !== (count | 0))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined") {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, length$, patternLength, startIndex, position, endIndex;
  result = $.List_List(null);
  length$ = $.getInterceptor(haystack).get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = $.getInterceptor(haystack).indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    $.getInterceptor(result).add$1(result, $.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  var substr, t1;
  if (typeof other === 'string')
    return !$.eqB($.getInterceptor(receiver).indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.getInterceptor(receiver).substring$1(receiver, startIndex));
  else {
    substr = $.getInterceptor(receiver).substring$1(receiver, startIndex);
    t1 = $.getInterceptor(other).allMatches$1(other, substr);
    return $.getInterceptor(t1).iterator$0(t1).get$hasNext();
  }
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, i, t1;
  if (typeof from === 'string')
    if (from === "")
      if (receiver === "")
        return to;
      else {
        result = $.StringBuffer_StringBuffer("");
        length$ = receiver.length;
        $.getInterceptor(result).add$1(result, to);
        for (i = 0; i < length$; ++i) {
          t1 = $.getInterceptor(result);
          if (i >= receiver.length)
            throw $.ioore(i);
          t1.add$1(result, receiver[i]);
          $.getInterceptor(result).add$1(result, to);
        }
        return $.getInterceptor(result).toString$0(result);
      }
    else
      return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
  else if (typeof from === 'object' && from !== null && !!from.is$JSSyntaxRegExp)
    return $.stringReplaceJS(receiver, $.regExpMakeNative(from, true), to);
  else {
    $.checkNull(from);
    throw $.$$throw("String.replaceAll(Pattern) UNIMPLEMENTED");
  }
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = $.getInterceptor(tags).split$1(tags, "|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    $.getInterceptor(result).add$1(result, $.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.stringSplitUnchecked = function(receiver, pattern) {
  if (typeof pattern === 'string')
    return receiver.split(pattern);
  else if (typeof pattern === 'object' && pattern !== null && !!pattern.is$JSSyntaxRegExp)
    return receiver.split($.regExpGetNative(pattern));
  else
    throw $.$$throw("String.split(Pattern) UNIMPLEMENTED");
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.lookupDynamicClass = function(hasOwnProperty, methods, className) {
  return hasOwnProperty.call(methods, className) ? methods[className] : null;
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CTC34)[name$];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.TextureInput$ = function(name$, frame, rotated, trimmed, sourceColorRect, sourceSize, image) {
  return new $.TextureInput(name$, frame, rotated, trimmed, sourceColorRect, sourceSize, image);
};

$.TextureInput_TextureInput$fromHash = function(keyName, map, image) {
  var frame, sourceColorRect, t1, sourceSize;
  frame = $.TextureInput__parseRect($.index(map, "frame"));
  sourceColorRect = $.TextureInput__parseRect($.index(map, "spriteSourceSize"));
  t1 = $.index(map, "sourceSize");
  sourceSize = $.Size$($.index(t1, "w"), $.index(t1, "h"));
  return $.TextureInput$(keyName, frame, $.index(map, "rotated"), $.index(map, "trimmed"), sourceColorRect, sourceSize, image);
};

$.TextureInput__parseRect = function(input) {
  return $.Box_Box$fromCoordSize($.Coordinate$($.index(input, "x"), $.index(input, "y")), $.Size$($.index(input, "w"), $.index(input, "h")));
};

$.TextureData$ = function(_textures) {
  return new $.TextureData(_textures);
};

$.IDBOpenDBRequestEvents$ = function(_ptr) {
  return new $.IDBOpenDBRequestEvents(_ptr);
};

$.IDBRequestEvents$ = function(_ptr) {
  return new $.IDBRequestEvents(_ptr);
};

$.Coordinate$ = function(x, y) {
  return new $.Coordinate(x, y);
};

$.IDBTransactionEvents$ = function(_ptr) {
  return new $.IDBTransactionEvents(_ptr);
};

$.Vector$ = function(x, y) {
  return new $.Vector(x, y);
};

$.IDBVersionChangeRequestEvents$ = function(_ptr) {
  return new $.IDBVersionChangeRequestEvents(_ptr);
};

$.print = function(object) {
  if (typeof object === 'string')
    $.Primitives_printString(object);
  else
    $.Primitives_printString($.getInterceptor(object).toString$0(object));
};

$.Size$ = function(width, height) {
  return new $.Size(width, height);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.coreSort = function(l, compare) {
  $._Sort__doSort(l, 0, l.length - 1, compare);
  return;
};

$.Set_Set = function() {
  return $._HashSetImpl$();
};

$.Future_Future$immediate = function(value) {
  return $._FutureImpl__FutureImpl$immediate(value);
};

$.getInterceptor = function(object) {
  if (typeof object === 'string')
    return $.CTC1;
  if ($.isJsArray(object))
    return $.CTC2;
  if (typeof object === 'number' && Math.floor(object) === object)
    return $.CTC3;
  if (typeof object === 'number')
    return $.CTC4;
  if (typeof object === 'boolean')
    return $.CTC5;
  if (object == null)
    return $.CTC6;
  if (typeof object === "function")
    return $.CTC7;
  return $.CTC8;
};

$.GameRoot_GameRoot = function(width, height, bombCount, canvasElement, textureData) {
  var rootElement, stage;
  rootElement = $.GameElement$(textureData);
  stage = $.Stage$(canvasElement, rootElement);
  return $.GameRoot$_internal(width, height, bombCount, canvasElement, stage, rootElement, $.ClickManager_ClickManager(stage));
};

$.GameRoot$_internal = function(width, height, bombCount, _canvas, _stage, gameElement, _clickMan) {
  var t1 = new $.GameRoot(_stage, _canvas, gameElement, _clickMan, gameElement.addTransform$0(), false, width, height, bombCount, $.GameStorage$(), null, null, null, null);
  t1.GameManager$3(width, height, bombCount);
  t1.GameRoot$_internal$7(width, height, bombCount, _canvas, _stage, gameElement, _clickMan);
  return t1;
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.Mouse_markMouseOver = function(stage, coordinate) {
  var t1, items, hits;
  $.requireArgumentNotNull(stage, "stage");
  t1 = !(coordinate == null);
  $.requireArgument(coordinate == null || coordinate.get$isValid() === true, "coordinate", null);
  items = $.get$Mouse__stageMouseCacheProperty().get$1(stage);
  if (!(items == null)) {
    $.getInterceptor(items).forEach$1(items, new $.Mouse_markMouseOver_anon());
    $.get$Mouse__stageMouseCacheProperty().clear$1(stage);
  }
  if (t1) {
    hits = $.RetainedUtil__hitTest(stage.get$rootElement(), coordinate);
    $.get$Mouse__stageMouseCacheProperty().set$2(stage, hits);
    $.getInterceptor(hits).forEach$1(hits, new $.Mouse_markMouseOver_anon0());
    if ($.gtB($.getInterceptor(hits).get$length(hits), 0))
      $.get$Mouse_isMouseDirectlyOverProperty().set$2($.index(hits, 0), true);
    return hits;
  }
  return;
};

$.Mouse_isMouseDirectlyOver = function(element) {
  return $.get$Mouse_isMouseDirectlyOverProperty().get$1(element);
};

$.JSInvocationMirror$ = function(memberName, _internalName, _kind, _arguments, _namedArgumentNames) {
  return new $.JSInvocationMirror(memberName, _internalName, _kind, _arguments, _namedArgumentNames, null);
};

$.RetainedUtil__hitTest = function(element, point) {
  var bounds, hits, length$, t1, i, t2;
  point = $.RetainedUtil_transformPointGlobalToLocal(element, point);
  bounds = $.Box$(0, 0, element.get$width(), element.get$height());
  hits = $.List_List(null);
  if ($.getInterceptor(bounds).contains$1(bounds, point) === true) {
    if (typeof element === 'object' && element !== null && !!element.is$ParentElement) {
      length$ = element.get$visualChildCount();
      if (typeof length$ !== 'number')
        return $.RetainedUtil__hitTest$bailout(1, element, point, hits, length$);
      for (t1 = length$ - 1, i = 0; i < length$; ++i) {
        hits = $.RetainedUtil__hitTest(element.getVisualChild$1(t1 - i), point);
        if (typeof hits !== 'object' || hits === null || hits.constructor !== Array || !!hits.fixed$length)
          return $.RetainedUtil__hitTest$bailout(2, element, hits, i, point, length$);
        t2 = hits.length;
        if (t2 > 0)
          break;
      }
      element = element;
    }
    $.getInterceptor(hits).add$1(hits, element);
  }
  return hits;
};

$.RetainedUtil_transformPointGlobalToLocal = function(element, point) {
  return element.getTransform$0().createInverse$0().transformCoordinate$1(point);
};

$.Stage$ = function(_canvas, _element) {
  var t1 = new $.Stage($.EventHandle$(), _canvas, _element, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t1.Stage$2(_canvas, _element);
  return t1;
};

$.main = function() {
  $._loadingBar = $.query(".sprite.loading_bar");
  $._loadingBar.get$style().set$display("block");
  $._loadingBar.get$style().set$width("0");
  $._imageLoader = $.ImageLoader$(["images/transparent_animated.png", "images/dart_opaque_01.jpg"]);
  var t1 = $._imageLoader.get$loaded();
  $.getInterceptor(t1).add$1(t1, $._onLoaded);
  t1 = $._imageLoader.get$progress();
  $.getInterceptor(t1).add$1(t1, $._onProgress);
  $._imageLoader.load$0();
  $._audio = $._Audio__Audio();
};

$._onLoaded = function(args) {
  var opaqueImage, textureData;
  if ($.eqB($._imageLoader.get$state(), "loaded") && $._audio.get$done() === true) {
    opaqueImage = $._imageLoader.getResource$1("images/dart_opaque_01.jpg");
    textureData = $.TextureData$($.getTextures($._imageLoader.getResource$1("images/transparent_animated.png"), opaqueImage, $.ImageElement_ImageElement(null, "images/transparent_static.png", null)));
    $.query("#loading").get$style().set$display("none");
    $._runppw(textureData);
  }
};

$._runppw = function(textureData) {
  var size, t1, t2;
  size = $._processUrlHash(false) ? 16 : 7;
  t1 = size * size * 0.15625;
  $.GameRoot_GameRoot(size, size, $.getInterceptor(t1).toInt$0(t1), $.query("#gameCanvas"), textureData);
  t2 = $.window().get$on().get$touchMove();
  $.getInterceptor(t2).add$1(t2, new $._runppw_anon());
  t2 = $.window().get$on().get$popState();
  $.getInterceptor(t2).add$1(t2, new $._runppw_anon0());
  t2 = $.window().get$on().get$keyDown();
  $.getInterceptor(t2).add$1(t2, $._onKeyDown);
  t2 = $.query("#popup").get$on().get$click();
  $.getInterceptor(t2).add$1(t2, $._onPopupClick);
  t2 = $.get$titleClickedEvent();
  $.getInterceptor(t2).add$1(t2, new $._runppw_anon1());
};

$._onPopupClick = function(args) {
  var t1 = args.get$toElement();
  if (!(typeof t1 === 'object' && t1 !== null && t1.is$AnchorElement()))
    $._toggleAbout(false);
};

$._onKeyDown = function(args) {
  switch (args.get$keyCode()) {
    case 27:
      $._toggleAbout(false);
      break;
    case 72:
      $._toggleAbout(null);
      break;
  }
};

$._toggleAbout = function(value) {
  var loc, t1, hash, isOpen, targetHash;
  loc = $.window().get$location();
  t1 = loc.get$hash();
  hash = $.eqB($.getInterceptor(t1).get$length(t1), 0) ? "#" : loc.get$hash();
  isOpen = $.eqB(hash, "#about");
  if (value == null)
    value = !isOpen;
  targetHash = value === true ? "#about" : "#";
  if (!(targetHash === hash))
    loc.assign$1(targetHash);
};

$._processUrlHash = function(forceReload) {
  var loc, hash, href, showAbout, newLoc, t1;
  loc = $.window().get$location();
  hash = loc.get$hash();
  href = loc.get$href();
  $.window().get$history();
  showAbout = false;
  switch (hash) {
    case "#reset":
      newLoc = $.getInterceptor(href).substring$2(href, 0, $.sub($.getInterceptor(href).get$length(href), $.getInterceptor(hash).get$length(hash)));
      t1 = $.window().get$localStorage();
      $.getInterceptor(t1).clear$0(t1);
      loc.replace$1(newLoc);
      showAbout = false;
      break;
    case "#big":
      if (forceReload)
        ;
      return true;
    case "#about":
      showAbout = true;
      break;
  }
  t1 = showAbout ? "inline-block" : "none";
  $.query("#popup").get$style().set$display(t1);
  return false;
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.query = function(selector) {
  return $.document().query$1(selector);
};

$.queryAll = function(selector) {
  return $.document().queryAll$1(selector);
};

$._getNewIsolateId = function() {
  if (!window.$dart$isolate$counter)
    window.$dart$isolate$counter = 1;
  return window.$dart$isolate$counter++;
};

$._onProgress = function(args) {
  var completedBytes, totalBytes, percent, t1, barWidth, t2;
  completedBytes = $._imageLoader.get$completedBytes();
  totalBytes = $._imageLoader.get$totalBytes();
  percent = $.div($.add(completedBytes, $._audio.get$completedBytes()), $.add(totalBytes, $._audio.get$totalBytes()));
  t1 = $.mul(percent, 1000);
  $.div($.getInterceptor(t1).floor$0(t1), 10);
  barWidth = $.mul(percent, 398);
  t2 = $.S($.getInterceptor(barWidth).toInt$0(barWidth)) + "px";
  $._loadingBar.get$style().set$width(t2);
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.GameElement$ = function(textureData) {
  var t1, t2, t3, t4, t5, t6, t7, t8;
  t1 = $.PCanvas$(0, 0, false);
  t2 = $.GameBackgroundElement$();
  t3 = $.BoardElement$();
  t4 = $.NewGameElement$();
  t5 = $.GameTitleElement$();
  t6 = $.EventHandle$();
  t7 = $.TextureAnimationElement$(0, 0, textureData);
  t8 = $.TextureAnimationElement$(0, 0, textureData);
  t6 = new $.GameElement(t1, t2, t3, $.ScoreElement$(), t4, t5, t7, t8, textureData, t6, null, null, null, null, null, null, null, null, null, $.List_List(null), false, $.EventHandle$(), null, 100, 100, null, null, false, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t6.GameElement$1(textureData);
  return t6;
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.GameElement__getScale = function(count, fullSize, holeSize) {
  return $.div($.mul($.add($.mul(count, 80), 64), fullSize), holeSize);
};

$.AbstractWorkerEvents$ = function(_ptr) {
  return new $.AbstractWorkerEvents(_ptr);
};

$.ClickManager_ClickManager = function(stage) {
  $.requireArgumentNotNull(stage, "stage");
  return $.get$ClickManager__clickManagerProperty().get$2(stage, new $.ClickManager_ClickManager_anon());
};

$.ClickManager$_internal = function(_stage) {
  var t1 = new $.ClickManager(_stage, null);
  t1.ClickManager$_internal$1(_stage);
  return t1;
};

$.ClickManager_setClickable = function(element, value) {
  if (value)
    $.get$ClickManager__isClickableProperty().set$2(element, true);
  else
    $.get$ClickManager__isClickableProperty().clear$1(element);
};

$.ClickManager_addHandler = function(element, handler) {
  return $.get$ClickManager__clickEvent().addHandler$2(element, handler);
};

$.MediaStreamEvents$ = function(_ptr) {
  return new $.MediaStreamEvents(_ptr);
};

$.ClickManager_addMouseMoveHandler = function(obj, handler) {
  return $.get$ClickManager__mouseMoveEvent().addHandler$2(obj, handler);
};

$.ClickManager_addMouseUpHandler = function(obj, handler) {
  return $.get$ClickManager__mouseUpEvent().addHandler$2(obj, handler);
};

$.ClickManager_addMouseDownHandler = function(obj, handler) {
  return $.get$ClickManager__mouseDownEvent().addHandler$2(obj, handler);
};

$.LocalWindow__isDartLocation = function(thing, exception) {
  var t1;
  try {
    t1 = thing;
    t1 = typeof t1 === 'object' && t1 !== null && t1.is$Location();
    return t1;
  } catch (exception) {
    $.unwrapException(exception);
    return false;
  }

};

$.ClickManager_addMouseOutHandler = function(obj, handler) {
  return $.get$ClickManager__mouseOutEvent().addHandler$2(obj, handler);
};

$.AffineTransform$ = function(scaleX, shearY, shearX, scaleY, translateX, translateY) {
  return new $.AffineTransform(scaleX, shearY, shearX, scaleY, translateX, translateY);
};

$.AffineTransform_AffineTransform$fromRotate = function(theta, x, y) {
  return $.AffineTransform$(1, 0, 0, 1, 0, 0).setToRotation$3(theta, x, y);
};

$._LocationWrapper$ = function(_ptr) {
  return new $._LocationWrapper(_ptr);
};

$.AudioContextEvents$ = function(_ptr) {
  return new $.AudioContextEvents(_ptr);
};

$._LocationWrapper__get = function(p, m) {
  return p[m];
};

$.TextureAnimationRequest$ = function(_texturePrefix, _frameCount, _offset, delay, initialFrame, initialFrameOffset, startFrame) {
  var t1 = new $.TextureAnimationRequest($.EventHandle$(), _texturePrefix, _frameCount, _offset, delay, initialFrame, initialFrameOffset, false, null);
  t1.TextureAnimationRequest$7$delay$initialFrame$initialFrameOffset$startFrame(_texturePrefix, _frameCount, _offset, delay, initialFrame, initialFrameOffset, startFrame);
  return t1;
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.LocalWindowEvents$ = function(_ptr) {
  return new $.LocalWindowEvents(_ptr);
};

$.ElementMouseEventArgs$_internal = function(element, shiftKey) {
  return new $.ElementMouseEventArgs(element, shiftKey);
};

$.ElementMouseEventArgs_ElementMouseEventArgs = function(element, mouseEvent) {
  return $.ElementMouseEventArgs$_internal(element, mouseEvent.get$shiftKey());
};

$._Sort__doSort = function(a, left, right, compare) {
  if (right - left <= 32)
    $._Sort_insertionSort_(a, left, right, compare);
  else
    $._Sort__dualPivotQuicksort(a, left, right, compare);
};

$.GameStorage$ = function() {
  return new $.GameStorage($.EventHandle$(), $.window().get$localStorage());
};

$.Game$ = function(field) {
  var t1, t2;
  t1 = $.EventHandle$();
  t2 = $.EventHandle$();
  t2 = new $.Game(field, $.Array2d_Array2d(field.get$width(), field.get$height(), $.CTC20), t1, t2, $.CTC19, null, null, null, null);
  t2.Game$1(field);
  return t2;
};

$.ElementInstanceEvents$ = function(_ptr) {
  return new $.ElementInstanceEvents(_ptr);
};

$._Sort_insertionSort_ = function(a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $._Sort_insertionSort_$bailout(1, a, left, right, compare);
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.gtB(compare.call$2(a[t1], el), 0);
        t1 = t2;
      } else
        t1 = false;
      t2 = a.length;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= t2)
        throw $.ioore(j0);
      t1 = a[j0];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      a[j] = t1;
      j = j0;
    }
    if (j < 0 || j >= t2)
      throw $.ioore(j);
    a[j] = el;
  }
};

$._Sort__dualPivotQuicksort = function(a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, t2, less, great, pivots_are_equal, k, ak, comp, great0, less0, t3;
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $._Sort__dualPivotQuicksort$bailout(1, a, left, right, compare);
  sixth = $.tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    t0 = el1;
    el1 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el1;
    el1 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el1;
    el1 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  less = left + 1;
  great = right - 1;
  pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      if ($.eqB(comp, 0))
        continue;
      if ($.ltB(comp, 0)) {
        if (k !== less) {
          t1 = a.length;
          if (less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else {
            t1 = $.ltB(comp, 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
              great = great0;
              break;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (k !== less) {
          t1 = a.length;
          if (less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.gtB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
  t1 = less - 1;
  t2 = a.length;
  if (t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (left >= t2)
    throw $.ioore(left);
  a[left] = t3;
  a[t1] = el2;
  t1 = great + 1;
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (right >= t2)
    throw $.ioore(right);
  a[right] = t3;
  a[t1] = el4;
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!$.eqB(compare.call$2(a[less], el2), 0))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!$.eqB(compare.call$2(a[great], el4), 0))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (k !== less) {
          t1 = a.length;
          if (less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.eqB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$.BatteryManagerEvents$ = function(_ptr) {
  return new $.BatteryManagerEvents(_ptr);
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$._LocationCrossFrame$ = function(_location) {
  return new $._LocationCrossFrame(_location);
};

$._LocationCrossFrame__createSafe = function(location$) {
  var t1 = $.window().get$location();
  if (location$ == null ? t1 == null : location$ === t1)
    return location$;
  else
    return $._LocationCrossFrame$(location$);
};

$._RangeEnumerable$ = function(_start, _count) {
  return new $._RangeEnumerable(_start, _count);
};

$._RangeIterator$ = function(_start, _count) {
  return new $._RangeIterator(_start, _count, 0);
};

$._HistoryCrossFrame$ = function(_history) {
  return new $._HistoryCrossFrame(_history);
};

$._HistoryCrossFrame__createSafe = function(h) {
  var t1 = $.window().get$history();
  if (h == null ? t1 == null : h === t1)
    return h;
  else
    return $._HistoryCrossFrame$(h);
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$._dispatchEvent = function(receiver, message) {
  var event$ = $.CustomEvent_CustomEvent(receiver, false, false, $.JSON_stringify(message));
  $.window().$$dom_dispatchEvent$1(event$);
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$.MediaStreamTrackEvents$ = function(_ptr) {
  return new $.MediaStreamTrackEvents(_ptr);
};

$.PCanvas$ = function(w, h, enableCache) {
  return new $.PCanvas($.List_List(null), null, $.List_List(null), enableCache, $.EventHandle$(), null, w, h, null, null, false, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
};

$.MediaStreamTrackListEvents$ = function(_ptr) {
  return new $.MediaStreamTrackListEvents(_ptr);
};

$.BoardElement$ = function() {
  return new $.BoardElement(null, $.List_List(null), true, $.EventHandle$(), null, 0, 0, null, null, false, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
};

$._callInIsolate = function(isolate, function$) {
  isolate.eval$1(function$);
  $._globalState().get$topEventLoop().run$0();
};

$._currentIsolate = function() {
  return $._globalState().get$currentContext();
};

$._globalState = function() {
  return $globalState;
};

$.ScoreElement$ = function() {
  return new $.ScoreElement(null, null, null, null, null, $.List_List(null), false, $.EventHandle$(), null, 400, 96, null, null, false, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
};

$.MessagePortEvents$ = function(_ptr) {
  return new $.MessagePortEvents(_ptr);
};

$.GameTitleElement$ = function() {
  return new $.GameTitleElement($.List_List(null), false, $.EventHandle$(), null, 318, 96, null, null, false, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
};

$.TextureAnimationElement$ = function(width, height, _textureData) {
  return new $.TextureAnimationElement(_textureData, $.List_List(null), $.List_List(null), false, $.EventHandle$(), null, width, height, null, null, false, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
};

$.ImageElement_ImageElement = function(height, src, width) {
  var e = $.document().$$dom_createElement$1("img");
  if (!(src == null))
    e.set$src(src);
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$.Box$ = function(left, top$, width, height) {
  return new $.Box(left, top$, width, height);
};

$.Box_Box$fromCoordSize = function(topLeft, size) {
  return $.Box$(topLeft.x, topLeft.y, size.width, size.height);
};

$.max = function(a, b) {
  if (typeof b === 'number') {
    if (a > b)
      return a;
    if (a < b)
      return b;
    if (typeof b === 'number') {
      if (typeof a === 'number')
        if (a === 0)
          return a + b;
      if ($.getInterceptor(b).get$isNaN(b) === true)
        return b;
      return a;
    }
    if (b === 0 && $.getInterceptor(a).get$isNegative(a) === true)
      return b;
    return a;
  }
  throw $.$$throw($.ArgumentError$(b));
  throw $.$$throw($.ArgumentError$(a));
};

$.min = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.getInterceptor(b).get$isNegative(b) === true || $.getInterceptor(b).get$isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.NewGameElement$ = function() {
  var t1 = new $.NewGameElement($.EventHandle$(), $.List_List(null), false, $.EventHandle$(), null, 294, 92, null, null, false, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t1.NewGameElement$0();
  return t1;
};

$._AudioContextFactoryProvider_createAudioContext = function() {
  return new (window.AudioContext || window.webkitAudioContext)();
};

$.SquareElement$ = function(x, y) {
  var t1 = new $.SquareElement(x, y, null, $.List_List(null), false, $.EventHandle$(), null, 80, 80, null, null, false, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t1.SquareElement$2(x, y);
  return t1;
};

$._FuncNumEnumerable$ = function(_source, _func) {
  return new $._FuncNumEnumerable(_source, _func);
};

$.GameBackgroundElement$ = function() {
  return new $.GameBackgroundElement($.List_List(null), true, $.EventHandle$(), null, 0, 0, null, null, false, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
};

$._convertNativeToDart_SerializedScriptValue = function(object) {
  return $._convertNativeToDart_AcceptStructuredClone(object, true);
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Futures_wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$.Property$ = function(name$, defaultValue) {
  return new $.Property(defaultValue, name$);
};

$._convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values, copies, t1;
  values = [];
  copies = [];
  t1 = new $._convertNativeToDart_AcceptStructuredClone_findSlot(copies, values);
  return new $._convertNativeToDart_AcceptStructuredClone_walk(new $._convertNativeToDart_AcceptStructuredClone_readSlot(copies), t1, mustCopy, new $._convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
};

$._window = function() {
  return typeof window != "undefined" ? window : null;
};

$._serializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsSerializer$0().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsDeserializer$0().deserialize$1(message);
  else
    return message;
};

$.AttachedEvent$ = function(name$) {
  return new $.AttachedEvent(name$);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($._globalState().get$isWorker() === true)
    return;
  rootContext = $._IsolateContext$();
  $._globalState().set$rootContext(rootContext);
  $globals = rootContext.isolateStatics;
  $static_init();
  $._globalState().set$currentContext(rootContext);
  if (!($._window() == null))
    rootContext.eval$1(new $.startRootIsolate_anon());
  rootContext.eval$1(entry);
  $._globalState().get$topEventLoop().run$0();
};

$._globalState0 = function(val) {
  $globalState = val;
};

$.NotificationEvents$ = function(_ptr) {
  return new $.NotificationEvents(_ptr);
};

$._timerFactory = function(millis, callback, repeating) {
  return repeating === true ? $._Timer$repeating(millis, callback) : $._Timer$(millis, callback);
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values, copies, t1, t2, t3, t4, copy;
  values = [];
  copies = [];
  t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(values, copies);
  t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t3, t2, t1).call$1(value);
  t4.call$0();
  return copy;
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.require = function(truth, message) {
  if (truth !== true)
    throw $.$$throw($.Exception_Exception(message));
};

$.requireArgument = function(truth, argName, message) {
  $._metaRequireArgumentNotNullOrEmpty(argName);
  if (truth !== true)
    throw $.$$throw($.DetailedArgumentError$(argName, message));
};

$.requireArgumentNotNull = function(argument, argName) {
  $._metaRequireArgumentNotNullOrEmpty(argName);
  if (argument == null)
    throw $.$$throw($.NullArgumentError$(argName));
};

$.requireArgumentNotNullOrEmpty = function(argument, argName) {
  $._metaRequireArgumentNotNullOrEmpty(argName);
  if (argument == null)
    throw $.$$throw($.NullArgumentError$(argName));
  else if ($.eqB($.getInterceptor(argument).get$length(argument), 0))
    throw $.$$throw($.DetailedArgumentError$(argName, "cannot be an empty string"));
};

$._metaRequireArgumentNotNullOrEmpty = function(argName) {
  if (argName == null || $.eqB($.getInterceptor(argName).get$length(argName), 0))
    throw $.$$throw($.InvalidOperationError$("That's just sad. Give me a good argName"));
};

$.PeerConnection00Events$ = function(_ptr) {
  return new $.PeerConnection00Events(_ptr);
};

$.CanvasUtil_getCanvasSize = function(canvasElement) {
  return $.Size$(canvasElement.get$width(), canvasElement.get$height());
};

$.CanvasUtil_transform = function(ctx, tx) {
  $.requireArgumentNotNull(ctx, "ctx");
  $.requireArgumentNotNull(tx, "tx");
  ctx.transform$6(tx.get$scaleX(), tx.get$shearY(), tx.get$shearX(), tx.get$scaleY(), tx.get$translateX(), tx.get$translateY());
};

$.CanvasUtil_centeredCircle = function(ctx, x, y, radius) {
  var t1, t2, t3;
  t1 = $.sub(x, radius);
  t2 = $.sub(y, radius);
  t3 = radius * 2;
  $.CanvasUtil_ellipse(ctx, t1, t2, t3, t3);
};

$.CanvasUtil_drawImage = function(ctx, img, sourceBox, targetBox) {
  if (targetBox == null)
    targetBox = $.Box$(0, 0, sourceBox.get$width(), sourceBox.get$height());
  ctx.drawImage$9(img, sourceBox.get$left(), sourceBox.get$top(), sourceBox.get$width(), sourceBox.get$height(), targetBox.get$left(), targetBox.get$top(), targetBox.get$width(), targetBox.get$height());
};

$.CanvasUtil_ellipse = function(ctx, x, y, width, height) {
  var t1, hB, t2, vB, eX, eY, mX, mY;
  t1 = width / 2;
  hB = t1 * 0.5522847498307935;
  t2 = height / 2;
  vB = t2 * 0.5522847498307935;
  eX = $.add(x, width);
  eY = $.add(y, height);
  mX = $.add(x, t1);
  mY = $.add(y, t2);
  ctx.beginPath$0();
  ctx.moveTo$2(x, mY);
  ctx.bezierCurveTo$6(x, $.sub(mY, vB), $.sub(mX, hB), y, mX, y);
  ctx.bezierCurveTo$6($.add(mX, hB), y, eX, $.sub(mY, vB), eX, mY);
  ctx.bezierCurveTo$6(eX, $.add(mY, vB), $.add(mX, hB), eY, mX, eY);
  ctx.bezierCurveTo$6($.sub(mX, hB), eY, x, $.add(mY, vB), x, mY);
  ctx.closePath$0();
};

$.HttpRequest_HttpRequest = function() {
  return new XMLHttpRequest();
};

$.$$ = function(source) {
  if (typeof source === 'object' && source !== null && !!source.is$Enumerable)
    return source;
  else
    return $.Enumerable_Enumerable$fromIterable(source);
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor(t1).contains$2(t1, "Opera", 0);
};

$._Device_isIE = function() {
  var t1, t2;
  if ($._Device_isOpera() !== true) {
    t1 = $._Device_userAgent();
    t2 = $.getInterceptor(t1).contains$2(t1, "MSIE", 0) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
};

$._Device_isFirefox = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor(t1).contains$2(t1, "Firefox", 0);
};

$.RTCDataChannelEvents$ = function(_ptr) {
  return new $.RTCDataChannelEvents(_ptr);
};

$.isValidNumber = function(value) {
  return !(value == null) && $.getInterceptor(value).get$isInfinite(value) !== true && $.getInterceptor(value).get$isNaN(value) !== true;
};

$.rnd = function() {
  if ($._botHelperRandom == null)
    $._botHelperRandom = $.Random_Random(null);
  return $._botHelperRandom;
};

$.RTCPeerConnectionEvents$ = function(_ptr) {
  return new $.RTCPeerConnectionEvents(_ptr);
};

$.getMouseEventCoordinate = function(event$) {
  return $.Coordinate$(event$.get$offsetX(), event$.get$offsetY());
};

$.trackAnalyticsEvent = function(category, action, label, value) {
  $.scoped(new $.trackAnalyticsEvent_anon(category, value, label, action));
};

$._inject = function(code) {
  var script, t1;
  script = $.ScriptElement_ScriptElement();
  script.set$type("text/javascript");
  script.set$innerHTML(code);
  t1 = $.document().get$body().get$nodes();
  $.getInterceptor(t1).add$1(t1, script);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$._initialize = function(exception) {
  var t1;
  if (!($._jsPortSync == null))
    return;
  try {
    $._jsPortSync = $.window().lookupPort$1("dart-js-context");
  } catch (exception) {
    $.unwrapException(exception);
  }

  if ($._jsPortSync == null) {
    $._inject("(function() {\n  // Proxy support for js.dart.\n\n  var globalContext = window;\n\n  // Table for local objects and functions that are proxied.\n  function ProxiedObjectTable() {\n    // Name for debugging.\n    this.name = 'js-ref';\n\n    // Table from IDs to JS objects.\n    this.map = {};\n\n    // Generator for new IDs.\n    this._nextId = 0;\n\n    // Counter for deleted proxies.\n    this._deletedCount = 0;\n\n    // Flag for one-time initialization.\n    this._initialized = false;\n\n    // Ports for managing communication to proxies.\n    this.port = new ReceivePortSync();\n    this.sendPort = this.port.toSendPort();\n\n    // Set of IDs that are global.\n    // These will not be freed on an exitScope().\n    this.globalIds = {};\n\n    // Stack of scoped handles.\n    this.handleStack = [];\n\n    // Stack of active scopes where each value is represented by the size of\n    // the handleStack at the beginning of the scope.  When an active scope\n    // is popped, the handleStack is restored to where it was when the\n    // scope was entered.\n    this.scopeIndices = [];\n  }\n\n  // Number of valid IDs.  This is the number of objects (global and local)\n  // kept alive by this table.\n  ProxiedObjectTable.prototype.count = function () {\n    return Object.keys(this.map).length;\n  }\n\n  // Number of total IDs ever allocated.\n  ProxiedObjectTable.prototype.total = function () {\n    return this.count() + this._deletedCount;\n  }\n\n  // Adds an object to the table and return an ID for serialization.\n  ProxiedObjectTable.prototype.add = function (obj) {\n    if (this.scopeIndices.length == 0) {\n      throw \"Cannot allocate a proxy outside of a scope.\";\n    }\n    // TODO(vsm): Cache refs for each obj?\n    var ref = this.name + '-' + this._nextId++;\n    this.handleStack.push(ref);\n    this.map[ref] = obj;\n    return ref;\n  }\n\n  ProxiedObjectTable.prototype._initializeOnce = function () {\n    if (!this._initialized) {\n      this._initialize();\n      this._initialized = true;\n    }\n  }\n\n  // Enters a new scope for this table.\n  ProxiedObjectTable.prototype.enterScope = function() {\n    this._initializeOnce();\n    this.scopeIndices.push(this.handleStack.length);\n  }\n\n  // Invalidates all non-global IDs in the current scope and\n  // exit the current scope.\n  ProxiedObjectTable.prototype.exitScope = function() {\n    var start = this.scopeIndices.pop();\n    for (var i = start; i < this.handleStack.length; ++i) {\n      var key = this.handleStack[i];\n      if (!this.globalIds.hasOwnProperty(key)) {\n        delete this.map[this.handleStack[i]];\n        this._deletedCount++;\n      }\n    }\n    this.handleStack = this.handleStack.splice(0, start);\n  }\n\n  // Makes this ID globally scope.  It must be explicitly invalidated.\n  ProxiedObjectTable.prototype.globalize = function(id) {\n    this.globalIds[id] = true;\n  }\n\n  // Invalidates this ID, potentially freeing its corresponding object.\n  ProxiedObjectTable.prototype.invalidate = function(id) {\n    var old = this.get(id);\n    delete this.globalIds[id];\n    delete this.map[id];\n    this._deletedCount++;\n    return old;\n  }\n\n  // Gets the object or function corresponding to this ID.\n  ProxiedObjectTable.prototype.get = function (id) {\n    if (!this.map.hasOwnProperty(id)) {\n      throw 'Proxy ' + id + ' has been invalidated.'\n    }\n    return this.map[id];\n  }\n\n  ProxiedObjectTable.prototype._initialize = function () {\n    // Configure this table's port to forward methods, getters, and setters\n    // from the remote proxy to the local object.\n    var table = this;\n\n    this.port.receive(function (message) {\n      // TODO(vsm): Support a mechanism to register a handler here.\n      try {\n        var receiver = table.get(message[0]);\n        var member = message[1];\n        var kind = message[2];\n        var args = message[3].map(deserialize);\n        if (kind == 'get') {\n          // Getter.\n          var field = member;\n          if (field in receiver && args.length == 0) {\n            return [ 'return', serialize(receiver[field]) ];\n          }\n        } else if (kind == 'set') {\n          // Setter.\n          var field = member;\n          if (args.length == 1) {\n            return [ 'return', serialize(receiver[field] = args[0]) ];\n          }\n        } else if (kind == 'apply') {\n          // Direct function invocation.\n          // TODO(vsm): Should we capture _this_ automatically?\n          return [ 'return', serialize(receiver.apply(null, args)) ];\n        } else if (member == '[]' && args.length == 1) {\n          // Index getter.\n          return [ 'return', serialize(receiver[args[0]]) ];\n        } else if (member == '[]=' && args.length == 2) {\n          // Index setter.\n          return [ 'return', serialize(receiver[args[0]] = args[1]) ];\n        } else {\n          var f = receiver[member];\n          if (f) {\n            var result = f.apply(receiver, args);\n            return [ 'return', serialize(result) ];\n          }\n        }\n        return [ 'none' ];\n      } catch (e) {\n        return [ 'throws', e.toString() ];\n      }\n    });\n  }\n\n  // Singleton for local proxied objects.\n  var proxiedObjectTable = new ProxiedObjectTable();\n\n  // DOM element serialization code.\n  var _localNextElementId = 0;\n  var _DART_ID = 'data-dart_id';\n  var _DART_TEMPORARY_ATTACHED = 'data-dart_temporary_attached';\n\n  function serializeElement(e) {\n    // TODO(vsm): Use an isolate-specific id.\n    var id;\n    if (e.hasAttribute(_DART_ID)) {\n      id = e.getAttribute(_DART_ID);\n    } else {\n      id = (_localNextElementId++).toString();\n      e.setAttribute(_DART_ID, id);\n    }\n    if (e !== document.documentElement) {\n      // Element must be attached to DOM to be retrieve in js part.\n      // Attach top unattached parent to avoid detaching parent of \"e\" when\n      // appending \"e\" directly to document. We keep count of elements\n      // temporarily attached to prevent detaching top unattached parent to\n      // early. This count is equals to the length of _DART_TEMPORARY_ATTACHED\n      // attribute. There could be other elements to serialize having the same\n      // top unattached parent.\n      var top = e;\n      while (true) {\n        if (top.hasAttribute(_DART_TEMPORARY_ATTACHED)) {\n          var oldValue = top.getAttribute(_DART_TEMPORARY_ATTACHED);\n          var newValue = oldValue + \"a\";\n          top.setAttribute(_DART_TEMPORARY_ATTACHED, newValue);\n          break;\n        }\n        if (top.parentNode == null) {\n          top.setAttribute(_DART_TEMPORARY_ATTACHED, \"a\");\n          document.documentElement.appendChild(top);\n          break;\n        }\n        if (top.parentNode === document.documentElement) {\n          // e was already attached to dom\n          break;\n        }\n        top = top.parentNode;\n      }\n    }\n    return id;\n  }\n\n  function deserializeElement(id) {\n    // TODO(vsm): Clear the attribute.\n    var list = document.querySelectorAll('[' + _DART_ID + '=\"' + id + '\"]');\n\n    if (list.length > 1) throw 'Non unique ID: ' + id;\n    if (list.length == 0) {\n      throw 'Element must be attached to the document: ' + id;\n    }\n    var e = list[0];\n    if (e !== document.documentElement) {\n      // detach temporary attached element\n      var top = e;\n      while (true) {\n        if (top.hasAttribute(_DART_TEMPORARY_ATTACHED)) {\n          var oldValue = top.getAttribute(_DART_TEMPORARY_ATTACHED);\n          var newValue = oldValue.substring(1);\n          top.setAttribute(_DART_TEMPORARY_ATTACHED, newValue);\n          // detach top only if no more elements have to be unserialized\n          if (top.getAttribute(_DART_TEMPORARY_ATTACHED).length === 0) {\n            top.removeAttribute(_DART_TEMPORARY_ATTACHED);\n            document.documentElement.removeChild(top);\n          }\n          break;\n        }\n        if (top.parentNode === document.documentElement) {\n          // e was already attached to dom\n          break;\n        }\n        top = top.parentNode;\n      }\n    }\n    return e;\n  }\n\n\n  // Type for remote proxies to Dart objects.\n  function DartProxy(id, sendPort) {\n    this.id = id;\n    this.port = sendPort;\n  }\n\n  // Serializes JS types to SendPortSync format:\n  // - primitives -> primitives\n  // - sendport -> sendport\n  // - DOM element -> [ 'domref', element-id ]\n  // - Function -> [ 'funcref', function-id, sendport ]\n  // - Object -> [ 'objref', object-id, sendport ]\n  function serialize(message) {\n    if (message == null) {\n      return null;  // Convert undefined to null.\n    } else if (typeof(message) == 'string' ||\n               typeof(message) == 'number' ||\n               typeof(message) == 'boolean') {\n      // Primitives are passed directly through.\n      return message;\n    } else if (message instanceof SendPortSync) {\n      // Non-proxied objects are serialized.\n      return message;\n    } else if (message instanceof Element &&\n        (message.ownerDocument == null || message.ownerDocument == document)) {\n      return [ 'domref', serializeElement(message) ];\n    } else if (typeof(message) == 'function') {\n      if ('_dart_id' in message) {\n        // Remote function proxy.\n        var remoteId = message._dart_id;\n        var remoteSendPort = message._dart_port;\n        return [ 'funcref', remoteId, remoteSendPort ];\n      } else {\n        // Local function proxy.\n        return [ 'funcref',\n                 proxiedObjectTable.add(message),\n                 proxiedObjectTable.sendPort ];\n      }\n    } else if (message instanceof DartProxy) {\n      // Remote object proxy.\n      return [ 'objref', message.id, message.port ];\n    } else {\n      // Local object proxy.\n      return [ 'objref',\n               proxiedObjectTable.add(message),\n               proxiedObjectTable.sendPort ];\n    }\n  }\n\n  function deserialize(message) {\n    if (message == null) {\n      return null;  // Convert undefined to null.\n    } else if (typeof(message) == 'string' ||\n               typeof(message) == 'number' ||\n               typeof(message) == 'boolean') {\n      // Primitives are passed directly through.\n      return message;\n    } else if (message instanceof SendPortSync) {\n      // Serialized type.\n      return message;\n    }\n    var tag = message[0];\n    switch (tag) {\n      case 'funcref': return deserializeFunction(message);\n      case 'objref': return deserializeObject(message);\n      case 'domref': return deserializeElement(message[1]);\n    }\n    throw 'Unsupported serialized data: ' + message;\n  }\n\n  // Create a local function that forwards to the remote function.\n  function deserializeFunction(message) {\n    var id = message[1];\n    var port = message[2];\n    // TODO(vsm): Add a more robust check for a local SendPortSync.\n    if (\"receivePort\" in port) {\n      // Local function.\n      return proxiedObjectTable.get(id);\n    } else {\n      // Remote function.  Forward to its port.\n      var f = function () {\n        var depth = enterScope();\n        try {\n          var args = Array.prototype.slice.apply(arguments).map(serialize);\n          var result = port.callSync([id, '#call', args]);\n          if (result[0] == 'throws') throw deserialize(result[1]);\n          return deserialize(result[1]);\n        } finally {\n          exitScope(depth);\n        }\n      };\n      // Cache the remote id and port.\n      f._dart_id = id;\n      f._dart_port = port;\n      return f;\n    }\n  }\n\n  // Creates a DartProxy to forwards to the remote object.\n  function deserializeObject(message) {\n    var id = message[1];\n    var port = message[2];\n    // TODO(vsm): Add a more robust check for a local SendPortSync.\n    if (\"receivePort\" in port) {\n      // Local object.\n      return proxiedObjectTable.get(id);\n    } else {\n      // Remote object.\n      return new DartProxy(id, port);\n    }\n  }\n\n  // Instantiate a Date with arguments.\n  function instantiateDate(args) {\n    // 7 arguments because the longest constructor is : new Date(year, month,\n    // day, hour, minute, second, millisecond)\n    if (args.length === 0) {\n      return new Date();\n    } else if (args.length === 1) {\n      return new Date(args[0]);\n    } else if (args.length === 2) {\n      return new Date(args[0], args[1]);\n    } else if (args.length === 3) {\n      return new Date(args[0], args[1], args[2]);\n    } else if (args.length === 4) {\n      return new Date(args[0], args[1], args[2], args[3]);\n    } else if (args.length === 5) {\n      return new Date(args[0], args[1], args[2], args[3], args[4]);\n    } else if (args.length === 6) {\n      return new Date(args[0], args[1], args[2], args[3], args[4], args[5]);\n    } else if (args.length === 7) {\n      return new Date(args[0], args[1], args[2], args[3], args[4], args[5],\n                     args[6]);\n    }\n    return null;\n  }\n\n  // Remote handler to construct a new JavaScript object given its\n  // serialized constructor and arguments.\n  function construct(args) {\n    args = args.map(deserialize);\n    var constructor = args[0];\n    args = Array.prototype.slice.call(args, 1);\n\n    var ret = null;\n    // Date can only be instantiated with the new operator.\n    if (constructor === Date) {\n      ret = instantiateDate(args);\n    } else {\n      // Dummy Type with correct constructor.\n      var Type = function(){};\n      Type.prototype = constructor.prototype;\n  \n      // Create a new instance\n      var instance = new Type();\n  \n      // Call the original constructor.\n      ret = constructor.apply(instance, args);\n      ret = Object(ret) === ret ? ret : instance;\n    }\n    return serialize(ret);\n  }\n\n  // Remote handler to return the top-level JavaScript context.\n  function context(data) {\n    return serialize(globalContext);\n  }\n\n  // Remote handler for debugging.\n  function debug() {\n    var live = proxiedObjectTable.count();\n    var total = proxiedObjectTable.total();\n    return 'JS objects Live : ' + live +\n           ' (out of ' + total + ' ever allocated).';\n  }\n\n  // Return true if two JavaScript proxies are equal (==).\n  function proxyEquals(args) {\n    return deserialize(args[0]) == deserialize(args[1]);\n  }\n\n  // Return true if a JavaScript proxy is instance of a given type (instanceof).\n  function proxyInstanceof(args) {\n    return deserialize(args[0]) instanceof deserialize(args[1]);\n  }\n\n  function proxyConvert(args) {\n    return serialize(deserializeDataTree(args));\n  }\n\n  function deserializeDataTree(data) {\n    var type = data[0];\n    var value = data[1];\n    if (type === 'map') {\n      var obj = {};\n      for (var i = 0; i < value.length; i++) {\n        obj[value[i][0]] = deserializeDataTree(value[i][1]);\n      }\n      return obj;\n    } else if (type === 'list') {\n      var list = [];\n      for (var i = 0; i < value.length; i++) {\n        list.push(deserializeDataTree(value[i]));\n      }\n      return list;\n    } else /* 'simple' */ {\n      return deserialize(value);\n    }\n  }\n\n  function makeGlobalPort(name, f) {\n    var port = new ReceivePortSync();\n    port.receive(f);\n    window.registerPort(name, port.toSendPort());\n  }\n\n  // Enters a new scope in the JavaScript context.\n  function enterJavaScriptScope() {\n    proxiedObjectTable.enterScope();\n  }\n\n  // Enters a new scope in both the JavaScript and Dart context.\n  var _dartEnterScopePort = null;\n  function enterScope() {\n    enterJavaScriptScope();\n    if (!_dartEnterScopePort) {\n      _dartEnterScopePort = window.lookupPort('js-dart-enter-scope');\n    }\n    return _dartEnterScopePort.callSync([]);\n  }\n\n  // Exits the current scope (and invalidate local IDs) in the JavaScript\n  // context.\n  function exitJavaScriptScope() {\n    proxiedObjectTable.exitScope();\n  }\n\n  // Exits the current scope in both the JavaScript and Dart context.\n  var _dartExitScopePort = null;\n  function exitScope(depth) {\n    exitJavaScriptScope();\n    if (!_dartExitScopePort) {\n      _dartExitScopePort = window.lookupPort('js-dart-exit-scope');\n    }\n    return _dartExitScopePort.callSync([ depth ]);\n  }\n\n  makeGlobalPort('dart-js-context', context);\n  makeGlobalPort('dart-js-create', construct);\n  makeGlobalPort('dart-js-debug', debug);\n  makeGlobalPort('dart-js-equals', proxyEquals);\n  makeGlobalPort('dart-js-instanceof', proxyInstanceof);\n  makeGlobalPort('dart-js-convert', proxyConvert);\n  makeGlobalPort('dart-js-enter-scope', enterJavaScriptScope);\n  makeGlobalPort('dart-js-exit-scope', exitJavaScriptScope);\n  makeGlobalPort('dart-js-globalize', function(data) {\n    if (data[0] == \"objref\") return proxiedObjectTable.globalize(data[1]);\n    // TODO(vsm): Do we ever need to globalize functions?\n    throw 'Illegal type: ' + data[0];\n  });\n  makeGlobalPort('dart-js-invalidate', function(data) {\n    if (data[0] == \"objref\") return proxiedObjectTable.invalidate(data[1]);\n    // TODO(vsm): Do we ever need to globalize functions?\n    throw 'Illegal type: ' + data[0];\n  });\n})();\n");
    $._jsPortSync = $.window().lookupPort$1("dart-js-context");
  }
  $._jsPortCreate = $.window().lookupPort$1("dart-js-create");
  $._jsPortDebug = $.window().lookupPort$1("dart-js-debug");
  $._jsPortEquals = $.window().lookupPort$1("dart-js-equals");
  $._jsPortInstanceof = $.window().lookupPort$1("dart-js-instanceof");
  $._jsPortConvert = $.window().lookupPort$1("dart-js-convert");
  $._jsEnterJavaScriptScope = $.window().lookupPort$1("dart-js-enter-scope");
  $._jsExitJavaScriptScope = $.window().lookupPort$1("dart-js-exit-scope");
  $._jsGlobalize = $.window().lookupPort$1("dart-js-globalize");
  $._jsInvalidate = $.window().lookupPort$1("dart-js-invalidate");
  t1 = $.ReceivePortSync$();
  t1.receive$1(new $._initialize_anon());
  $._dartEnterDartScope = t1;
  t1 = $.ReceivePortSync$();
  t1.receive$1(new $._initialize_anon0());
  $._dartExitDartScope = t1;
  $.window().registerPort$2("js-dart-enter-scope", $._dartEnterDartScope.toSendPort$0());
  $.window().registerPort$2("js-dart-exit-scope", $._dartExitDartScope.toSendPort$0());
};

$.context = function() {
  if ($.eqB($._depth(), 0))
    throw $.$$throw("Cannot get JavaScript context out of scope.");
  return $._deserialize($._jsPortSync.callSync$1([]));
};

$._depth = function() {
  var t1 = $.get$_proxiedObjectTable().get$_scopeIndices();
  return $.getInterceptor(t1).get$length(t1);
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$.scoped = function(f) {
  var depth, t1;
  depth = $._enterScope();
  try {
    t1 = f.call$0();
    return t1;
  } finally {
    $._exitScope(depth);
  }
};

$._enterScope = function() {
  $._initialize();
  $.get$_proxiedObjectTable().enterScope$0();
  $._jsEnterJavaScriptScope.callSync$1([]);
  var t1 = $.get$_proxiedObjectTable().get$_scopeIndices();
  return $.getInterceptor(t1).get$length(t1);
};

$._exitScope = function(depth) {
  $._jsExitJavaScriptScope.callSync$1([]);
  $.get$_proxiedObjectTable().exitScope$0();
};

$.array = function(list) {
  return $.Proxy_Proxy$_json(list);
};

$._serialize = function(message) {
  var t1, proxy;
  if (message == null)
    return;
  else if (typeof message === 'string' || typeof message === 'number' || typeof message === 'boolean')
    return message;
  else if (typeof message === 'object' && message !== null && !!message.is$SendPortSync)
    return message;
  else {
    if (typeof message === 'object' && message !== null && message.is$Element())
      t1 = message.get$document() == null || $.eqB(message.get$document(), $.document());
    else
      t1 = false;
    if (t1)
      return ["domref", $._serializeElement(message)];
    else if (typeof message === 'object' && message !== null && !!message.is$Callback)
      return message.get$_serialized();
    else if (typeof message === 'function' || typeof message === 'object' && message !== null && !!message.is$Function)
      if ($.get$_FunctionProxy__map().containsKey$1(message) === true) {
        proxy = $.index($.get$_FunctionProxy__map(), message);
        return ["funcref", proxy.get$_liblib6$_id(), proxy.get$_port()];
      } else
        throw $.$$throw("A function must be converted to a Callback before it can be serialized.");
    else if (typeof message === 'object' && message !== null && !!message.is$Proxy)
      return ["objref", message._liblib6$_id, message._port];
    else {
      t1 = $.get$_proxiedObjectTable();
      return ["objref", $.getInterceptor(t1).add$1(t1, message), $.get$_proxiedObjectTable().get$sendPort()];
    }
  }
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$._deserialize = function(message) {
  var t1, t2;
  t1 = new $._deserialize_deserializeFunction();
  t2 = new $._deserialize_deserializeObject();
  if (message == null)
    return;
  else if (typeof message === 'string' || typeof message === 'number' || typeof message === 'boolean')
    return message;
  else if (typeof message === 'object' && message !== null && !!message.is$SendPortSync)
    return message;
  switch ($.index(message, 0)) {
    case "funcref":
      return t1.call$1(message);
    case "objref":
      return t2.call$1(message);
    case "domref":
      return $._deserializeElement($.index(message, 1));
  }
  throw $.$$throw("Unsupported serialized data: " + $.S(message));
};

$._serializeElement = function(e) {
  var id, t1, top$, oldValue, newValue, t2;
  if (e.get$attributes().containsKey$1("data-dart_id") === true)
    id = $.index(e.get$attributes(), "data-dart_id");
  else {
    t1 = $._localNextElementId;
    $._localNextElementId = $.add(t1, 1);
    id = "dart-" + $.S(t1);
    $.indexSet(e.get$attributes(), "data-dart_id", id);
  }
  t1 = $.document().get$documentElement();
  if (!(e == null ? t1 == null : e === t1))
    for (top$ = e; true;) {
      if (top$.get$attributes().containsKey$1("data-dart_temporary_attached") === true) {
        oldValue = $.index(top$.get$attributes(), "data-dart_temporary_attached");
        newValue = $.getInterceptor(oldValue).concat$1(oldValue, "a");
        $.indexSet(top$.get$attributes(), "data-dart_temporary_attached", newValue);
        break;
      }
      if (top$.get$parent() == null) {
        $.indexSet(top$.get$attributes(), "data-dart_temporary_attached", "a");
        t1 = $.document().get$documentElement().get$elements();
        $.getInterceptor(t1).add$1(t1, top$);
        break;
      }
      t1 = top$.get$parent();
      t2 = $.document().get$documentElement();
      if (t1 == null ? t2 == null : t1 === t2)
        break;
      top$ = top$.get$parent();
    }
  return id;
};

$._deserializeElement = function(id) {
  var list, e, t1, top$, oldValue, newValue, t2;
  list = $.queryAll("[data-dart_id=\"" + $.S(id) + "\"]");
  if ($.gtB($.getInterceptor(list).get$length(list), 1))
    throw $.$$throw("Non unique ID: " + $.S(id));
  if ($.eqB($.getInterceptor(list).get$length(list), 0))
    throw $.$$throw("Only elements attached to document can be serialized: " + $.S(id));
  e = $.index(list, 0);
  t1 = $.document().get$documentElement();
  if (!(e == null ? t1 == null : e === t1))
    for (top$ = e; true;) {
      if (top$.get$attributes().containsKey$1("data-dart_temporary_attached") === true) {
        oldValue = $.index(top$.get$attributes(), "data-dart_temporary_attached");
        newValue = $.getInterceptor(oldValue).substring$1(oldValue, 1);
        $.indexSet(top$.get$attributes(), "data-dart_temporary_attached", newValue);
        t1 = $.index(top$.get$attributes(), "data-dart_temporary_attached");
        if ($.eqB($.getInterceptor(t1).get$length(t1), 0)) {
          top$.get$attributes().remove$1("data-dart_temporary_attached");
          top$.remove$0();
        }
        break;
      }
      t1 = top$.get$parent();
      t2 = $.document().get$documentElement();
      if (t1 == null ? t2 == null : t1 === t2)
        break;
      top$ = top$.get$parent();
    }
  return e;
};

$.NumberEnumerable_NumberEnumerable$fromRange = function(start, count) {
  return $._RangeEnumerable$(start, count);
};

$._getTransparentStaticItems = function() {
  return $.makeLiteralMap(["button_new_game.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 398, "y", 150, "w", 294, "h", 94]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 294, "h", 94]), "sourceSize", $.makeLiteralMap(["w", 294, "h", 94])]), "button_new_game_clicked.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 504, "y", 0, "w", 292, "h", 94]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 292, "h", 94]), "sourceSize", $.makeLiteralMap(["w", 292, "h", 94])]), "logo_win.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 0, "y", 88, "w", 318, "h", 96]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 318, "h", 96]), "sourceSize", $.makeLiteralMap(["w", 318, "h", 96])])]);
};

$._getOpaqueItems = function() {
  return $.makeLiteralMap(["background_side_left.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 0, "y", 96, "w", 352, "h", 672]), "rotated", true, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 352, "h", 672]), "sourceSize", $.makeLiteralMap(["w", 352, "h", 672])]), "background_top_left.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 0, "y", 0, "w", 1024, "h", 96]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 1024, "h", 96]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 96])]), "balloon.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1184, "y", 352, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_pieces_a.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1184, "y", 272, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_pieces_b.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1184, "y", 192, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_pieces_c.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1104, "y", 352, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_pieces_d.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1024, "y", 304, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_tagged_!.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 832, "y", 368, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_tagged_bomb.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 944, "y", 304, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_tagged_frozen.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1104, "y", 272, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "crater_b.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1136, "y", 112, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "game_board_center.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1104, "y", 192, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "game_board_corner_bottom_left.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 784, "y", 96, "w", 112, "h", 112]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 112, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 112, "h", 112])]), "game_board_corner_bottom_right.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 672, "y", 96, "w", 112, "h", 112]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 112, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 112, "h", 112])]), "game_board_corner_top_left.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1136, "y", 0, "w", 112, "h", 112]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 112, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 112, "h", 112])]), "game_board_corner_top_right.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1024, "y", 0, "w", 112, "h", 112]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 112, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 112, "h", 112])]), "game_board_side_bottom.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 976, "y", 112, "w", 80, "h", 112]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 112])]), "game_board_side_left.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 784, "y", 208, "w", 112, "h", 80]), "rotated", true, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 112, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 112, "h", 80])]), "game_board_side_right.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 672, "y", 208, "w", 112, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 112, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 112, "h", 80])]), "game_board_side_top.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 896, "y", 96, "w", 80, "h", 112]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 112])]), "number_eight.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1056, "y", 112, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_five.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1024, "y", 224, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_four.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 672, "y", 368, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_one.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 752, "y", 320, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_seven.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 864, "y", 288, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_six.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 944, "y", 224, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_three.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 864, "y", 208, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_two.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 672, "y", 288, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])])]);
};

$._getTransparentItems = function() {
  return $.makeLiteralMap(["balloon_explode_0000.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1762, "y", 1058, "w", 80, "h", 86]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 89, "y", 87, "w", 80, "h", 86]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0001.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 446, "y", 1332, "w", 208, "h", 208]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 35, "y", 13, "w", 208, "h", 208]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0002.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 868, "y", 612, "w", 230, "h", 230]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 13, "y", 13, "w", 230, "h", 230]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0003.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1128, "y", 840, "w", 226, "h", 222]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 18, "y", 12, "w", 226, "h", 222]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0004.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1072, "y", 1074, "w", 228, "h", 218]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 16, "y", 16, "w", 228, "h", 218]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0005.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1100, "y", 610, "w", 228, "h", 218]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 16, "y", 15, "w", 228, "h", 218]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0006.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 908, "y", 844, "w", 228, "h", 218]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 15, "y", 15, "w", 228, "h", 218]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0007.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1362, "y", 234, "w", 224, "h", 218]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 15, "y", 14, "w", 224, "h", 218]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0008.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1320, "y", 608, "w", 224, "h", 218]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 15, "y", 14, "w", 224, "h", 218]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0009.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 656, "y", 1314, "w", 226, "h", 224]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 13, "y", 14, "w", 226, "h", 224]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0010.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 842, "y", 1078, "w", 228, "h", 230]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 13, "w", 228, "h", 230]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0011.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1298, "y", 2, "w", 228, "h", 230]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 13, "w", 228, "h", 230]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0012.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1132, "y", 236, "w", 228, "h", 230]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 13, "w", 228, "h", 230]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0013.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 676, "y", 846, "w", 230, "h", 230]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 11, "y", 13, "w", 230, "h", 230]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0014.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1066, "y", 2, "w", 230, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 11, "y", 11, "w", 230, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0015.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 900, "y", 236, "w", 230, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 11, "y", 12, "w", 230, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0016.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 834, "y", 2, "w", 230, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 12, "w", 230, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0017.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 666, "y", 244, "w", 232, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 12, "w", 232, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0018.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 634, "y", 612, "w", 232, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 11, "y", 12, "w", 232, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0019.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 442, "y", 846, "w", 232, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 12, "w", 232, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0020.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 408, "y", 1098, "w", 232, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 11, "w", 232, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0021.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 400, "y", 612, "w", 232, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 12, "w", 232, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0022.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 208, "y", 864, "w", 232, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 11, "w", 232, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0023.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 882, "y", 1310, "w", 230, "h", 228]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 12, "w", 230, "h", 228]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0000.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1236, "y", 1304, "w", 142, "h", 122]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 60, "y", 62, "w", 142, "h", 122]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0001.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 642, "y", 1080, "w", 232, "h", 198]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 15, "y", 23, "w", 232, "h", 198]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0002.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 206, "y", 1144, "w", 234, "h", 200]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 14, "y", 22, "w", 234, "h", 200]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0003.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 2, "y", 1144, "w", 238, "h", 202]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 11, "y", 22, "w", 238, "h", 202]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0004.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 628, "y", 2, "w", 240, "h", 204]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 10, "y", 21, "w", 240, "h", 204]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0005.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 458, "y", 248, "w", 242, "h", 206]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 9, "y", 20, "w", 242, "h", 206]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0006.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 422, "y", 2, "w", 244, "h", 204]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 8, "y", 22, "w", 244, "h", 204]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0007.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 250, "y", 284, "w", 248, "h", 206]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 5, "y", 21, "w", 248, "h", 206]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0008.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 2, "y", 892, "w", 250, "h", 204]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 4, "y", 23, "w", 250, "h", 204]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0009.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 196, "y", 612, "w", 250, "h", 202]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 4, "y", 25, "w", 250, "h", 202]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0010.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1292, "y", 1212, "w", 88, "h", 110]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 82, "y", 78, "w", 88, "h", 110]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0011.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1544, "y", 948, "w", 92, "h", 116]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 80, "y", 75, "w", 92, "h", 116]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0012.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1440, "w", 98, "h", 122]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 77, "y", 72, "w", 98, "h", 122]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0013.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1730, "y", 1424, "w", 104, "h", 128]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 73, "y", 69, "w", 104, "h", 128]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0014.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1726, "y", 948, "w", 108, "h", 134]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 71, "y", 66, "w", 108, "h", 134]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0015.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 924, "y", 470, "w", 114, "h", 140]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 67, "y", 63, "w", 114, "h", 140]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0016.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 506, "y", 492, "w", 118, "h", 144]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 65, "y", 62, "w", 118, "h", 144]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0017.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1112, "y", 1304, "w", 122, "h", 150]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 63, "y", 58, "w", 122, "h", 150]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0018.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 2, "y", 1384, "w", 128, "h", 154]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 59, "y", 56, "w", 128, "h", 154]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0019.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 764, "y", 478, "w", 132, "h", 158]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 57, "y", 54, "w", 132, "h", 158]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0020.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 308, "y", 1380, "w", 136, "h", 160]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 54, "y", 53, "w", 136, "h", 160]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0021.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1040, "y", 470, "w", 138, "h", 164]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 53, "y", 51, "w", 138, "h", 164]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0022.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1832, "y", 2, "w", 142, "h", 168]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 51, "y", 49, "w", 142, "h", 168]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0023.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1608, "y", 610, "w", 146, "h", 170]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 48, "y", 48, "w", 146, "h", 170]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0024.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1438, "y", 460, "w", 146, "h", 172]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 48, "y", 47, "w", 146, "h", 172]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0025.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1794, "y", 458, "w", 148, "h", 174]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 47, "y", 46, "w", 148, "h", 174]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0026.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 132, "y", 1384, "w", 150, "h", 174]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 45, "y", 46, "w", 150, "h", 174]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0027.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1794, "y", 608, "w", 148, "h", 172]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 46, "y", 46, "w", 148, "h", 172]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "dart_fly_0000.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1796, "y", 330, "w", 126, "h", 194]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 869, "y", 486, "w", 126, "h", 194]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0001.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 2, "y", 2, "w", 210, "h", 320]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 794, "y", 385, "w", 210, "h", 320]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0002.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 2, "y", 324, "w", 246, "h", 286]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 736, "y", 317, "w", 246, "h", 286]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0003.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1582, "y", 228, "w", 212, "h", 220]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 689, "y", 271, "w", 212, "h", 220]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0004.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1832, "y", 146, "w", 182, "h", 166]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 653, "y", 244, "w", 182, "h", 166]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0005.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1352, "y", 834, "w", 162, "h", 120]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 621, "y", 231, "w", 162, "h", 120]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0006.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1292, "y", 1068, "w", 142, "h", 98]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 597, "y", 211, "w", 142, "h", 98]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0007.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1250, "y", 1448, "w", 126, "h", 92]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 576, "y", 189, "w", 126, "h", 92]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0008.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1638, "y", 948, "w", 112, "h", 86]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 558, "y", 179, "w", 112, "h", 86]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0009.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1518, "y", 1206, "w", 98, "h", 94]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 545, "y", 177, "w", 98, "h", 94]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0010.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1456, "y", 956, "w", 86, "h", 110]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 534, "y", 185, "w", 86, "h", 110]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0011.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1860, "y", 1420, "w", 76, "h", 124]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 524, "y", 199, "w", 76, "h", 124]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0012.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1540, "y", 608, "w", 66, "h", 134]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 517, "y", 221, "w", 66, "h", 134]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0013.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0014.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0015.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0016.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0017.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0018.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0019.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0020.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0021.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0022.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0023.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0024.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0025.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0026.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0027.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0028.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0029.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0030.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0031.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0032.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0033.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0034.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0035.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0036.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0037.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0038.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0039.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0040.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1930, "y", 758, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0041.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1862, "y", 1014, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0042.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1862, "y", 948, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0043.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1792, "y", 882, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0044.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1696, "y", 1062, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0045.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1654, "y", 882, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0046.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1630, "y", 1066, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0047.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1564, "y", 1066, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0048.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1578, "y", 1302, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0049.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1512, "y", 1302, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0050.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1446, "y", 1302, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0051.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1516, "y", 882, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0052.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1540, "y", 744, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0053.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1844, "y", 1146, "w", 62, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 506, "y", 248, "w", 62, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0054.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 214, "y", 287, "w", 1, "h", 1]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 1, "h", 1]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0000.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1644, "y", 1292, "w", 102, "h", 130]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 390, "y", 512, "w", 102, "h", 130]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0001.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1704, "y", 2, "w", 126, "h", 216]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 378, "y", 424, "w", 126, "h", 216]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0002.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 214, "y", 2, "w", 206, "h", 280]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 338, "y", 359, "w", 206, "h", 280]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0003.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 2, "y", 612, "w", 192, "h", 278]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 340, "y", 312, "w", 192, "h", 278]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0004.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1528, "y", 2, "w", 174, "h", 224]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 347, "y", 283, "w", 174, "h", 224]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0005.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1612, "y", 450, "w", 158, "h", 180]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 356, "y", 265, "w", 158, "h", 180]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0006.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1206, "y", 468, "w", 144, "h", 138]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 365, "y", 257, "w", 144, "h", 138]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0007.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1606, "y", 758, "w", 130, "h", 122]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 376, "y", 235, "w", 130, "h", 122]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0008.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 652, "y", 492, "w", 118, "h", 110]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 387, "y", 221, "w", 118, "h", 110]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0009.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1352, "y", 956, "w", 110, "h", 102]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 394, "y", 212, "w", 110, "h", 102]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0010.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1378, "y", 1440, "w", 100, "h", 98]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 406, "y", 215, "w", 100, "h", 98]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0011.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1404, "y", 1206, "w", 94, "h", 112]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 416, "y", 222, "w", 94, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0012.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1618, "y", 1204, "w", 86, "h", 122]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 428, "y", 237, "w", 86, "h", 122]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0013.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0014.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0015.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0016.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0017.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0018.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0019.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0020.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0021.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0022.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0023.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0024.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0025.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0026.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0027.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0028.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0029.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0030.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0031.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0032.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0033.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0034.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0035.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0036.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0037.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0038.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0039.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0040.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1360, "y", 1302, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0041.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1392, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0042.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1112, "y", 1456, "w", 84, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0043.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1352, "y", 468, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0044.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1830, "y", 1292, "w", 80, "h", 126]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 442, "y", 261, "w", 80, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0045.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1748, "y", 1292, "w", 80, "h", 126]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 442, "y", 261, "w", 80, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0046.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1860, "y", 1210, "w", 80, "h", 126]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 442, "y", 261, "w", 80, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0047.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1602, "y", 1440, "w", 80, "h", 126]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 442, "y", 261, "w", 80, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0048.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1762, "y", 1140, "w", 80, "h", 126]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 442, "y", 261, "w", 80, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0049.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1912, "y", 1292, "w", 76, "h", 126]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 76, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0050.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 378, "y", 534, "w", 76, "h", 126]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 76, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0051.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 250, "y", 534, "w", 76, "h", 126]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 76, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0052.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1738, "y", 758, "w", 76, "h", 122]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 262, "w", 76, "h", 122]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0053.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1816, "y", 758, "w", 74, "h", 120]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 444, "y", 264, "w", 74, "h", 120]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0054.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 214, "y", 284, "w", 1, "h", 1]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 1, "h", 1]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])])]);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$.getTextures = function(transparentElement, opaqueElement, transparentStaticElement) {
  var frames$, t1;
  frames$ = $.makeLiteralMap([]);
  t1 = $._getTransparentItems();
  $.getInterceptor(t1).forEach$1(t1, new $.getTextures_anon(transparentElement, frames$));
  t1 = $._getOpaqueItems();
  $.getInterceptor(t1).forEach$1(t1, new $.getTextures_anon0(opaqueElement, frames$));
  t1 = $._getTransparentStaticItems();
  $.getInterceptor(t1).forEach$1(t1, new $.getTextures_anon1(transparentStaticElement, frames$));
  return frames$;
};

$._WhereIterator$ = function(_source, _func) {
  return new $._WhereIterator(_source, _func, null, null);
};

$.List_List = function(length$) {
  return $.Primitives_newList(length$);
};

$.List_List$from = function(other) {
  var list, t1, t2;
  list = $.List_List(null);
  for (t1 = $.getInterceptor(other).iterator$0(other); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.getInterceptor(list).add$1(list, t2);
  }
  return list;
};

$.double_parse = function(source) {
  return $.Primitives_parseDouble(source);
};

$._FuncEnumerable$ = function(_source, _func) {
  return new $._FuncEnumerable(_source, _func);
};

$._SelectIterator$ = function(_source, _func) {
  return new $._SelectIterator(_source, _func);
};

$.String_String$fromCharCodes = function(charCodes) {
  if (!$.isJsArray(charCodes))
    charCodes = $.List_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.Map_Map = function() {
  return $._HashMapImpl$();
};

$._SimpleEnumerable$ = function(_source) {
  return new $._SimpleEnumerable(_source);
};

$.ScriptProcessorNodeEvents$ = function(_ptr) {
  return new $.ScriptProcessorNodeEvents(_ptr);
};

$.Comparable_compare = function(a, b) {
  return $.getInterceptor(a).compareTo$1(a, b);
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$.SharedWorkerContextEvents$ = function(_ptr) {
  return new $.SharedWorkerContextEvents(_ptr);
};

$.ReadOnlyCollection$ = function(source) {
  return new $.ReadOnlyCollection($.List_List$from(source));
};

$.Enumerable_Enumerable$fromIterable = function(source) {
  $.requireArgumentNotNull(source, "source");
  return $._SimpleEnumerable$(source);
};

$.int_parse = function(source) {
  return $.Primitives_parseInt(source);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.Field_Field = function(bombCount, cols, rows, seed) {
  var squares, rnd, i, index;
  if (typeof bombCount !== 'number')
    return $.Field_Field$bailout(1, bombCount, cols, rows, seed);
  squares = $.List_List(null);
  $.getInterceptor(squares).insertRange$3(squares, 0, $.mul(rows, cols), false);
  rnd = $.Random_Random(seed);
  for (i = 0; i < bombCount; ++i) {
    do {
      index = rnd.nextInt$1(squares.length);
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= squares.length)
        throw $.ioore(index);
    } while (squares[index] === true);
    squares[index] = true;
  }
  return $.Field$_internal(bombCount, cols, $.ReadOnlyCollection$(squares));
};

$.Field$_internal = function(bombCount, cols, source) {
  var t1, t2, t3;
  t1 = $.Array2d_Array2d(cols, $.tdiv($.getInterceptor(source).get$length(source), cols), null);
  t2 = source.toList$0();
  t3 = !(cols == null) && $.gtB(cols, 0) && !(t2 == null) ? $.tdiv($.getInterceptor(t2).get$length(t2), cols) : 0;
  t3 = new $.Field(bombCount, t1, cols, t3, t2);
  t3.Array2d$wrap$2(cols, t2);
  t3.Field$_internal$3(bombCount, cols, source);
  return t3;
};

$._ResourceEntry$ = function(url) {
  return new $._ResourceEntry(url, null, null, null, 0);
};

$.Array2d_Array2d = function(width, height, initialValue) {
  var s;
  $.requireArgumentNotNull(width, "width");
  $.requireArgumentNotNull(height, "height");
  $.requireArgument($.gt(width, 0), "width", null);
  $.requireArgument($.gt(height, 0), "height", null);
  s = $.List_List(null);
  $.getInterceptor(s).insertRange$3(s, 0, $.mul(width, height), initialValue);
  return $.Array2d$wrap(width, s);
};

$.Array2d$wrap = function(width, source) {
  var t1;
  if (!(width == null) && $.gtB(width, 0) && true) {
    t1 = source.length;
    if (typeof width !== 'number')
      throw $.iae(width);
    t1 = $.tdiv(t1, width);
  } else
    t1 = 0;
  t1 = new $.Array2d(width, t1, source);
  t1.Array2d$wrap$2(width, source);
  return t1;
};

$.EventHandle$ = function() {
  return new $.EventHandle(null, false);
};

$.ImageLoader$ = function(urls) {
  var t1, t2, t3;
  t1 = $.EventHandle$();
  t2 = $.EventHandle$();
  t3 = $.$$(urls);
  return new $.ImageLoader($.getInterceptor(t3).map$1(t3, new $.anon()).toReadOnlyCollection$0(), t1, t2, "unloaded");
};

$._Audio__Audio = function(exception) {
  var audioContext, t1, t2, loader, t3, e;
  if (!($.get$_Audio__audioFormat() == null))
    try {
      audioContext = $.AudioContext_AudioContext();
      t1 = audioContext;
      t2 = $.$$($.CTC);
      t2 = $.getInterceptor(t2).map$1(t2, $._Audio__getAudioPath);
      loader = $.AudioLoader$(t1, t2);
      t3 = $._Audio$_internal(loader);
      return t3;
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      $.print("Error creating AudioContext: " + $.S(e));
    }

  return $._Audio$_disabled();
};

$._Audio$_disabled = function() {
  return new $._Audio(null, $.Map_Map());
};

$._Audio$_internal = function(_audioLoader) {
  var t1 = new $._Audio(_audioLoader, $.Map_Map());
  t1._Audio$_internal$1(_audioLoader);
  return t1;
};

$.SpeechRecognitionEvents$ = function(_ptr) {
  return new $.SpeechRecognitionEvents(_ptr);
};

$._Audio__getAudioFormat = function(exception) {
  var userAgent, t1, isWebKit, isChrome, e;
  try {
    userAgent = $.window().get$navigator().get$userAgent();
    t1 = userAgent;
    isWebKit = $.getInterceptor(t1).contains$1(t1, "WebKit");
    if (isWebKit === true) {
      t1 = userAgent;
      isChrome = $.getInterceptor(t1).contains$1(t1, "Chrome");
      if (isChrome === true)
        return "webm";
      else
        return "m4a";
    }
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    $.print("Error getting client info: " + $.S(e));
  }

  return;
};

$._Audio__getAudioPath = function(name$) {
  return "audio/" + $.S($.get$_Audio__audioFormat()) + "/" + $.S(name$) + "." + $.S($.get$_Audio__audioFormat());
};

$.Tuple$ = function(item1, item2) {
  return new $.Tuple(item1, item2);
};

$.AudioLoader$ = function(context, urlList) {
  var t1, t2, t3;
  t1 = $.EventHandle$();
  t2 = $.EventHandle$();
  t3 = $.$$(urlList);
  return new $.AudioLoader(context, $.getInterceptor(t3).map$1(t3, new $.anon()).toReadOnlyCollection$0(), t1, t2, "unloaded");
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return (currentProbe + numberOfProbes & length$ - 1) >>> 0;
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.Duration$ = function(days, hours, milliseconds, minutes, seconds) {
  return new $.Duration($.add($.add($.add($.add($.mul(days, 86400000), $.mul(hours, 3600000)), $.mul(minutes, 60000)), $.mul(seconds, 1000)), milliseconds));
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if ("\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n" === string)
    $.Primitives_mirrorsEnabled = true;
  else if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives_parseInt = function(string) {
  var match, base, result;
  $.checkString(string);
  match = /^\s*[+-]?(?:0(x)[a-f0-9]+|\d+)\s*$/i.exec(string);
  if (match == null)
    throw $.$$throw($.FormatException$(string));
  base = !($.index(match, 1) == null) ? 16 : 10;
  result = parseInt(string, base);
  if ($.getInterceptor(result).get$isNaN(result) === true)
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_parseDouble = function(string) {
  var result;
  $.checkString(string);
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(string))
    throw $.$$throw($.FormatException$(string));
  result = parseFloat(string);
  if ($.getInterceptor(result).get$isNaN(result) === true && !$.eqB(string, "NaN"))
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.getInterceptor(name$).charCodeAt$1(name$, 0) === 36 ? $.getInterceptor(name$).substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives__fromCharCodeApply = function(array) {
  var end, t1, result, i, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result = result + String.fromCharCode.apply(null, subarray);
  }
  return result;
};

$.Primitives_stringFromCodePoints = function(codePoints) {
  var a, t1, t2;
  a = [];
  for (t1 = $.getInterceptor(codePoints).iterator$0(codePoints); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 <= 65535)
      $.getInterceptor(a).add$1(a, t2);
    else if (t2 <= 1114111) {
      $.getInterceptor(a).add$1(a, 55296 + ($.shr(t2 - 65536, 10) & 1023));
      $.getInterceptor(a).add$1(a, 56320 + (t2 & 1023));
    } else
      throw $.$$throw($.ArgumentError$(t2));
  }
  return $.Primitives__fromCharCodeApply(a);
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.getInterceptor(charCodes).iterator$0(charCodes); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 < 0)
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.TextTrackEvents$ = function(_ptr) {
  return new $.TextTrackEvents(_ptr);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.Error_safeToString = function(object) {
  var t1;
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.getInterceptor(object).toString$0(object);
  if (typeof object === 'string') {
    t1 = $.getInterceptor(object).replaceAll$2(object, "\\", "\\\\");
    t1 = $.getInterceptor(t1).replaceAll$2(t1, "\n", "\\n");
    t1 = $.getInterceptor(t1).replaceAll$2(t1, "\r", "\\r");
    return "\"" + $.S($.getInterceptor(t1).replaceAll$2(t1, "\"", "\\\"")) + "\"";
  }
  return $.Primitives_objectToString(object);
};

$.TextTrackCueEvents$ = function(_ptr) {
  return new $.TextTrackCueEvents(_ptr);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$.RangeError$ = function(message) {
  return new $.RangeError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer("");
  $.Maps__emitMap(m, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.getInterceptor(visiting).add$1(visiting, m);
  $.getInterceptor(result).add$1(result, "{");
  t1.first_1 = true;
  $.getInterceptor(m).forEach$1(m, new $.Maps__emitMap_anon(t1, visiting, result));
  $.getInterceptor(result).add$1(result, "}");
  $.getInterceptor(visiting).removeLast$0(visiting);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.SequenceIterator$ = function(_sequence) {
  return new $.SequenceIterator(_sequence, 0);
};

$.TextTrackListEvents$ = function(_ptr) {
  return new $.TextTrackListEvents(_ptr);
};

$.IndexIterator$ = function(length$, indexer) {
  var t1 = new $.IndexIterator(indexer, length$, 0);
  t1.IndexIterator$2(length$, indexer);
  return t1;
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_some = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
};

$.Collections_every = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
};

$.Collections_map = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.getInterceptor(source).iterator$0(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.getInterceptor(destination).add$1(destination, f.call$1(t2));
  }
  return destination;
};

$.Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.getInterceptor(source).iterator$0(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      $.getInterceptor(destination).add$1(destination, t2);
  }
  return destination;
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer("");
  $.Collections__emitCollection(c, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var isList, t1, first, t2;
  $.getInterceptor(visiting).add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  t1 = $.getInterceptor(result);
  t1.add$1(result, isList ? "[" : "{");
  for (t1 = $.getInterceptor(c).iterator$0(c), first = true; t1.get$hasNext() === true; first = false) {
    t2 = t1.next$0();
    if (!first)
      $.getInterceptor(result).add$1(result, ", ");
    $.Collections__emitObject(t2, result, visiting);
  }
  t1 = $.getInterceptor(result);
  t1.add$1(result, isList ? "]" : "}");
  $.getInterceptor(visiting).removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor(result);
      t1.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? "[...]" : "{...}");
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor(result).add$1(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.getInterceptor(c).iterator$0(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.Proxy_Proxy$_json = function(data) {
  if ($.eqB($._depth(), 0))
    throw $.$$throw("Cannot create Proxy out of scope.");
  return $._deserialize($._jsPortConvert.callSync$1($.Proxy__serializeDataTree(data)));
};

$.CustomEvent_CustomEvent = function(type, canBubble, cancelable, detail) {
  return $._CustomEventFactoryProvider_createCustomEvent(type, canBubble, cancelable, detail);
};

$.Proxy__serializeDataTree = function(data) {
  var entries, t1, t2;
  if (typeof data === 'object' && data !== null && data.is$Map()) {
    entries = $.List_List(null);
    for (t1 = data.get$keys(), t1 = $.getInterceptor(t1).iterator$0(t1); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      $.getInterceptor(entries).add$1(entries, [t2, $.Proxy__serializeDataTree(data.operator$index$1(t2))]);
    }
    return ["map", entries];
  } else if (typeof data === 'object' && data !== null && (data.constructor === Array || data.is$List()))
    return ["list", $.getInterceptor(data).map$1(data, new $.Proxy__serializeDataTree_anon())];
  else
    return ["simple", $._serialize(data)];
};

$.Proxy$_internal = function(_port, _id) {
  return new $.Proxy(_port, _id);
};

$.Proxy__forward = function(receiver, member, kind, args) {
  var result;
  if ($.eqB($._depth(), 0))
    throw $.$$throw("Cannot access a JavaScript proxy out of scope.");
  result = receiver._port.callSync$1([receiver._liblib6$_id, member, kind, $.getInterceptor(args).map$1(args, $._serialize)]);
  switch ($.index(result, 0)) {
    case "return":
      return $._deserialize($.index(result, 1));
    case "throws":
      throw $.$$throw($._deserialize($.index(result, 1)));
    case "none":
      throw $.$$throw($.NoSuchMethodError$(receiver, member, args, $.makeLiteralMap([]), null));
    default:
      throw $.$$throw("Invalid return value");
  }
};

$._Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.getInterceptor(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
};

$.DOMApplicationCacheEvents$ = function(_ptr) {
  return new $.DOMApplicationCacheEvents(_ptr);
};

$._Collections_map = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.getInterceptor(source).iterator$0(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.getInterceptor(destination).add$1(destination, f.call$1(t2));
  }
  return destination;
};

$._Collections_some = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
};

$._Collections_every = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
};

$._Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.getInterceptor(source).iterator$0(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      $.getInterceptor(destination).add$1(destination, t2);
  }
  return destination;
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator($.getInterceptor(array).get$length(array), array, 0);
};

$._ProxiedObjectTable$ = function() {
  var t1, t2, t3, t4;
  t1 = $.makeLiteralMap([]);
  t2 = $.ReceivePortSync$();
  t3 = $.List_List(null);
  t4 = $.List_List(null);
  t4 = new $._ProxiedObjectTable("dart-ref", 0, 0, t1, t2, $.Set_Set(), t3, t4);
  t4._ProxiedObjectTable$0();
  return t4;
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ReceivePortSync__isolateId = function() {
  if ($.ReceivePortSync__cachedIsolateId == null)
    $.ReceivePortSync__cachedIsolateId = $._getNewIsolateId();
  return $.ReceivePortSync__cachedIsolateId;
};

$.ReceivePortSync__lookup = function(isolateId, portId) {
  if ($.eqB(isolateId, $.ReceivePortSync__isolateId()))
    return $.index($.ReceivePortSync__portMap, portId).toSendPort$0();
  else
    return $._RemoteSendPortSync$(isolateId, portId);
};

$.ReceivePortSync$ = function() {
  var t1 = new $.ReceivePortSync(null, null, null);
  t1.ReceivePortSync$0();
  return t1;
};

$.ReceivePortSync__getListenerName = function(isolateId, portId) {
  return "dart-port-" + $.S(isolateId) + "-" + $.S(portId);
};

$.Url_createObjectUrl = function(blob_OR_source_OR_stream) {
  return (window.URL || window.webkitURL).createObjectURL(blob_OR_source_OR_stream);
};

$.Url_revokeObjectUrl = function(objectUrl) {
  return (window.URL || window.webkitURL).revokeObjectURL(objectUrl);
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  return $.stringJoinUnchecked($.Strings__toJsStringArray(strings), separator);
};

$.Strings__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'string' && (typeof strings !== 'object' || strings === null || strings.constructor !== Array && !strings.is$JavaScriptIndexingBehavior()))
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $.List_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$._FunctionProxy$_internal = function(port, id) {
  var t1 = new $._FunctionProxy(null, port, id);
  t1._FunctionProxy$_internal$2(port, id);
  return t1;
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$.CanvasElement_CanvasElement = function(height, width) {
  var e = $.document().$$dom_createElement$1("canvas");
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$.GameAudio_audioEvent = function() {
  return $.get$GameAudio__audioEventHandle();
};

$.Random_Random = function(seed) {
  return $.CTC10;
};

$.GlobalId_GlobalId = function() {
  var t1 = $.GlobalId__globalId;
  $.GlobalId__globalId = $.add(t1, 1);
  return $.GlobalId$_internal(t1);
};

$.GlobalId$_internal = function(value) {
  return new $.GlobalId(value, $.Util_getHashCode([value]));
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$.DedicatedWorkerContextEvents$ = function(_ptr) {
  return new $.DedicatedWorkerContextEvents(_ptr);
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue());
};

$.WorkerContextEvents$ = function(_ptr) {
  return new $.WorkerContextEvents(_ptr);
};

$._Timer$repeating = function(milliSeconds, callback) {
  var t1 = new $._Timer(false, null);
  t1._Timer$repeating$2(milliSeconds, callback);
  return t1;
};

$._Timer$ = function(milliSeconds, callback) {
  var t1 = new $._Timer(true, null);
  t1._Timer$2(milliSeconds, callback);
  return t1;
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$.RegExp_RegExp = function(pattern, ignoreCase, multiLine) {
  return $.JSSyntaxRegExp$(pattern, ignoreCase, multiLine);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$._ElementAttributeMap$ = function(_element) {
  return new $._ElementAttributeMap(_element);
};

$._JsSerializer$0 = function() {
  var t1 = new $._JsSerializer0(0, $._MessageTraverserVisitedMap$0());
  t1._JsSerializer$0();
  return t1;
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$._MessageTraverserVisitedMap$0 = function() {
  return new $._MessageTraverserVisitedMap0();
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$0());
  t1._JsCopier$0();
  return t1;
};

$.EventSourceEvents$ = function(_ptr) {
  return new $.EventSourceEvents(_ptr);
};

$._HashSetImpl$ = function() {
  var t1 = new $._HashSetImpl(null);
  t1._HashSetImpl$0();
  return t1;
};

$.Date_Date$now = function() {
  return $._DateImpl$now();
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $._DateImpl$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$._HashSetIterator$ = function(set_) {
  var t1 = new $._HashSetIterator(set_._backingMap._keys, -1);
  t1._HashSetIterator$1(set_);
  return t1;
};

$._PendingSendPortFinder$ = function() {
  var t1 = $._MessageTraverserVisitedMap$0();
  t1 = new $._PendingSendPortFinder([], t1);
  t1._PendingSendPortFinder$0();
  return t1;
};

$.FileReaderEvents$ = function(_ptr) {
  return new $.FileReaderEvents(_ptr);
};

$._ReceivePortImpl$ = function() {
  var t1 = $._ReceivePortImpl__nextFreeId;
  $._ReceivePortImpl__nextFreeId = $.add(t1, 1);
  t1 = new $._ReceivePortImpl(t1, null);
  t1._ReceivePortImpl$0();
  return t1;
};

$.Futures_wait = function(futures) {
  var t1, completer, result, values, i, future;
  t1 = {};
  if (typeof futures !== 'string' && (typeof futures !== 'object' || futures === null || futures.constructor !== Array && !futures.is$JavaScriptIndexingBehavior()))
    return $.Futures_wait$bailout(1, futures, t1);
  if ($.getInterceptor(futures).get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC35);
  completer = $.Completer_Completer();
  result = completer.get$future();
  t1.remaining_1 = futures.length;
  values = $.List_List(futures.length);
  for (i = 0; i < futures.length; ++i) {
    future = futures[i];
    future.then$1(new $.Futures_wait_anon(i, t1, result, completer, values));
    future.handleException$1(new $.Futures_wait_anon0(future, result, completer));
  }
  return result;
};

$._LocalSendPortSync$_internal = function(_receivePort) {
  return new $._LocalSendPortSync(_receivePort);
};

$.FileWriterEvents$ = function(_ptr) {
  return new $.FileWriterEvents(_ptr);
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$());
};

$.ScriptElement_ScriptElement = function() {
  return $.document().$$dom_createElement$1("script");
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(false, null, null, null, false, false, [], [], []);
};

$._FutureImpl__FutureImpl$immediate = function(value) {
  var res = $._FutureImpl$();
  res._setValue$1(value);
  return res;
};

$._JsSendPortSync$ = function(_id) {
  return new $._JsSendPortSync(_id);
};

$._RemoteSendPortSync__call = function(isolateId, portId, message) {
  var t1, target, source, listener, t2;
  t1 = {};
  target = "dart-port-" + $.S(isolateId) + "-" + $.S(portId);
  source = target + "-result";
  t1.result_1 = null;
  listener = new $._RemoteSendPortSync__call_anon(t1);
  t2 = $.index($.window().get$on(), source);
  $.getInterceptor(t2).add$1(t2, listener);
  $._dispatchEvent(target, [source, message]);
  $.index($.window().get$on(), source).remove$1(listener);
  return t1.result_1;
};

$._RemoteSendPortSync$ = function(_isolateId, _portId) {
  return new $._RemoteSendPortSync(_isolateId, _portId);
};

$.FutureAlreadyCompleteException$ = function() {
  return new $.FutureAlreadyCompleteException();
};

$.WebSocketEvents$ = function(_ptr) {
  return new $.WebSocketEvents(_ptr);
};

$.JSON_parse = function(json) {
  return $._JsonParser$(json).parseToplevel$0();
};

$.JSON_stringify = function(object) {
  return $._JsonStringifier_stringify(object);
};

$.FutureUnhandledException$ = function(source, stackTrace) {
  return new $.FutureUnhandledException(source, stackTrace);
};

$._CustomEventFactoryProvider_createCustomEvent = function(type, canBubble, cancelable, detail) {
  var e = $.document().$$dom_createEvent$1("CustomEvent");
  e.$$dom_initCustomEvent$4(type, canBubble, cancelable, detail);
  return e;
};

$._JsonStringifier$ = function(sb) {
  return new $._JsonStringifier(sb, []);
};

$._JsonStringifier_stringify = function(object) {
  var output = $.StringBuffer_StringBuffer("");
  $._JsonStringifier$(output).stringifyValue$1(object);
  return $.getInterceptor(output).toString$0(output);
};

$._JsonStringifier_escape = function(sb, s) {
  var length$, charCodes, needsEscape, i, charCode, t1, t2;
  length$ = $.getInterceptor(s).get$length(s);
  charCodes = $.List_List(null);
  for (needsEscape = false, i = 0; $.ltB(i, length$); ++i) {
    charCode = $.getInterceptor(s).charCodeAt$1(s, i);
    if ($.ltB(charCode, 32)) {
      $.getInterceptor(charCodes).add$1(charCodes, 92);
      switch (charCode) {
        case 8:
          $.getInterceptor(charCodes).add$1(charCodes, 98);
          break;
        case 9:
          $.getInterceptor(charCodes).add$1(charCodes, 116);
          break;
        case 10:
          $.getInterceptor(charCodes).add$1(charCodes, 110);
          break;
        case 12:
          $.getInterceptor(charCodes).add$1(charCodes, 102);
          break;
        case 13:
          $.getInterceptor(charCodes).add$1(charCodes, 114);
          break;
        default:
          $.getInterceptor(charCodes).add$1(charCodes, 117);
          t1 = $.getInterceptor(charCodes);
          t2 = $.and($.shr(charCode, 12), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          t1.add$1(charCodes, t2);
          t2 = $.getInterceptor(charCodes);
          t1 = $.and($.shr(charCode, 8), 15);
          if ($.ltB(t1, 10)) {
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            t1 = 48 + t1;
          } else {
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            t1 = 87 + t1;
          }
          t2.add$1(charCodes, t1);
          t1 = $.getInterceptor(charCodes);
          t2 = $.and($.shr(charCode, 4), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          t1.add$1(charCodes, t2);
          t2 = $.getInterceptor(charCodes);
          t1 = $.and(charCode, 15);
          if ($.ltB(t1, 10)) {
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            t1 = 48 + t1;
          } else {
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            t1 = 87 + t1;
          }
          t2.add$1(charCodes, t1);
          break;
      }
      needsEscape = true;
    } else if ($.eqB(charCode, 34) || $.eqB(charCode, 92)) {
      $.getInterceptor(charCodes).add$1(charCodes, 92);
      $.getInterceptor(charCodes).add$1(charCodes, charCode);
      needsEscape = true;
    } else
      $.getInterceptor(charCodes).add$1(charCodes, charCode);
  }
  t1 = $.getInterceptor(sb);
  t1.add$1(sb, needsEscape ? $.String_String$fromCharCodes(charCodes) : s);
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.WorkerEvents$ = function(_ptr) {
  return new $.WorkerEvents(_ptr);
};

$.FutureNotCompleteException$ = function() {
  return new $.FutureNotCompleteException();
};

$.JsonUnsupportedObjectError$ = function(unsupportedObject) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, null);
};

$.JsonUnsupportedObjectError$withCause = function(unsupportedObject, cause) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, cause);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$._JsDeserializer$0 = function() {
  return new $._JsDeserializer0(null);
};

$._JsonParser$ = function(json) {
  var t1 = new $._JsonParser(json, $.getInterceptor(json).get$length(json), 0);
  t1._JsonParser$1(json);
  return t1;
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.HttpRequestEvents$ = function(_ptr) {
  return new $.HttpRequestEvents(_ptr);
};

$._JsSerializer$ = function() {
  return new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
};

$.HttpRequestUploadEvents$ = function(_ptr) {
  return new $.HttpRequestUploadEvents(_ptr);
};

$.Util_getHashCode = function(source) {
  var t1, hash, t2, next, hash0, hash1;
  $.requireArgumentNotNull(source, "source");
  for (t1 = $.getInterceptor(source).iterator$0(source), hash = 0; t1.get$hasNext() === true; hash = hash1) {
    t2 = t1.next$0();
    next = t2 == null ? 0 : $.getInterceptor(t2).get$hashCode(t2);
    if (typeof next !== 'number')
      throw $.iae(next);
    hash0 = 536870911 & hash + next;
    hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.NullArgumentError$ = function(argument) {
  var t1 = new $.NullArgumentError(argument, "cannot be null");
  t1.DetailedArgumentError$2(argument, "cannot be null");
  return t1;
};

$.DetailedArgumentError$ = function(argument, details) {
  var t1 = new $.DetailedArgumentError(argument, details);
  t1.DetailedArgumentError$2(argument, details);
  return t1;
};

$.InvalidOperationError$ = function(message) {
  return new $.InvalidOperationError(message);
};

$.IDBDatabaseEvents$ = function(_ptr) {
  return new $.IDBDatabaseEvents(_ptr);
};

$._Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.getInterceptor(a).get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  var end, i;
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if ($.ltB(start, 0))
    throw $.$$throw($.RangeError$value(start));
  end = $.add(start, length$);
  if ($.gtB(end, $.getInterceptor(a).get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; $.ltB(i, end); i = $.add(i, 1))
    $.getInterceptor(accumulator).add$1(accumulator, $.index(a, i));
  return accumulator;
};

$.RetainedUtil__hitTest$bailout = function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      length$ = env3;
      hits = env2;
      point = env1;
      element = env0;
      break;
    case 2:
      length$ = env4;
      point = env3;
      i = env2;
      hits = env1;
      element = env0;
      break;
    case 3:
      t1 = env5;
      i = env4;
      hits = env3;
      length$ = env2;
      point = env1;
      element = env0;
      break;
  }
  switch (state0) {
    case 0:
      point = $.RetainedUtil_transformPointGlobalToLocal(element, point);
      bounds = $.Box$(0, 0, element.get$width(), element.get$height());
      hits = $.List_List(null);
    default:
      var point, bounds, hits, length$, element, i, t1;
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && $.getInterceptor(bounds).contains$1(bounds, point) === true)
        switch (state0) {
          case 0:
          default:
            if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof element === 'object' && element !== null && !!element.is$ParentElement)
              switch (state0) {
                case 0:
                  length$ = element.get$visualChildCount();
                case 1:
                  state0 = 0;
                  i = 0;
                default:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          hits = $.RetainedUtil__hitTest(element.getVisualChild$1($.sub($.sub(length$, 1), i)), point);
                        case 2:
                          state0 = 0;
                          t1 = $.getInterceptor(hits).get$length(hits);
                        case 3:
                          state0 = 0;
                          if ($.gtB(t1, 0))
                            break L0;
                          ++i;
                      }
                  element = element;
              }
            $.getInterceptor(hits).add$1(hits, element);
        }
      return hits;
  }
};

$.Strings__toJsStringArray$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      strings = env0;
      break;
    case 2:
      length$ = env1;
      strings = env0;
      break;
    case 3:
      length$ = env2;
      array = env1;
      strings = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.checkNull(strings);
      length$ = $.getInterceptor(strings).get$length(strings);
    case 2:
      state0 = 0;
    case 3:
      var strings, length$, i, string, array;
      if (state0 === 0 && $.isJsArray(strings)) {
        for (i = 0; $.ltB(i, length$); ++i) {
          string = $.index(strings, i);
          if (!(typeof string === 'string'))
            throw $.$$throw($.ArgumentError$(string));
        }
        array = strings;
      } else
        switch (state0) {
          case 0:
            array = $.List_List(length$);
          case 3:
            state0 = 0;
            for (i = 0; $.ltB(i, length$); ++i) {
              string = $.index(strings, i);
              if (!(typeof string === 'string'))
                throw $.$$throw($.ArgumentError$(string));
              $.indexSet(array, i, string);
            }
        }
      return array;
  }
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.indexSet(dst, j, src[i]);
    }
  else
    for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.indexSet(dst, j, src[i]);
    }
};

$.Futures_wait$bailout = function(state0, futures, t1) {
  var completer, result, values, i, future;
  if ($.getInterceptor(futures).get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC35);
  completer = $.Completer_Completer();
  result = completer.get$future();
  t1.remaining_1 = $.getInterceptor(futures).get$length(futures);
  values = $.List_List($.getInterceptor(futures).get$length(futures));
  for (i = 0; $.ltB(i, $.getInterceptor(futures).get$length(futures)); ++i) {
    future = $.index(futures, i);
    future.then$1(new $.Futures_wait_anon(i, t1, result, completer, values));
    future.handleException$1(new $.Futures_wait_anon0(future, result, completer));
  }
  return result;
};

$.listInsertRange$bailout = function(state0, receiver, start, length$, initialValue) {
  var receiverLength, t1, t2, i;
  if ($.eqB(length$, 0))
    return;
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + length$;
  $.getInterceptor(receiver).set$length(receiver, t1);
  t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (i = start; i < t2; ++i)
      $.indexSet(receiver, i, initialValue);
  $.getInterceptor(receiver).set$length(receiver, t1);
};

$._Sort_insertionSort_$bailout = function(state0, a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.gtB(compare.call$2(a[t1], el), 0);
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= a.length)
        throw $.ioore(j0);
      $.indexSet(a, j, a[j0]);
      j = j0;
    }
    $.indexSet(a, j, el);
  }
};

$._Sort__dualPivotQuicksort$bailout = function(state0, a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, less, great, pivots_are_equal, k, ak, comp, t2, great0, less0;
  sixth = $.tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    t0 = el1;
    el1 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el1;
    el1 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el1;
    el1 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  $.indexSet(a, index1, el1);
  $.indexSet(a, index3, el3);
  $.indexSet(a, index5, el5);
  if (left < 0 || left >= a.length)
    throw $.ioore(left);
  $.indexSet(a, index2, a[left]);
  if (right < 0 || right >= a.length)
    throw $.ioore(right);
  $.indexSet(a, index4, a[right]);
  less = left + 1;
  great = right - 1;
  pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      if ($.eqB(comp, 0))
        continue;
      if ($.ltB(comp, 0)) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.indexSet(a, k, a[less]);
          $.indexSet(a, less, ak);
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else {
            t1 = $.ltB(comp, 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less >= t2)
                throw $.ioore(less);
              $.indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.indexSet(a, less, a[great]);
              $.indexSet(a, great, ak);
              less = less0;
              great = great0;
              break;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              $.indexSet(a, k, a[great]);
              $.indexSet(a, great, ak);
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.indexSet(a, k, a[less]);
          $.indexSet(a, less, ak);
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.gtB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less >= t2)
                throw $.ioore(less);
              $.indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.indexSet(a, less, a[great]);
              $.indexSet(a, great, ak);
              less = less0;
              great = great0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              $.indexSet(a, k, a[great]);
              $.indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
  t1 = less - 1;
  if (t1 >= a.length)
    throw $.ioore(t1);
  $.indexSet(a, left, a[t1]);
  $.indexSet(a, t1, el2);
  t1 = great + 1;
  if (t1 < 0 || t1 >= a.length)
    throw $.ioore(t1);
  $.indexSet(a, right, a[t1]);
  $.indexSet(a, t1, el4);
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!$.eqB(compare.call$2(a[less], el2), 0))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!$.eqB(compare.call$2(a[great], el4), 0))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.indexSet(a, k, a[less]);
          $.indexSet(a, less, ak);
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.eqB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less >= t2)
                throw $.ioore(less);
              $.indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.indexSet(a, less, a[great]);
              $.indexSet(a, great, ak);
              less = less0;
              great = great0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              $.indexSet(a, k, a[great]);
              $.indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$.Field_Field$bailout = function(state0, bombCount, cols, rows, seed) {
  var squares, rnd, i, index;
  squares = $.List_List(null);
  $.getInterceptor(squares).insertRange$3(squares, 0, $.mul(rows, cols), false);
  rnd = $.Random_Random(seed);
  for (i = 0; $.ltB(i, bombCount); ++i) {
    do {
      index = rnd.nextInt$1(squares.length);
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= squares.length)
        throw $.ioore(index);
    } while (squares[index] === true);
    squares[index] = true;
  }
  return $.Field$_internal(bombCount, cols, $.ReadOnlyCollection$(squares));
};

$._onKeyDown.call$1 = $._onKeyDown;
$._onKeyDown.$name = "_onKeyDown";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$._timerFactory.call$3 = $._timerFactory;
$._timerFactory.$name = "_timerFactory";
$._Audio__getAudioPath.call$1 = $._Audio__getAudioPath;
$._Audio__getAudioPath.$name = "_Audio__getAudioPath";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$._serialize.call$1 = $._serialize;
$._serialize.$name = "_serialize";
$._deserialize.call$1 = $._deserialize;
$._deserialize.$name = "_deserialize";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$._onProgress.call$1 = $._onProgress;
$._onProgress.$name = "_onProgress";
$._onLoaded.call$1 = $._onLoaded;
$._onLoaded.$name = "_onLoaded";
$.Comparable_compare.call$2 = $.Comparable_compare;
$.Comparable_compare.$name = "Comparable_compare";
$._onPopupClick.call$1 = $._onPopupClick;
$._onPopupClick.$name = "_onPopupClick";
Isolate.$finishClasses($$);
$$ = {};
$.CTC4 = new Isolate.$isolateProperties.JSDouble();
$.CTC1 = new Isolate.$isolateProperties.JSString();
$.CTC37 = new Isolate.$isolateProperties.Returns("num|String|bool|=List|=Object|Blob|File|ArrayBuffer|ArrayBufferView");
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC35 = Isolate.makeConstantList([]);
$.CTC12 = new Isolate.$isolateProperties.EventArgs();
$.CTC38 = new Isolate.$isolateProperties.Creates("=List");
$.CTC39 = new Isolate.$isolateProperties.Returns("_NodeList");
$.CTC40 = new Isolate.$isolateProperties.Creates("_NodeList");
$.CTC25 = new Isolate.$isolateProperties.ConstantMap(0, {}, Isolate.$isolateProperties.CTC35);
$.CTC2 = new Isolate.$isolateProperties.JSArray();
$.CTC41 = new Isolate.$isolateProperties.Creates("num|String|bool|=List|=Object|Blob|File|ArrayBuffer|ArrayBufferView");
$.CTC36 = new Isolate.$isolateProperties.Coordinate(0, 0);
$.CTC15 = new Isolate.$isolateProperties.Coordinate(32, 32);
$.CTC16 = new Isolate.$isolateProperties.Size(2048, 1536);
$.CTC18 = new Isolate.$isolateProperties.Size(100, 100);
$.CTC31 = Isolate.makeConstantList(["game_board_center", "number_one", "number_two", "number_three", "number_four", "number_five", "number_six", "number_seven", "number_eight"]);
$.CTC17 = new Isolate.$isolateProperties.Vector(352, 96);
$.CTC28 = new Isolate.$isolateProperties.Vector(-88, -88);
$.CTC29 = new Isolate.$isolateProperties.SquareState("safe");
$.CTC30 = new Isolate.$isolateProperties.Vector(-472, -348);
$.CTC = Isolate.makeConstantList(["Pop0", "Pop1", "Pop2", "Pop3", "Pop4", "Pop5", "Pop6", "Pop7", "Pop8", "Bomb0", "Bomb1", "Bomb2", "Bomb3", "Bomb4", "throw", "flag", "unflag", "click", "win"]);
$.CTC42 = new Isolate.$isolateProperties.Creates("IDBDatabase");
$.CTC27 = new Isolate.$isolateProperties.SquareState("bomb");
$.CTC0 = new Isolate.$isolateProperties.NullThrownError();
$.CTC14 = new Isolate.$isolateProperties.InvalidOperationError("The input sequence contains more than one element.");
$.CTC19 = new Isolate.$isolateProperties.GameState("reset");
$.CTC32 = Isolate.makeConstantList(["balloon_pieces_a.png", "balloon_pieces_b.png", "balloon_pieces_c.png", "balloon_pieces_d.png"]);
$.CTC10 = new Isolate.$isolateProperties._Random();
$.CTC22 = new Isolate.$isolateProperties.SquareState("flagged");
$.CTC43 = new Isolate.$isolateProperties.Creates("IDBRequest");
$.CTC44 = new Isolate.$isolateProperties.Returns("IDBRequest");
$.CTC20 = new Isolate.$isolateProperties.SquareState("hidden");
$.CTC26 = new Isolate.$isolateProperties.GameState("started");
$.CTC13 = new Isolate.$isolateProperties.InvalidOperationError("The input sequence is empty.");
$.CTC45 = new Isolate.$isolateProperties.Returns("=List|=Object|num|String");
$.CTC46 = new Isolate.$isolateProperties.Creates("=List|=Object|num|String");
$.CTC9 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC23 = new Isolate.$isolateProperties.GameState("won");
$.CTC24 = new Isolate.$isolateProperties.GameState("lost");
$.CTC34 = new Isolate.$isolateProperties.Object();
$.CTC33 = new Isolate.$isolateProperties.InvalidOperationError("Input contained a null item");
$.CTC47 = new Isolate.$isolateProperties.Creates("ArrayBuffer|Blob|Document|=Object|=List|String|num");
$.CTC48 = new Isolate.$isolateProperties._Protected();
$.CTC11 = new Isolate.$isolateProperties._UndefinedValue();
$.CTC21 = new Isolate.$isolateProperties.SquareState("revealed");
$.CTC8 = new Isolate.$isolateProperties.ObjectInterceptor();
$.CTC7 = new Isolate.$isolateProperties.JSFunction();
$.CTC5 = new Isolate.$isolateProperties.JSBool();
$.CTC49 = new Isolate.$isolateProperties.Creates("Null");
$.CTC6 = new Isolate.$isolateProperties.JSNull();
$.CTC3 = new Isolate.$isolateProperties.JSInt();
$._serializedScriptValue = "num|String|bool|=List|=Object|Blob|File|ArrayBuffer|ArrayBufferView";
$._annotation_Creates_SerializedScriptValue = Isolate.$isolateProperties.CTC41;
$._annotation_Returns_SerializedScriptValue = Isolate.$isolateProperties.CTC37;
$._idbKey = "=List|=Object|num|String";
$._annotation_Creates_IDBKey = Isolate.$isolateProperties.CTC46;
$._annotation_Returns_IDBKey = Isolate.$isolateProperties.CTC45;
$._Audio__audioNames = Isolate.$isolateProperties.CTC;
$.ScoreElement__bombsLeftStr = "BOMBS LEFT:";
$.ScoreElement__valueOffset = 15;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CTC9;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$._DateImpl__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$._getTypeNameOf = null;
$.SquareState_hidden = Isolate.$isolateProperties.CTC20;
$.SquareState_revealed = Isolate.$isolateProperties.CTC21;
$.SquareState_flagged = Isolate.$isolateProperties.CTC22;
$.PI = 3.141592653589793;
$.SquareState_bomb = Isolate.$isolateProperties.CTC27;
$.SquareState_safe = Isolate.$isolateProperties.CTC29;
$.SquareElement__size = 80;
$.SquareElement__balloonBits = Isolate.$isolateProperties.CTC32;
$.SquareElement__numberMap = Isolate.$isolateProperties.CTC31;
$.Duration_MILLISECONDS_PER_SECOND = 1000;
$.Duration_SECONDS_PER_MINUTE = 60;
$.Duration_MINUTES_PER_HOUR = 60;
$.Duration_HOURS_PER_DAY = 24;
$.Duration_MILLISECONDS_PER_MINUTE = 60000;
$.Duration_MILLISECONDS_PER_HOUR = 3600000;
$.Duration_MILLISECONDS_PER_DAY = 86400000;
$.MIRROR_OPT_IN_MESSAGE = "\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n";
$.Primitives_hashCodeSeed = 0;
$.Primitives_mirrorsEnabled = false;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.Property_Undefined = Isolate.$isolateProperties.CTC11;
$._ReceivePortImpl__nextFreeId = 1;
$.JSInvocationMirror_METHOD = 0;
$.JSInvocationMirror_GETTER = 1;
$.JSInvocationMirror_SETTER = 2;
$._transparentTextureName = "images/transparent_animated.png";
$._opaqueTextureName = "images/dart_opaque_01.jpg";
$._transparentStaticTexture = "images/transparent_static.png";
$._loadingBarPxWidth = 398;
$._loadingBar = null;
$._imageLoader = null;
$._audio = null;
$.GameElement__edgeOffset = 32;
$.GameElement__backgroundSize = Isolate.$isolateProperties.CTC16;
$.GameElement__backgroundHoleSize = 1344;
$.GameElement__backgroundEdgeOffset = 256;
$.GameElement__boardOffset = Isolate.$isolateProperties.CTC17;
$.GameElement__popExplodeAnimationOffset = Isolate.$isolateProperties.CTC28;
$.GameElement__popAnimationHitFrame = 12;
$.GameElement__dartAnimationOffset = Isolate.$isolateProperties.CTC30;
$.ReceivePortSync__portMap = null;
$.ReceivePortSync__portIdCount = null;
$.ReceivePortSync__cachedIsolateId = null;
$.$protected = Isolate.$isolateProperties.CTC48;
$._cachedBrowserPrefix = null;
$._botHelperRandom = null;
$.GameAudio_WIN = "win";
$.GameAudio_CLICK = "click";
$.GameAudio_POP = "Pop";
$.GameAudio_FLAG = "flag";
$.GameAudio_UNFLAG = "unflag";
$.GameAudio_BOMB = "Bomb";
$.GameAudio_THROW_DART = "throw";
$._JsonParser_BACKSPACE = 8;
$._JsonParser_TAB = 9;
$._JsonParser_NEW_LINE = 10;
$.GlobalId__globalId = 0;
$._JsonParser_CARRIAGE_RETURN = 13;
$._JsonParser_SPACE = 32;
$._jsPortSync = null;
$._JsonParser_QUOTE = 34;
$._jsPortCreate = null;
$._JsonParser_PLUS = 43;
$._jsPortDebug = null;
$._JsonParser_COMMA = 44;
$.GameState_reset = Isolate.$isolateProperties.CTC19;
$._JsonParser_MINUS = 45;
$._JsonParser_DOT = 46;
$.GameState_won = Isolate.$isolateProperties.CTC23;
$._JsonParser_SLASH = 47;
$.GameState_lost = Isolate.$isolateProperties.CTC24;
$._jsExitJavaScriptScope = null;
$._jsEnterJavaScriptScope = null;
$._JsonParser_CHAR_0 = 48;
$._JsonParser_CHAR_2 = 50;
$._JsonParser_CHAR_1 = 49;
$._JsonParser_CHAR_3 = 51;
$._JsonParser_CHAR_4 = 52;
$._dartExitDartScope = null;
$._JsonParser_FORM_FEED = 12;
$._JsonParser_CHAR_7 = 55;
$._JsonParser_CHAR_6 = 54;
$._JsonParser_CHAR_5 = 53;
$._JsonParser_CHAR_8 = 56;
$._JsonParser_CHAR_9 = 57;
$._JsonParser_COLON = 58;
$._jsPortEquals = null;
$._JsonParser_CHAR_CAPITAL_E = 69;
$._JsonParser_LBRACKET = 91;
$._jsPortConvert = null;
$._JsonParser_BACKSLASH = 92;
$._JsonParser_RBRACKET = 93;
$._JsonParser_CHAR_B = 98;
$._jsGlobalize = null;
$._JsonParser_CHAR_E = 101;
$._JsonParser_CHAR_F = 102;
$._JsonParser_CHAR_R = 114;
$._JsonParser_CHAR_N = 110;
$._JsonParser_CHAR_T = 116;
$._jsInvalidate = null;
$._JsonParser_CHAR_U = 117;
$._JsonParser_LBRACE = 123;
$._JsonParser_RBRACE = 125;
$._localNextElementId = 0;
$._JsonParser_STRING_LITERAL = 34;
$._JsonParser_NULL_LITERAL = 110;
$._JsonParser_NUMBER_LITERAL = 45;
$._JsonParser_FALSE_LITERAL = 102;
$._DART_ID = "data-dart_id";
$._JsonParser_TRUE_LITERAL = 116;
$._DART_TEMPORARY_ATTACHED = "data-dart_temporary_attached";
$._JsonParser_WHITESPACE = 32;
$._JsonParser_LAST_ASCII = 125;
$._jsPortInstanceof = null;
$._JsonParser_NULL_STRING = "null";
$._JsonParser_TRUE_STRING = "true";
$._JsonParser_FALSE_STRING = "false";
$._JsonParser_tokens = null;
$._dartEnterDartScope = null;
$._Sort__INSERTION_SORT_THRESHOLD = 32;
$.GameState_started = Isolate.$isolateProperties.CTC26;
$.ResourceLoader_StateUnloaded = "unloaded";
$.ResourceLoader_StateLoading = "loading";
$.ResourceLoader_StateLoaded = "loaded";
$.ResourceLoader__defaultSize = 2000;
$._TimerFactory__factory = null;
Isolate.$lazy($, 'isMouseOverProperty', 'Mouse_isMouseOverProperty', 'get$Mouse_isMouseOverProperty', function() {
  return $.Property$("IsMouseOver", false);
});
Isolate.$lazy($, 'isMouseDirectlyOverProperty', 'Mouse_isMouseDirectlyOverProperty', 'get$Mouse_isMouseDirectlyOverProperty', function() {
  return $.Property$("IsMouseDirectlyOver", false);
});
Isolate.$lazy($, '_stageMouseCacheProperty', 'Mouse__stageMouseCacheProperty', 'get$Mouse__stageMouseCacheProperty', function() {
  return $.Property$("_stageMouseCacheProperty", null);
});
Isolate.$lazy($, '_clickManagerProperty', 'ClickManager__clickManagerProperty', 'get$ClickManager__clickManagerProperty', function() {
  return $.Property$("_clickManager", null);
});
Isolate.$lazy($, '_titleClickedEventHandle', '_titleClickedEventHandle', 'get$_titleClickedEventHandle', function() {
  return $.EventHandle$();
});
Isolate.$lazy($, 'titleClickedEvent', 'titleClickedEvent', 'get$titleClickedEvent', function() {
  return $.get$_titleClickedEventHandle();
});
Isolate.$lazy($, '_isClickableProperty', 'ClickManager__isClickableProperty', 'get$ClickManager__isClickableProperty', function() {
  return $.Property$("isClickable", false);
});
Isolate.$lazy($, '_clickEvent', 'ClickManager__clickEvent', 'get$ClickManager__clickEvent', function() {
  return $.AttachedEvent$("clickEvent");
});
Isolate.$lazy($, '_map', '_FunctionProxy__map', 'get$_FunctionProxy__map', function() {
  return $.Map_Map();
});
Isolate.$lazy($, '_mouseDownEvent', 'ClickManager__mouseDownEvent', 'get$ClickManager__mouseDownEvent', function() {
  return $.AttachedEvent$("mouseDown");
});
Isolate.$lazy($, '_proxiedObjectTable', '_proxiedObjectTable', 'get$_proxiedObjectTable', function() {
  return $._ProxiedObjectTable$();
});
Isolate.$lazy($, '_mouseUpEvent', 'ClickManager__mouseUpEvent', 'get$ClickManager__mouseUpEvent', function() {
  return $.AttachedEvent$("mouseUp");
});
Isolate.$lazy($, '_containerTransformProperty', 'Panel__containerTransformProperty', 'get$Panel__containerTransformProperty', function() {
  return $.Property$("panelTransform", null);
});
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", false, false);
});
Isolate.$lazy($, '_mouseMoveEvent', 'ClickManager__mouseMoveEvent', 'get$ClickManager__mouseMoveEvent', function() {
  return $.AttachedEvent$("mouseMove");
});
Isolate.$lazy($, '_mouseOutEvent', 'ClickManager__mouseOutEvent', 'get$ClickManager__mouseOutEvent', function() {
  return $.AttachedEvent$("mouseOut");
});
Isolate.$lazy($, '_audioEventHandle', 'GameAudio__audioEventHandle', 'get$GameAudio__audioEventHandle', function() {
  return $.EventHandle$();
});
Isolate.$lazy($, '_audioFormat', '_Audio__audioFormat', 'get$_Audio__audioFormat', function() {
  return $._Audio__getAudioFormat();
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''] || [];
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastCharCode = field.charCodeAt(len - 1);
    var needsAccessor = (lastCharCode & 63) >= 60;
    if (needsAccessor) {
      var needsGetter = (lastCharCode & 3) > 0;
      var needsSetter = (lastCharCode & 2) == 0;
      var renaming = (lastCharCode & 64) != 0;
      var accessorName = field = field.substring(0, len - 1);
      if (renaming) {
        var divider = field.indexOf(":");
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (needsGetter) {
        var getterString = "return this." + field + ";";
        prototype["get$" + accessorName] = new Function(getterString);
      }
      if (needsSetter) {
        var setterString = "this." + field + " = v;";
        prototype["set$" + accessorName] = new Function("v", setterString);
      }
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method !== '') {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$AnchorElement: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$Location: function() { return false; },
 is$List: function() { return false; },
 is$File: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$Blob: function() { return false; },
 is$ImageData: function() { return false; },
 is$Collection: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 is$Map: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$IDBKeyRange: function() { return false; },
 is$_FileList: function() { return false; },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$Element: function() { return false; }
});

$.$defineNativeClass('AbstractWorker', {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.AbstractWorkerEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLAnchorElement', {"": ["hash>", "href>", "name>", "type<"],
 toString$0: function() {
  return this.toString();
},
 is$AnchorElement: function() { return true; },
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebKitAnimation', {"": ["duration>", "name>"]
});

$.$defineNativeClass('HTMLAppletElement', {"": ["height=", "name>", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', {"": ["hash>", "href>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ArrayBuffer', {
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', {
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', {"": ["name>", "value="]
});

$.$defineNativeClass('AudioBuffer', {"": ["duration>", "length>"]
});

$.$defineNativeClass('AudioBufferSourceNode', {"": ["buffer<"],
 start$3: function(when, grainOffset, grainDuration) {
  var t1, t2;
  t1 = $ === grainOffset;
  if (t1)
    grainOffset = null;
  t1 = !t1;
  t2 = $ === grainDuration;
  if (t2)
    grainDuration = null;
  t2 = !t2;
  if (!!this.start)
    if (t2)
      this.start(when, grainOffset, grainDuration);
    else if (t1)
      this.start(when, grainOffset);
    else
      this.start(when);
  else if (t2)
    this.noteOn(when, grainOffset, grainDuration);
  else if (t1)
    this.noteOn(when, grainOffset);
  else
    this.noteOn(when);
},
 start$1: function(when) {
  return this.start$3(when,$,$)
}
});

$.$defineNativeClass('AudioContext', {"": ["destination>"],
 get$on: function() {
  return $.AudioContextEvents$(this);
},
 createBufferSource$0: function() {
  return this.createBufferSource();
},
 decodeAudioData$3: function(audioData, successCallback, errorCallback) {
  return this.decodeAudioData(audioData,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
}
});

$.$defineNativeClass('AudioNode', {"": ["context>"],
 connect$3: function(destination, output, input) {
  return this.connect(destination,output,input);
}
});

$.$defineNativeClass('AudioParam', {"": ["name>", "value="]
});

$.$defineNativeClass('HTMLBRElement', {
 clear$0: function() { return this.clear.call$0(); },
 clear$1: function(arg0) { return this.clear.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseElement', {"": ["href>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', {"": ["size="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('BatteryManager', {
 get$on: function() {
  return $.BatteryManagerEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('BeforeLoadEvent', {"": ["url>"]
});

$.$defineNativeClass('BiquadFilterNode', {"": ["type<"]
});

$.$defineNativeClass('Blob', {"": ["size>"],
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', {
 get$on: function() {
  return $.BodyElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', {"": ["name>", "type<", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('CSSFontFaceRule', {"": ["style>"]
});

$.$defineNativeClass('CSSImportRule', {"": ["href>"]
});

$.$defineNativeClass('WebKitCSSKeyframeRule', {"": ["style>"]
});

$.$defineNativeClass('WebKitCSSKeyframesRule', {"": ["name>"]
});

$.$defineNativeClass('WebKitCSSMatrix', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSPageRule', {"": ["style>"]
});

$.$defineNativeClass('CSSStyleDeclaration', {"": ["length>"],
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : "";
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 get$clear: function() {
  return this.getPropertyValue$1("clear");
},
 clear$0: function() { return this.get$clear().call$0(); },
 clear$1: function(arg0) { return this.get$clear().call$1(arg0); },
 get$clip: function() {
  return this.getPropertyValue$1("clip");
},
 clip$0: function() { return this.get$clip().call$0(); },
 set$cursor: function(value) {
  this.setProperty$3("cursor", value, "");
},
 set$display: function(value) {
  this.setProperty$3("display", value, "");
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + "filter");
},
 filter$1: function(arg0) { return this.get$filter().call$1(arg0); },
 filter$3: function(arg0, arg1, arg2) { return this.get$filter().call$3(arg0, arg1, arg2); },
 set$font: function(value) {
  this.setProperty$3("font", value, "");
},
 get$height: function() {
  return this.getPropertyValue$1("height");
},
 set$height: function(value) {
  this.setProperty$3("height", value, "");
},
 get$left: function() {
  return this.getPropertyValue$1("left");
},
 get$resize: function() {
  return this.getPropertyValue$1("resize");
},
 get$size: function() {
  return this.getPropertyValue$1("size");
},
 set$size: function(value) {
  this.setProperty$3("size", value, "");
},
 set$src: function(value) {
  this.setProperty$3("src", value, "");
},
 set$textAlign: function(value) {
  this.setProperty$3("text-align", value, "");
},
 get$top: function() {
  return this.getPropertyValue$1("top");
},
 get$transform: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + "transform");
},
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.get$transform().call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 get$width: function() {
  return this.getPropertyValue$1("width");
},
 set$width: function(value) {
  this.setProperty$3("width", value, "");
}
});

$.$defineNativeClass('CSSStyleRule', {"": ["style>"]
});

$.$defineNativeClass('HTMLCanvasElement', {"": ["height=", "width="],
 getContext$1: function(contextId) {
  return this.getContext(contextId);
},
 get$context2d: function() {
  return this.getContext$1("2d");
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('CanvasRenderingContext2D', {"": ["fillStyle<", "font<", "globalAlpha<", "textAlign<", "textBaseline<"],
 beginPath$0: function() {
  return this.beginPath();
},
 bezierCurveTo$6: function(cp1x, cp1y, cp2x, cp2y, x, y) {
  return this.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);
},
 clearRect$4: function(x, y, width, height) {
  return this.clearRect(x,y,width,height);
},
 clip$0: function() {
  return this.clip();
},
 closePath$0: function() {
  return this.closePath();
},
 drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
},
 drawImage$3: function(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y);
},
 fill$0: function() {
  return this.fill();
},
 fillRect$4: function(x, y, width, height) {
  return this.fillRect(x,y,width,height);
},
 fillText$4: function(text, x, y, maxWidth) {
  return this.fillText(text,x,y,maxWidth);
},
 fillText$3: function(text,x,y) {
  return this.fillText(text,x,y);
},
 measureText$1: function(text) {
  return this.measureText(text);
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 rect$4: function(x, y, width, height) {
  return this.rect(x,y,width,height);
},
 restore$0: function() {
  return this.restore();
},
 save$0: function() {
  return this.save();
},
 scale$2: function(sx, sy) {
  return this.scale(sx,sy);
},
 transform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.transform(m11,m12,m21,m22,dx,dy);
},
 translate$2: function(tx, ty) {
  return this.translate(tx,ty);
}
});

$.$defineNativeClass('CharacterData', {"": ["length>"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', {"": ["height>", "left>", "top>", "width>"]
});

Console = (typeof console == 'undefined' ? {} : console);
Console.error$1 = function(arg) {
  return this.error(arg);
};
Console.get$error = function() { return new $.BoundClosure(this, 'error$1'); };
$.$defineNativeClass('HTMLContentElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ConvolverNode', {"": ["buffer<"]
});

$.$defineNativeClass('CustomEvent', {"": ["detail>"],
 $$dom_initCustomEvent$4: function(typeArg, canBubbleArg, cancelableArg, detailArg) {
  return this.initCustomEvent(typeArg,canBubbleArg,cancelableArg,detailArg);
}
});

$.$defineNativeClass('HTMLDListElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DOMApplicationCache', {"": ["status>"],
 get$on: function() {
  return $.DOMApplicationCacheEvents$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); },
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 update$0: function() {
  return this.update();
}
});

$.$defineNativeClass('DOMError', {"": ["name>"]
});

$.$defineNativeClass('DOMException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMFileSystem', {"": ["name>"]
});

$.$defineNativeClass('DOMFileSystemSync', {"": ["name>"]
});

$.$defineNativeClass('MimeTypeArray', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Plugin', {"": ["length>", "name>"]
});

$.$defineNativeClass('PluginArray', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Selection', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMSettableTokenList', {"": ["value="]
});

$.$defineNativeClass('DOMTokenList', {"": ["length>"],
 contains$1: function(token) {
  return this.contains(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLDataListElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DataTransferItemList', {"": ["length>"],
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DedicatedWorkerContext', {
 get$on: function() {
  return $.DedicatedWorkerContextEvents$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('HTMLDetailsElement', {
 open$2: function(arg0, arg1) { return this.open.call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.open.call$3(arg0, arg1, arg2); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDirectoryElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDivElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Document', {"": ["documentElement>"],
 get$on: function() {
  return $.DocumentEvents$(this);
},
 get$$$dom_body: function() {
  return this.body;
},
 $$dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $$dom_createEvent$1: function(eventType) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_createEvent$1')) {
  {
  return this.createEvent(eventType);
}
  } else {
    return Object.prototype.$$dom_createEvent$1.call(this, eventType);
  }

},
 $$dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $$dom_getElementsByName$1: function(elementName) {
  return this.getElementsByName(elementName);
},
 $$dom_getElementsByTagName$1: function(tagname) {
  return this.getElementsByTagName(tagname);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 query$1: function(selectors) {
  if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", false, false).hasMatch$1(selectors) === true)
    return this.$$dom_getElementById$1($.getInterceptor(selectors).substring$1(selectors, 1));
  return this.$$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  var mutableMatches, len, copyOfMatches, t1, i;
  if ($.RegExp_RegExp("^\\[name=[\"'][^'\"]+['\"]\\]$", false, false).hasMatch$1(selectors) === true) {
    mutableMatches = this.$$dom_getElementsByName$1($.getInterceptor(selectors).substring$2(selectors, 7, selectors.length - 2));
    if (typeof mutableMatches !== 'string' && (typeof mutableMatches !== 'object' || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
      return this.queryAll$1$bailout(1, mutableMatches);
    len = mutableMatches.length;
    copyOfMatches = $.List_List(len);
    for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
      if (i >= t1)
        throw $.ioore(i);
      copyOfMatches[i] = mutableMatches[i];
    }
    return $._FrozenElementList$_wrap(copyOfMatches);
  } else if ($.RegExp_RegExp("^[*a-zA-Z0-9]+$", false, false).hasMatch$1(selectors) === true) {
    mutableMatches = this.$$dom_getElementsByTagName$1(selectors);
    if (typeof mutableMatches !== 'string' && (typeof mutableMatches !== 'object' || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
      return this.queryAll$1$bailout(3, mutableMatches);
    len = mutableMatches.length;
    copyOfMatches = $.List_List(len);
    for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
      if (i >= t1)
        throw $.ioore(i);
      copyOfMatches[i] = mutableMatches[i];
    }
    return $._FrozenElementList$_wrap(copyOfMatches);
  } else
    return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
},
 queryAll$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      mutableMatches = env0;
      break;
    case 2:
      len = env1;
      mutableMatches = env0;
      break;
    case 3:
      mutableMatches = env0;
      break;
    case 4:
      mutableMatches = env1;
      len = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      var mutableMatches, len, copyOfMatches, i, t1;
      if (state0 === 2 || state0 === 1 || state0 === 0 && $.RegExp_RegExp("^\\[name=[\"'][^'\"]+['\"]\\]$", false, false).hasMatch$1(selectors) === true)
        switch (state0) {
          case 0:
            mutableMatches = this.$$dom_getElementsByName$1($.getInterceptor(selectors).substring$2(selectors, 7, selectors.length - 2));
          case 1:
            state0 = 0;
            len = $.getInterceptor(mutableMatches).get$length(mutableMatches);
          case 2:
            state0 = 0;
            copyOfMatches = $.List_List(len);
            for (i = 0; $.ltB(i, len); ++i) {
              t1 = $.index(mutableMatches, i);
              if (i >= copyOfMatches.length)
                throw $.ioore(i);
              copyOfMatches[i] = t1;
            }
            return $._FrozenElementList$_wrap(copyOfMatches);
        }
      else
        switch (state0) {
          case 0:
          default:
            if (state0 === 4 || state0 === 3 || state0 === 0 && $.RegExp_RegExp("^[*a-zA-Z0-9]+$", false, false).hasMatch$1(selectors) === true)
              switch (state0) {
                case 0:
                  mutableMatches = this.$$dom_getElementsByTagName$1(selectors);
                case 3:
                  state0 = 0;
                  len = $.getInterceptor(mutableMatches).get$length(mutableMatches);
                case 4:
                  state0 = 0;
                  copyOfMatches = $.List_List(len);
                  for (i = 0; $.ltB(i, len); ++i) {
                    t1 = $.index(mutableMatches, i);
                    if (i >= copyOfMatches.length)
                      throw $.ioore(i);
                    copyOfMatches[i] = t1;
                  }
                  return $._FrozenElementList$_wrap(copyOfMatches);
              }
            else
              return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
        }
  }
}
});

$.$defineNativeClass('DocumentFragment', {
 get$elements: function() {
  return this.get$children();
},
 get$children: function() {
  if (this._children == null)
    this._children = $.FilteredElementList$(this);
  return this._children;
},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
},
 set$innerHTML: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$innerHTML')) {
  {
  var t1, e, nodes;
  t1 = this.get$nodes();
  $.getInterceptor(t1).clear$0(t1);
  e = $.Element_Element$tag("div");
  e.set$innerHTML(value);
  nodes = $.List_List$from(e.get$nodes());
  t1 = this.get$nodes();
  $.getInterceptor(t1).addAll$1(t1, nodes);
}
  } else {
    return Object.prototype.set$innerHTML.call(this, value);
  }

},
 get$translate: function() {
  return false;
},
 translate$2: function(arg0, arg1) { return this.get$translate().call$2(arg0, arg1); },
 get$id: function() {
  return "";
},
 get$parent: function() {
  return;
},
 get$attributes: function() {
  return $.CTC25;
},
 get$style: function() {
  return $.Element_Element$tag("div").get$style();
},
 click$0: function() {
},
 get$click: function() { return new $.BoundClosure0(this, 'click$0'); },
 get$on: function() {
  return $.ElementEvents$(this);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
}
});

$.$defineNativeClass('DocumentType', {"": ["name>"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('Element', {"": ["id>", "innerHTML<", "style>"],
 get$attributes: function() {
  return $._ElementAttributeMap$(this);
},
 get$elements: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$elements')) {
  {
  return this.get$children();
}
  } else {
    return Object.prototype.get$elements.call(this);
  }

},
 get$children: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$children')) {
  {
  return $._ChildrenElementList$_wrap(this);
}
  } else {
    return Object.prototype.get$children.call(this);
  }

},
 set$children: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$children')) {
  {
  var copy, children;
  copy = $.List_List$from(value);
  children = this.get$children();
  $.getInterceptor(children).clear$0(children);
  $.getInterceptor(children).addAll$1(children, copy);
}
  } else {
    return Object.prototype.set$children.call(this, value);
  }

},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.ElementEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 get$$$dom_children: function() {
  return this.children;
},
 translate$2: function(arg0, arg1) { return this.translate.call$2(arg0, arg1); },
 click$0: function() {
  return this.click();
},
 get$click: function() { return new $.BoundClosure0(this, 'click$0'); },
 get$$$dom_firstElementChild: function() {
  return this.firstElementChild;
},
 get$$$dom_lastElementChild: function() {
  return this.lastElementChild;
},
 $$dom_getAttribute$1: function(name) {
  return this.getAttribute(name);
},
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 $$dom_hasAttribute$1: function(name) {
  return this.hasAttribute(name);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 $$dom_removeAttribute$1: function(name) {
  return this.removeAttribute(name);
},
 $$dom_setAttribute$2: function(name, value) {
  return this.setAttribute(name,value);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {"": ["height=", "name>", "src<", "type<", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Entry', {"": ["name>"],
 moveTo$4: function(parent, name, successCallback, errorCallback) {
  return this.moveTo(parent,name,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 moveTo$2: function(parent$,name$) {
  return this.moveTo(parent$,name$);
},
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
}
});

$.$defineNativeClass('EntrySync', {"": ["name>"],
 moveTo$2: function(parent, name) {
  return this.moveTo(parent,name);
},
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('Event', {
 get$currentTarget: function() {
  return $._convertNativeToDart_EventTarget(this.get$_currentTarget());
},
 get$_currentTarget: function() {
  return this.currentTarget;
},
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.get$_target());
},
 get$_target: function() {
  return this.target;
},
 preventDefault$0: function() {
  return this.preventDefault();
}
});

$.$defineNativeClass('EventException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventSource', {"": ["url>"],
 get$on: function() {
  return $.EventSourceEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('EventTarget', {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.Events$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $$dom_dispatchEvent$1: function(event) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_dispatchEvent$1')) {
  {
  return this.dispatchEvent(event);
}
  } else {
    return Object.prototype.$$dom_dispatchEvent$1.call(this, event);
  }

},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('HTMLFieldSetElement', {"": ["elements>", "name>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('File', {"": ["name>"],
 is$File: function() { return true; }
});

$.$defineNativeClass('FileException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('FileReader', {"": ["error>"],
 get$on: function() {
  return $.FileReaderEvents$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); },
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriter', {"": ["error>", "length>"],
 get$on: function() {
  return $.FileWriterEvents$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); },
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriterSync', {"": ["length>"]
});

$.$defineNativeClass('Float32Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Float64Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', {"": ["size="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFormElement', {"": ["length>", "name>"],
 reset$0: function() {
  return this.reset();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', {"": ["height>", "location>", "name>", "src<", "width>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', {
 get$on: function() {
  return $.FrameSetElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Gamepad', {"": ["id>"]
});

$.$defineNativeClass('HTMLHRElement', {"": ["size=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAllCollection', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', {
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('HTMLHeadElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', {
 get$body: function() {
  return $.document().get$$$dom_body();
}
});

$.$defineNativeClass('HTMLHtmlElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('XMLHttpRequest', {"": ["response>", "responseType<", "status>"],
 get$on: function() {
  return $.HttpRequestEvents$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); },
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 open$5: function(method, url, async, user, password) {
  return this.open(method,url,async,user,password);
},
 open$2: function(method,url) {
  return this.open(method,url);
},
 open$3: function(method,url,async) {
  return this.open(method,url,async);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
},
 send$0: function() {
  return this.send();
}
});

$.$defineNativeClass('XMLHttpRequestException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequestProgressEvent', {"": ["totalSize>"]
});

$.$defineNativeClass('XMLHttpRequestUpload', {
 get$on: function() {
  return $.HttpRequestUploadEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBCursor', {"": ["key>"]
});

$.$defineNativeClass('IDBCursorWithValue', {"": ["value>"]
});

$.$defineNativeClass('IDBDatabase', {"": ["name>"],
 get$on: function() {
  return $.IDBDatabaseEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBDatabaseException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBFactory', {
 open$2: function(name, version) {
  return this.open(name,version);
}
});

$.$defineNativeClass('IDBIndex', {"": ["name>"],
 get$1: function(key) {
  var t1, t2;
  t1 = $ === key;
  if (t1)
    key = null;
  t1 = !t1;
  if (t1)
    t2 = typeof key === 'object' && key !== null && key.is$IDBKeyRange() || key == null;
  else
    t2 = false;
  if (t2)
    return this._get_1$1(key);
  if (t1)
    return this._get_2$1(key);
  throw $.$$throw($.ArgumentError$("Incorrect number or type of arguments"));
},
 _get_1$1: function(key) {
  return this.get(key);
},
 _get_2$1: function(key) {
  return this.get(key);
}
});

$.$defineNativeClass('IDBKeyRange', {
 is$IDBKeyRange: function() { return true; }
});

$.$defineNativeClass('IDBObjectStore', {"": ["name>"],
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($._convertDartToNative_PrepareForStructuredClone(value), key);
  return this._add_2$1($._convertDartToNative_PrepareForStructuredClone(value));
},
 add$1: function(value) {
  return this.add$2(value,$)
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('IDBOpenDBRequest', {
 get$on: function() {
  return $.IDBOpenDBRequestEvents$(this);
}
});

$.$defineNativeClass('IDBRequest', {"": ["error>"],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.IDBRequestEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBTransaction', {"": ["error>"],
 get$on: function() {
  return $.IDBTransactionEvents$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); },
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBVersionChangeRequest', {
 get$on: function() {
  return $.IDBVersionChangeRequestEvents$(this);
}
});

$.$defineNativeClass('HTMLIFrameElement', {"": ["height=", "name>", "src<", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ImageData', {"": ["height>", "width>"],
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', {"": ["height=", "name>", "src<", "width=", "x>", "y>"],
 complete$1: function(arg0) { return this.complete.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', {"": ["height=", "name>", "pattern>", "size=", "src<", "type<", "value=", "width="],
 get$on: function() {
  return $.InputElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int32Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int8Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('KeyboardEvent', {"": ["shiftKey>"]
});

$.$defineNativeClass('HTMLKeygenElement', {"": ["name>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', {"": ["type<", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', {"": ["href>", "type<"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('History', {"": ["length>", "state>"]
});

$.$defineNativeClass('Location', {"": ["hash>", "href>"],
 assign$1: function(url) {
  return this.assign(url);
},
 replace$1: function(url) {
  return this.replace(url);
},
 toString$0: function() {
  return this.toString();
},
 is$Location: function() { return true; }
});

$.$defineNativeClass('DOMWindow', {"": ["history>", "innerHeight>", "innerWidth>", "localStorage>", "name>", "navigator>", "status>"],
 get$document: function() {
  return this.document;
},
 open$3: function(url, name$, options) {
  if (options == null)
    return $._DOMWindowCrossFrame__createSafe(this.open(url,name$));
  else
    return $._DOMWindowCrossFrame__createSafe(this.open(url,name$,options));
},
 open$2: function(url,name$) {
  return this.open$3(url,name$,null)
},
 get$location: function() {
  var result = this.get$_location();
  if ($.LocalWindow__isDartLocation(result) === true)
    return result;
  if (null == this._location_wrapper)
    this._location_wrapper = $._LocationWrapper$(result);
  return this._location_wrapper;
},
 get$_location: function() {
  return this.location;
},
 requestAnimationFrame$1: function(callback) {
  this._ensureRequestAnimationFrame$0();
  return this._requestAnimationFrame$1(callback);
},
 _requestAnimationFrame$1: function(callback) {
  return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
},
 _ensureRequestAnimationFrame$0: function() {
  if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
    return;
    (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
},
 lookupPort$1: function(name$) {
  var port = $.JSON_parse($.index(this.get$document().get$documentElement().get$attributes(), "dart-port:" + name$));
  return $._JsDeserializer$().deserialize$1(port);
},
 registerPort$2: function(name$, port) {
  var serialized = $._JsSerializer$().traverse$1(port);
  $.indexSet(this.get$document().get$documentElement().get$attributes(), "dart-port:" + name$, $.JSON_stringify(serialized));
},
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 get$parent: function() {
  return $._convertNativeToDart_Window(this.get$_liblib$_parent());
},
 get$_liblib$_parent: function() {
  return this.parent;
},
 get$top: function() {
  return $._convertNativeToDart_Window(this.get$_top());
},
 get$_top: function() {
  return this.top;
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 clearInterval$1: function(handle) {
  return this.clearInterval(handle);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
},
 close$0: function() {
  return this.close();
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 _postMessage_1$2: function(message, targetOrigin) {
  return this.postMessage(message,targetOrigin);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('HTMLMapElement', {"": ["name>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', {"": ["height=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaController', {"": ["duration>"],
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', {"": ["duration>", "error>", "src<"],
 get$on: function() {
  return $.MediaElementEvents$(this);
},
 load$0: function() {
  return this.load();
},
 get$load: function() { return new $.BoundClosure0(this, 'load$0'); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaList', {"": ["length>"]
});

$.$defineNativeClass('MediaSource', {"": ["duration>"],
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStream', {
 get$on: function() {
  return $.MediaStreamEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrack', {
 get$on: function() {
  return $.MediaStreamTrackEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrackList', {"": ["length>"],
 get$on: function() {
  return $.MediaStreamTrackListEvents$(this);
},
 add$1: function(track) {
  return this.add(track);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 remove$1: function(track) {
  return this.remove(track);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMenuElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MessageEvent', {"": ["ports>"]
});

$.$defineNativeClass('MessagePort', {
 get$on: function() {
  return $.MessagePortEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMetaElement', {"": ["name>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Metadata', {"": ["size>"]
});

$.$defineNativeClass('HTMLMeterElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MouseEvent', {"": ["shiftKey>", "toElement>", "x>", "y>"],
 get$offsetX: function() {
  if (!!this.offsetX)
    return this.offsetX;
  else {
    var target = this.get$target();
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.UnsupportedError$("offsetX is only supported on elements"));
    return $.sub(this.clientX, this.get$target().getBoundingClientRect$0().get$left());
  }
},
 get$offsetY: function() {
  if (!!this.offsetY)
    return this.offsetY;
  else {
    var target = this.get$target();
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.UnsupportedError$("offsetY is only supported on elements"));
    return $.sub(this.clientY, this.get$target().getBoundingClientRect$0().get$top());
  }
}
});

$.$defineNativeClass('NamedNodeMap', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"": ["userAgent>"]
});

$.$defineNativeClass('Node', {
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
  {
  if (!(this.get$parent() == null))
    this.get$parent().$$dom_removeChild$1(this);
}
  } else {
    return Object.prototype.remove$0.call(this);
  }

},
 replaceWith$1: function(otherNode, exception) {
  var parent$;
  try {
    parent$ = this.get$parent();
    parent$.$$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 get$$$dom_attributes: function() {
  return this.attributes;
},
 get$$$dom_childNodes: function() {
  return this.childNodes;
},
 get$document: function() {
  return this.ownerDocument;
},
 get$parent: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
  {
  return this.parentNode;
}
  } else {
    return Object.prototype.get$parent.call(this);
  }

},
 set$text: function(value) {
  this.textContent = value;
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeIterator', {
 filter$1: function(arg0) { return this.filter.call$1(arg0); },
 filter$3: function(arg0, arg1, arg2) { return this.filter.call$3(arg0, arg1, arg2); }
});

$.$defineNativeClass('Notification', {
 get$on: function() {
  return $.NotificationEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLOListElement', {"": ["type<"],
 start$1: function(arg0) { return this.start.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', {"": ["height=", "name>", "type<", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptGroupElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OscillatorNode', {"": ["type<"],
 start$1: function(when) {
  return this.start(when);
}
});

$.$defineNativeClass('HTMLOutputElement', {"": ["name>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParagraphElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', {"": ["name>", "type<", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('PeerConnection00', {
 get$on: function() {
  return $.PeerConnection00Events$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebKitPoint', {"": ["x>", "y>"]
});

$.$defineNativeClass('PopStateEvent', {
 get$state: function() {
  return $._convertNativeToDart_SerializedScriptValue(this.get$_liblib$_state());
},
 get$_liblib$_state: function() {
  return this.state;
}
});

$.$defineNativeClass('HTMLPreElement', {"": ["width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLProgressElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ProgressEvent', {"": ["loaded>"]
});

$.$defineNativeClass('HTMLQuoteElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('RTCDataChannel', {
 get$on: function() {
  return $.RTCDataChannelEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCPeerConnection', {
 get$on: function() {
  return $.RTCPeerConnectionEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCSessionDescription', {"": ["type<"]
});

$.$defineNativeClass('RadioNodeList', {"": ["value="]
});

$.$defineNativeClass('Range', {
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('RangeException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Rect', {"": ["left>", "top>"]
});

$.$defineNativeClass('SQLResultSetRowList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Screen', {"": ["height>", "width>"]
});

$.$defineNativeClass('HTMLScriptElement', {"": ["src<", "type<"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ScriptProcessorNode', {
 get$on: function() {
  return $.ScriptProcessorNodeEvents$(this);
}
});

$.$defineNativeClass('ScriptProfileNode', {"": ["url>"],
 children$0: function() {
  return this.children();
},
 get$children: function() { return new $.BoundClosure0(this, 'children$0'); }
});

$.$defineNativeClass('HTMLSelectElement', {"": ["length=", "name>", "size=", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLShadowElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', {"": ["innerHTML<"]
});

$.$defineNativeClass('SharedWorkerContext', {"": ["name>"],
 get$on: function() {
  return $.SharedWorkerContextEvents$(this);
}
});

$.$defineNativeClass('SourceBuffer', {
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); }
});

$.$defineNativeClass('SourceBufferList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLSourceElement', {"": ["src<", "type<"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SpeechGrammar', {"": ["src<"]
});

$.$defineNativeClass('SpeechGrammarList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechRecognition', {
 get$on: function() {
  return $.SpeechRecognitionEvents$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() { return new $.BoundClosure0(this, 'abort$0'); },
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('SpeechRecognitionResult', {"": ["length>"]
});

$.$defineNativeClass('Storage', {
 containsKey$1: function(key) {
  return !(this.$$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$$dom_getItem$1(key);
},
 oprator$indexSet$2: function(key, value) {
  this.$$dom_setItem$2(key, value);
},
 putIfAbsent$2: function(key, ifAbsent) {
  if (this.$$dom_getItem$1(key) == null)
    this.oprator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$keys: function() {
  var keys = [];
  $.getInterceptor(this).forEach$1(this, new $.Storage_keys_anon(keys));
  return keys;
},
 get$values: function() {
  var values = [];
  $.getInterceptor(this).forEach$1(this, new $.Storage_values_anon(values));
  return values;
},
 get$length: function() {
  return this.get$$$dom_length();
},
 get$isEmpty: function() {
  return this.$$dom_key$1(0) == null;
},
 get$$$dom_length: function() {
  return this.length;
},
 $$dom_clear$0: function() {
  return this.clear();
},
 $$dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $$dom_key$1: function(index) {
  return this.key(index);
},
 $$dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $$dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"": ["key>", "url>"]
});

$.$defineNativeClass('HTMLStyleElement', {"": ["type<"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('StyleSheet', {"": ["href>"]
});

$.$defineNativeClass('HTMLTableCaptionElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', {"": ["height=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', {"": ["width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', {"": ["frame>", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTextAreaElement', {"": ["name>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('TextMetrics', {"": ["width>"]
});

$.$defineNativeClass('TextTrack', {
 get$on: function() {
  return $.TextTrackEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCue', {"": ["id>", "size="],
 get$on: function() {
  return $.TextTrackCueEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCueList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TextTrackList', {"": ["length>"],
 get$on: function() {
  return $.TextTrackListEvents$(this);
},
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('TimeRanges', {"": ["length>"],
 start$1: function(index) {
  return this.start(index);
}
});

$.$defineNativeClass('HTMLTitleElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Touch', {
 get$_target: function() {
  return this.target;
}
});

$.$defineNativeClass('TouchEvent', {"": ["shiftKey>"]
});

$.$defineNativeClass('TouchList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', {"": ["src<"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('TreeWalker', {
 filter$1: function(arg0) { return this.filter.call$1(arg0); },
 filter$3: function(arg0, arg1, arg2) { return this.filter.call$3(arg0, arg1, arg2); }
});

$.$defineNativeClass('UIEvent', {"": ["detail>", "keyCode>"]
});

$.$defineNativeClass('HTMLUListElement', {"": ["type<"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Uint16Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint32Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLUnknownElement', {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLVideoElement', {"": ["height=", "width="]
});

$.$defineNativeClass('WebGLActiveInfo', {"": ["name>", "size>"]
});

$.$defineNativeClass('WebGLRenderingContext', {
 clear$1: function(mask) {
  return this.clear(mask);
}
});

$.$defineNativeClass('WebKitNamedFlow', {"": ["name>"],
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebSocket', {"": ["url>"],
 get$on: function() {
  return $.WebSocketEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$2: function(code, reason) {
  return this.close(code,reason);
},
 close$0: function() {
  return this.close();
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('Worker', {
 get$on: function() {
  return $.WorkerEvents$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('WorkerContext', {"": ["location>", "navigator>"],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.WorkerContextEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 clearInterval$1: function(handle) {
  return this.clearInterval(handle);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
},
 close$0: function() {
  return this.close();
},
 $$dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('WorkerLocation', {"": ["hash>", "href>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', {"": ["userAgent>"]
});

$.$defineNativeClass('XPathException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XSLTProcessor', {
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('CSSRuleList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('CSSValueList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('ClientRectList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMStringList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 contains$1: function(string) {
  return this.contains(string);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArray', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArraySync', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('FileList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$_FileList: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('GamepadList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('MediaStreamList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('NodeList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputResultList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechRecognitionResultList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('StyleSheetList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('WebKitAnimationList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.getInterceptor(this).iterator$0(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Worker', {
 get$id: function() {
  return this.id;
},
 postMessage$1: function(msg) {
  return this.postMessage(msg);
}
});

$.$defineNativeClass('DOMWindow', {
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
},
 clearInterval$1: function(handle) {
  return this.clearInterval(handle);
}
});

$.$defineNativeClass('SVGAElement', {"": ["href>"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGAltGlyphElement', {"": ["href>"]
});

$.$defineNativeClass('SVGAngle', {"": ["value="]
});

$.$defineNativeClass('SVGAnimatedLengthList', {
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  var t1 = this.get$_Collections();
  return $.getInterceptor(t1).contains$2(t1, this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 map$1: function(f) {
  return this.get$_Collections().map$3(this, [], f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 every$1: function(f) {
  return this.get$_Collections().every$2(this, f);
},
 some$1: function(f) {
  return this.get$_Collections().some$2(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedNumberList', {
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  var t1 = this.get$_Collections();
  return $.getInterceptor(t1).contains$2(t1, this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 map$1: function(f) {
  return this.get$_Collections().map$3(this, [], f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 every$1: function(f) {
  return this.get$_Collections().every$2(this, f);
},
 some$1: function(f) {
  return this.get$_Collections().some$2(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedTransformList', {
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  var t1 = this.get$_Collections();
  return $.getInterceptor(t1).contains$2(t1, this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 map$1: function(f) {
  return this.get$_Collections().map$3(this, [], f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 every$1: function(f) {
  return this.get$_Collections().every$2(this, f);
},
 some$1: function(f) {
  return this.get$_Collections().some$2(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGCircleElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGClipPathElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGCursorElement', {"": ["x>", "y>", "href>"]
});

$.$defineNativeClass('SVGDefsElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGElementInstance', {
 get$on: function() {
  return $.ElementInstanceEvents$(this);
}
});

$.$defineNativeClass('SVGEllipseElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGFEBlendElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFECompositeElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"": ["height>", "width>", "x>", "y>"],
 scale$2: function(arg0, arg1) { return this.scale.call$2(arg0, arg1); },
 scale$1: function(arg0) { return this.scale.call$1(arg0); }
});

$.$defineNativeClass('SVGFEDropShadowElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEFloodElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEImageElement', {"": ["height>", "width>", "x>", "y>", "href>"]
});

$.$defineNativeClass('SVGFEMergeElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEMorphologyElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEOffsetElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEPointLightElement', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFESpotLightElement', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGFETileElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFETurbulenceElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFilterElement', {"": ["height>", "width>", "x>", "y>", "href>"]
});

$.$defineNativeClass('SVGForeignObjectElement', {"": ["height>", "width>", "x>", "y>"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGGElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGGlyphRefElement', {"": ["x>", "y>", "href>"]
});

$.$defineNativeClass('SVGGradientElement', {"": ["href>"]
});

$.$defineNativeClass('SVGImageElement', {"": ["height>", "width>", "x>", "y>", "href>"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGLength', {"": ["value="]
});

$.$defineNativeClass('SVGLengthList', {
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  var t1 = this.get$_Collections();
  return $.getInterceptor(t1).contains$2(t1, this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 map$1: function(f) {
  return this.get$_Collections().map$3(this, [], f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 every$1: function(f) {
  return this.get$_Collections().every$2(this, f);
},
 some$1: function(f) {
  return this.get$_Collections().some$2(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGLineElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGMPathElement', {"": ["href>"]
});

$.$defineNativeClass('SVGMaskElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGMatrix', {
 scale$1: function(scaleFactor) {
  return this.scale(scaleFactor);
},
 translate$2: function(x, y) {
  return this.translate(x,y);
}
});

$.$defineNativeClass('SVGNumber', {"": ["value="]
});

$.$defineNativeClass('SVGNumberList', {
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  var t1 = this.get$_Collections();
  return $.getInterceptor(t1).contains$2(t1, this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 map$1: function(f) {
  return this.get$_Collections().map$3(this, [], f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 every$1: function(f) {
  return this.get$_Collections().every$2(this, f);
},
 some$1: function(f) {
  return this.get$_Collections().some$2(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPathElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGPathSegArcAbs', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPathSegArcRel', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicAbs', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicRel', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothAbs', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothRel', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticAbs', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticRel', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothAbs', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothRel', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPathSegLinetoAbs', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalAbs', {"": ["x>"]
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalRel', {"": ["x>"]
});

$.$defineNativeClass('SVGPathSegLinetoRel', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPathSegLinetoVerticalAbs', {"": ["y>"]
});

$.$defineNativeClass('SVGPathSegLinetoVerticalRel', {"": ["y>"]
});

$.$defineNativeClass('SVGPathSegList', {
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  var t1 = this.get$_Collections();
  return $.getInterceptor(t1).contains$2(t1, this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 map$1: function(f) {
  return this.get$_Collections().map$3(this, [], f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 every$1: function(f) {
  return this.get$_Collections().every$2(this, f);
},
 some$1: function(f) {
  return this.get$_Collections().some$2(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPathSegMovetoAbs', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPathSegMovetoRel', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPatternElement', {"": ["height>", "width>", "x>", "y>", "href>"]
});

$.$defineNativeClass('SVGPoint', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGPointList', {
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPolygonElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGPolylineElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGRect', {"": ["height=", "width=", "x>", "y>"]
});

$.$defineNativeClass('SVGRectElement', {"": ["height>", "width>", "x>", "y>"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGScriptElement', {"": ["type<", "href>"]
});

$.$defineNativeClass('SVGStringList', {
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  var t1 = this.get$_Collections();
  return $.getInterceptor(t1).contains$2(t1, this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 map$1: function(f) {
  return this.get$_Collections().map$3(this, [], f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 every$1: function(f) {
  return this.get$_Collections().every$2(this, f);
},
 some$1: function(f) {
  return this.get$_Collections().some$2(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGStyleElement', {"": ["type<"]
});

$.$defineNativeClass('SVGDocument', {"": ["rootElement>"],
 $$dom_createEvent$1: function(eventType) {
  return this.createEvent(eventType);
}
});

$.$defineNativeClass('SVGElement', {
 get$elements: function() {
  return $.FilteredElementList$(this);
},
 get$children: function() {
  return $.FilteredElementList$(this);
},
 set$children: function(value) {
  var children = this.get$children();
  $.getInterceptor(children).clear$0(children);
  $.getInterceptor(children).addAll$1(children, value);
},
 set$innerHTML: function(svg) {
  var container = $.Element_Element$tag("div");
  container.set$innerHTML("<svg version=\"1.1\">" + $.S(svg) + "</svg>");
  this.set$children($.index(container.get$children(), 0).get$children());
},
 get$id: function() {
  return this.id;
}
});

$.$defineNativeClass('SVGSVGElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGSwitchElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGTRefElement', {"": ["href>"]
});

$.$defineNativeClass('SVGTextElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGTextPathElement', {"": ["href>"]
});

$.$defineNativeClass('SVGTextPositioningElement', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGTransformList', {
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  var t1 = this.get$_Collections();
  return $.getInterceptor(t1).contains$2(t1, this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 map$1: function(f) {
  return this.get$_Collections().map$3(this, [], f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 every$1: function(f) {
  return this.get$_Collections().every$2(this, f);
},
 some$1: function(f) {
  return this.get$_Collections().some$2(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGUseElement', {"": ["height>", "width>", "x>", "y>", "href>"],
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGViewSpec', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('SVGElementInstanceList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  var t1 = this.get$_Collections();
  return $.getInterceptor(t1).contains$2(t1, this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 map$1: function(f) {
  return this.get$_Collections().map$3(this, [], f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 every$1: function(f) {
  return this.get$_Collections().every$2(this, f);
},
 some$1: function(f) {
  return this.get$_Collections().some$2(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor(this).get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.getInterceptor(this).get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

// 324 dynamic classes.
// 421 classes
// 36 !leaf
(function() {
  var v0_Uint8Array = 'Uint8Array|Uint8ClampedArray', v1_TextPositioningElement = 'SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement', v2_GradientElement = 'SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement', v3_MediaElement = 'HTMLMediaElement|HTMLAudioElement|HTMLVideoElement', v4_SvgElement = [v1_TextPositioningElement, v2_GradientElement, 'SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGlyphRefElement|SVGHKernElement|SVGImageElement|SVGLineElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGPathElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement'].join('|'), v5_MouseEvent = 'MouseEvent|WheelEvent', v6_UIEvent = [v5_MouseEvent, 'UIEvent|CompositionEvent|KeyboardEvent|TextEvent|TouchEvent|SVGZoomEvent'].join('|'), v7_ProgressEvent = 'ProgressEvent|XMLHttpRequestProgressEvent', v8_Element = [v3_MediaElement, v4_SvgElement, 'Element|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement'].join('|'), v9_CharacterData = 'CharacterData|Text|CDATASection|Comment', v10_Document = 'Document|HTMLDocument|SVGDocument', v11_DocumentFragment = 'DocumentFragment|ShadowRoot', v12_Node = [v8_Element, v9_CharacterData, v10_Document, v11_DocumentFragment, 'Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction'].join('|'), v13_AbstractWorker = 'AbstractWorker|SharedWorker|Worker', v14_WorkerContext = 'WorkerContext|DedicatedWorkerContext|SharedWorkerContext', v15_IDBRequest = 'IDBRequest|IDBOpenDBRequest|IDBVersionChangeRequest', v16_MediaStream = 'MediaStream|LocalMediaStream';
  $.dynamicSetMetadata([['Uint8Array', v0_Uint8Array], ['WorkerContext', v14_WorkerContext], ['CSSValueList', 'CSSValueList|WebKitCSSTransformValue|WebKitCSSFilterValue'], ['NodeList', 'NodeList|RadioNodeList'], ['AbstractWorker', v13_AbstractWorker], ['ArrayBufferView', [v0_Uint8Array, 'ArrayBufferView|DataView|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|Uint16Array|Uint32Array'].join('|')], ['AudioNode', 'AudioNode|AnalyserNode|AudioSourceNode|AudioBufferSourceNode|MediaElementAudioSourceNode|MediaStreamAudioSourceNode|OscillatorNode|AudioDestinationNode|BiquadFilterNode|ChannelMergerNode|ChannelSplitterNode|ConvolverNode|DelayNode|DynamicsCompressorNode|GainNode|PannerNode|ScriptProcessorNode|WaveShaperNode'], ['AudioParam', 'AudioParam|AudioGain'], ['Blob', 'Blob|File'], ['CharacterData', v9_CharacterData], ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList'], ['Document', v10_Document], ['DocumentFragment', v11_DocumentFragment], ['HTMLMediaElement', v3_MediaElement], ['SVGTextPositioningElement', v1_TextPositioningElement], ['SVGGradientElement', v2_GradientElement], ['SVGElement', v4_SvgElement], ['Element', v8_Element], ['Entry', 'Entry|DirectoryEntry|FileEntry'], ['EntrySync', 'EntrySync|DirectoryEntrySync|FileEntrySync'], ['MouseEvent', v5_MouseEvent], ['UIEvent', v6_UIEvent], ['ProgressEvent', v7_ProgressEvent], ['Event', [v6_UIEvent, v7_ProgressEvent, 'Event|WebKitAnimationEvent|AudioProcessingEvent|BeforeLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|HashChangeEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent'].join('|')], ['Node', v12_Node], ['IDBRequest', v15_IDBRequest], ['MediaStream', v16_MediaStream], ['EventTarget', [v12_Node, v13_AbstractWorker, v14_WorkerContext, v15_IDBRequest, v16_MediaStream, 'EventTarget|AudioContext|BatteryManager|DOMApplicationCache|EventSource|FileReader|FileWriter|XMLHttpRequest|XMLHttpRequestUpload|IDBDatabase|IDBTransaction|DOMWindow|MediaController|MediaSource|MediaStreamTrack|MediaStreamTrackList|MessagePort|Notification|PeerConnection00|Performance|RTCDataChannel|RTCPeerConnection|SourceBufferList|SpeechRecognition|TextTrack|TextTrackCue|TextTrackList|WebKitNamedFlow|WebSocket|SVGElementInstance'].join('|')], ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection'], ['IDBCursor', 'IDBCursor|IDBCursorWithValue'], ['StyleSheet', 'StyleSheet|CSSStyleSheet']]);
})();

var $globalThis = $;
var $globalState;
var $globals;
var $isWorker = false;
var $supportsWorkers = false;
var $thisScriptUrl;
function $static_init(){};

function $initGlobals(context) {
  context.isolateStatics = new Isolate();
}
function $setGlobals(context) {
  $ = context.isolateStatics;
  $globalThis = $;
}
$.main.call$0 = $.main

//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastCharCode = field.charCodeAt(len - 1);
    var needsAccessor = (lastCharCode & 63) >= 60;
    if (needsAccessor) {
      var needsGetter = (lastCharCode & 3) > 0;
      var needsSetter = (lastCharCode & 2) == 0;
      var renaming = (lastCharCode & 64) != 0;
      var accessorName = field = field.substring(0, len - 1);
      if (renaming) {
        var divider = field.indexOf(":");
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (needsGetter) {
        var getterString = "return this." + field + ";";
        prototype["get$" + accessorName] = new Function(getterString);
      }
      if (needsSetter) {
        var setterString = "this." + field + " = v;";
        prototype["set$" + accessorName] = new Function("v", setterString);
      }
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''] || [], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=game.dart.js.map